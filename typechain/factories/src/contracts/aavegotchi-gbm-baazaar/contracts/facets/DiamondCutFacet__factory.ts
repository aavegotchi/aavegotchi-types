/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  DiamondCutFacet,
  DiamondCutFacetInterface,
} from "../../../../../../src/contracts/aavegotchi-gbm-baazaar/contracts/facets/DiamondCutFacet";

const _abi = [
  {
    inputs: [],
    name: "EmptyCalldata",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "ImmutableFunction",
    type: "error",
  },
  {
    inputs: [],
    name: "InValidFacetCutAction",
    type: "error",
  },
  {
    inputs: [],
    name: "InitCallFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "MustBeZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NoCode",
    type: "error",
  },
  {
    inputs: [],
    name: "NoSelectorsInFacet",
    type: "error",
  },
  {
    inputs: [],
    name: "NoZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "NonEmptyCalldata",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "NonExistentSelector",
    type: "error",
  },
  {
    inputs: [],
    name: "NotDiamondOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "SameSelectorReplacement",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "SelectorExists",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        indexed: false,
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "DiamondCut",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "diamondCut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506110e1806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80631f931c1c14610030575b600080fd5b61004361003e366004610bc5565b610045565b005b61004d61009e565b61009761005a8587610d0b565b8484848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506100db92505050565b5050505050565b60008051602061108c833981519152600401546001600160a01b031633146100d957604051630305808160e41b815260040160405180910390fd5b565b60005b83518110156102615760008482815181106100fb576100fb610e4f565b60200260200101516020015190506000600281111561011c5761011c610e65565b81600281111561012e5761012e610e65565b0361017c5761017785838151811061014857610148610e4f565b60200260200101516000015186848151811061016657610166610e4f565b6020026020010151604001516102ac565b61024e565b600181600281111561019057610190610e65565b036101d9576101778583815181106101aa576101aa610e4f565b6020026020010151600001518684815181106101c8576101c8610e4f565b6020026020010151604001516103ea565b60028160028111156101ed576101ed610e65565b036102365761017785838151811061020757610207610e4f565b60200260200101516000015186848151811061022557610225610e4f565b602002602001015160400151610533565b60405162c5e5d760e31b815260040160405180910390fd5b508061025981610e91565b9150506100de565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67383838360405161029593929190610f02565b60405180910390a16102a78282610604565b505050565b60008151116102ce5760405163092d2fe560e41b815260040160405180910390fd5b60008051602061108c8339815191526001600160a01b0383166103045760405163ddbadd5f60e01b815260040160405180910390fd5b6001600160a01b0383166000908152600182016020526040812054906001600160601b038216900361033a5761033a8285610710565b60005b835181101561009757600084828151811061035a5761035a610e4f565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b031680156103bc5760405163501e70c760e01b81526001600160e01b0319831660048201526024015b60405180910390fd5b6103c88583868a610761565b836103d281611002565b945050505080806103e290610e91565b91505061033d565b600081511161040c5760405163092d2fe560e41b815260040160405180910390fd5b60008051602061108c8339815191526001600160a01b0383166104425760405163ddbadd5f60e01b815260040160405180910390fd5b6001600160a01b0383166000908152600182016020526040812054906001600160601b0382169003610478576104788285610710565b60005b835181101561009757600084828151811061049857610498610e4f565b6020908102919091018101516001600160e01b031981166000908152918690526040909120549091506001600160a01b0390811690871681036104fa57604051631c04188b60e31b81526001600160e01b0319831660048201526024016103b3565b610505858284610801565b6105118583868a610761565b8361051b81611002565b9450505050808061052b90610e91565b91505061047b565b60008151116105555760405163092d2fe560e41b815260040160405180910390fd5b60008051602061108c8339815191526001600160a01b0383161561058c57604051631be65fe560e21b815260040160405180910390fd5b60005b82518110156105fe5760008382815181106105ac576105ac610e4f565b6020908102919091018101516001600160e01b031981166000908152918590526040909120549091506001600160a01b03166105e9848284610801565b505080806105f690610e91565b91505061058f565b50505050565b6001600160a01b038216610636578051156106325760405163c21b1ab760e01b815260040160405180910390fd5b5050565b805160000361065857604051633011e86160e21b815260040160405180910390fd5b6001600160a01b03821630146106715761067182610b40565b600080836001600160a01b03168360405161068c9190611028565b600060405180830381855af49150503d80600081146106c7576040519150601f19603f3d011682016040523d82523d6000602084013e6106cc565b606091505b5091509150816105fe578051156106f7578060405162461bcd60e51b81526004016103b39190611044565b604051633a18f8dd60e01b815260040160405180910390fd5b61071981610b40565b6002820180546001600160a01b0390921660008181526001948501602090815260408220860185905594840183559182529290200180546001600160a01b0319169091179055565b6001600160e01b0319831660008181526020868152604080832080546001600160601b03909716600160a01b026001600160a01b0397881617815594909516808352600180890183529583208054968701815583528183206008870401805460e09890981c60046007909816979097026101000a96870263ffffffff9097021990971695909517909555529290915281546001600160a01b031916179055565b6001600160a01b03821661083357604051622902d360e91b81526001600160e01b0319821660048201526024016103b3565b306001600160a01b038316036108685760405163069731c560e41b81526001600160e01b0319821660048201526024016103b3565b6001600160e01b03198116600090815260208481526040808320546001600160a01b0386168452600180880190935290832054600160a01b9091046001600160601b031692916108b79161105e565b90508082146109a9576001600160a01b038416600090815260018601602052604081208054839081106108ec576108ec610e4f565b600091825260208083206008830401546001600160a01b038916845260018a019091526040909220805460079092166004026101000a90920460e01b92508291908590811061093d5761093d610e4f565b600091825260208083206008830401805463ffffffff60079094166004026101000a938402191660e09590951c929092029390931790556001600160e01b03199290921682528690526040902080546001600160a01b0316600160a01b6001600160601b038516021790555b6001600160a01b038416600090815260018601602052604090208054806109d2576109d2611075565b60008281526020808220600860001990940193840401805463ffffffff600460078716026101000a0219169055919092556001600160e01b03198516825286905260408120819055819003610097576002850154600090610a359060019061105e565b6001600160a01b0386166000908152600180890160205260409091200154909150808214610ae4576000876002018381548110610a7457610a74610e4f565b6000918252602090912001546002890180546001600160a01b039092169250829184908110610aa557610aa5610e4f565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055929091168152600189810190925260409020018190555b86600201805480610af757610af7611075565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b0388168252600189810190915260408220015550505050505050565b803b8061063257604051633c11a9c560e21b815260040160405180910390fd5b80356001600160a01b0381168114610b7757600080fd5b919050565b60008083601f840112610b8e57600080fd5b50813567ffffffffffffffff811115610ba657600080fd5b602083019150836020828501011115610bbe57600080fd5b9250929050565b600080600080600060608688031215610bdd57600080fd5b853567ffffffffffffffff80821115610bf557600080fd5b818801915088601f830112610c0957600080fd5b813581811115610c1857600080fd5b8960208260051b8501011115610c2d57600080fd5b60208301975080965050610c4360208901610b60565b94506040880135915080821115610c5957600080fd5b50610c6688828901610b7c565b969995985093965092949392505050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715610cb057610cb0610c77565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610cdf57610cdf610c77565b604052919050565b600067ffffffffffffffff821115610d0157610d01610c77565b5060051b60200190565b6000610d1e610d1984610ce7565b610cb6565b83815260208082019190600586811b860136811115610d3c57600080fd5b865b81811015610e4257803567ffffffffffffffff80821115610d5f5760008081fd5b818a01915060608236031215610d755760008081fd5b610d7d610c8d565b610d8683610b60565b81528683013560038110610d9a5760008081fd5b8188015260408381013583811115610db25760008081fd5b939093019236601f850112610dc957600092508283fd5b83359250610dd9610d1984610ce7565b83815292871b84018801928881019036851115610df65760008081fd5b948901945b84861015610e2b5785356001600160e01b031981168114610e1c5760008081fd5b82529489019490890190610dfb565b918301919091525088525050948301948301610d3e565b5092979650505050505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610ea357610ea3610e7b565b5060010190565b60005b83811015610ec5578181015183820152602001610ead565b838111156105fe5750506000910152565b60008151808452610eee816020860160208601610eaa565b601f01601f19169290920160200192915050565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b84811015610fd257898403607f19018652815180516001600160a01b03168552838101518986019060038110610f7157634e487b7160e01b600052602160045260246000fd5b868601526040918201519186018a905281519081905290840190600090898701905b80831015610fbd5783516001600160e01b0319168252928601926001929092019190860190610f93565b50978501979550505090820190600101610f2b565b50506001600160a01b038a16908801528681036040880152610ff48189610ed6565b9a9950505050505050505050565b60006001600160601b0380831681810361101e5761101e610e7b565b6001019392505050565b6000825161103a818460208701610eaa565b9190910192915050565b6020815260006110576020830184610ed6565b9392505050565b60008282101561107057611070610e7b565b500390565b634e487b7160e01b600052603160045260246000fdfec8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131ca26469706673582212209cc1981fa4c5b3cc2a4bcebf58afddaeb8e3b72bb8856a41ee203f2a2d57bf6464736f6c634300080d0033";

type DiamondCutFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiamondCutFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DiamondCutFacet__factory extends ContractFactory {
  constructor(...args: DiamondCutFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DiamondCutFacet> {
    return super.deploy(overrides || {}) as Promise<DiamondCutFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DiamondCutFacet {
    return super.attach(address) as DiamondCutFacet;
  }
  override connect(signer: Signer): DiamondCutFacet__factory {
    return super.connect(signer) as DiamondCutFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondCutFacetInterface {
    return new utils.Interface(_abi) as DiamondCutFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiamondCutFacet {
    return new Contract(address, _abi, signerOrProvider) as DiamondCutFacet;
  }
}
