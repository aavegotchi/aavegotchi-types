/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  ERC721Generic,
  ERC721GenericInterface,
} from "../../../../../../src/contracts/aavegotchi-gbm-baazaar/contracts/test/ERC721Generic";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_approved",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50600480546001600160a01b0319163317905560408051808201909152600e8082526d47656e657269632045524337323160901b60209092019182526200005b9160009162000092565b506040805180820190915260068082526547454e37323160d01b60209092019182526200008b9160019162000092565b5062000174565b828054620000a09062000138565b90600052602060002090601f016020900481019282620000c457600085556200010f565b82601f10620000df57805160ff19168380011785556200010f565b828001600101855582156200010f579182015b828111156200010f578251825591602001919060010190620000f2565b506200011d92915062000121565b5090565b5b808211156200011d576000815560010162000122565b600181811c908216806200014d57607f821691505b6020821081036200016e57634e487b7160e01b600052602260045260246000fd5b50919050565b610f8a80620001846000396000f3fe6080604052600436106100fe5760003560e01c80636a62784211610095578063a0712d6811610064578063a0712d68146102ba578063a22cb465146102da578063b88d4fde146102fa578063c4e41b221461030d578063e985e9c51461032257600080fd5b80636a6278421461023857806370a08231146102585780638da5cb5b1461028557806395d89b41146102a557600080fd5b806318160ddd116100d157806318160ddd146101ce57806323b872dd146101f257806342842e0e146102055780636352211e1461021857600080fd5b806301ffc9a71461010357806306fdde0314610149578063081812fc1461016b578063095ea7b3146101b9575b600080fd5b34801561010f57600080fd5b5061013461011e366004610c1e565b6001600160e01b0319166380ac58cd60e01b1490565b60405190151581526020015b60405180910390f35b34801561015557600080fd5b5061015e61036b565b6040516101409190610c8f565b34801561017757600080fd5b506101a1610186366004610ca2565b6000908152600660205260409020546001600160a01b031690565b6040516001600160a01b039091168152602001610140565b6101cc6101c7366004610cd7565b6103f9565b005b3480156101da57600080fd5b506101e460035481565b604051908152602001610140565b6101cc610200366004610d01565b610528565b6101cc610213366004610d01565b610538565b34801561022457600080fd5b506101a1610233366004610ca2565b610553565b34801561024457600080fd5b506101e4610253366004610d3d565b61060a565b34801561026457600080fd5b506101e4610273366004610d3d565b60026020526000908152604090205481565b34801561029157600080fd5b506004546101a1906001600160a01b031681565b3480156102b157600080fd5b5061015e6106ac565b3480156102c657600080fd5b506101e46102d5366004610ca2565b6106b9565b3480156102e657600080fd5b506101cc6102f5366004610d58565b61076b565b6101cc610308366004610d94565b6107d7565b34801561031957600080fd5b506003546101e4565b34801561032e57600080fd5b5061013461033d366004610e2f565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b6000805461037890610e62565b80601f01602080910402602001604051908101604052809291908181526020018280546103a490610e62565b80156103f15780601f106103c6576101008083540402835291602001916103f1565b820191906000526020600020905b8154815290600101906020018083116103d457829003601f168201915b505050505081565b6000818152600560205260409020546001600160a01b031633148061044a57506000818152600560209081526040808320546001600160a01b031683526007825280832033845290915290205460ff165b6104c15760405162461bcd60e51b815260206004820152603760248201527f617070726f76653a206d73672e73656e646572206973206e6f7420616c6c6f7760448201527f656420746f20617070726f76652074686520746f6b656e00000000000000000060648201526084015b60405180910390fd5b600081815260066020908152604080832080546001600160a01b0319166001600160a01b038781169182179092556005909352818420549151859492909116917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a45050565b610533838383610820565b505050565b61053383838360405180602001604052806000815250610b1f565b6000818152600560205260408120546001600160a01b03166105ee5760405162461bcd60e51b815260206004820152604860248201527f6f776e65724f663a20455243373231204e4654732061737369676e656420746f60448201527f20746865207a65726f20616464726573732061726520636f6e73696465726564606482015267081a5b9d985b1a5960c21b608482015260a4016104b8565b506000908152600560205260409020546001600160a01b031690565b33600090815260026020526040812054610625906001610eb2565b6001600160a01b038316600090815260026020908152604080832093909355600380548352600590915291812080546001600160a01b031916331790558154919061066f83610eca565b909155505060035460405133906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a4505060035490565b6001805461037890610e62565b6003546000906106c98382610eb2565b600355336000908152600260205260409020546106e7908490610eb2565b336000908152600260205260409020555b600354811015610761578061070c81610eca565b60008181526005602052604080822080546001600160a01b031916339081179091559051929450849350917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a46106f8565b5050600354919050565b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61081985858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610b1f92505050565b5050505050565b6001600160a01b0382166108ad5760405162461bcd60e51b815260206004820152604860248201527f7472616e7366657246726f6d496e7465726e616c3a20546f6b656e732063616e60448201527f6e6f742062652073656e6420746f203078302e205573652030786465616420696064820152676e7374656164203f60c01b608482015260a4016104b8565b6000818152600560205260409020546001600160a01b0384811691161461093c5760405162461bcd60e51b815260206004820152603960248201527f7472616e7366657246726f6d496e7465726e616c3a205f66726f6d206973206e60448201527f6f7420746865206f776e6572206f662074686520746f6b656e0000000000000060648201526084016104b8565b6000818152600560205260409020546001600160a01b031633148061098d57506000818152600560209081526040808320546001600160a01b031683526007825280832033845290915290205460ff165b806109ae57506000818152600660205260409020546001600160a01b031633145b610a305760405162461bcd60e51b815260206004820152604760248201527f7472616e7366657246726f6d496e7465726e616c3a206d73672e73656e64657260448201527f206973206e6f7420616c6c6f77656420746f206d616e6970756c61746520746860648201526632903a37b5b2b760c91b608482015260a4016104b8565b6001600160a01b03831615610a7e576001600160a01b038316600090815260026020526040902054610a6490600190610ee3565b6001600160a01b0384166000908152600260205260409020555b6001600160a01b038216600090815260026020526040902054610aa2906001610eb2565b6001600160a01b038084166000818152600260209081526040808320959095558582526006815284822080546001600160a01b031990811690915560059091528482208054909116831790559251849391928716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610b2a848484610820565b610b3383610bc9565b15610bc357604051630a85bd0160e11b808252906001600160a01b0385169063150b7a0290610b6c903390899088908890600401610efa565b6020604051808303816000875af1158015610b8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610baf9190610f37565b6001600160e01b03191614610bc357600080fd5b50505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610bfd57508115155b949350505050565b6001600160e01b031981168114610c1b57600080fd5b50565b600060208284031215610c3057600080fd5b8135610c3b81610c05565b9392505050565b6000815180845260005b81811015610c6857602081850181015186830182015201610c4c565b81811115610c7a576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610c3b6020830184610c42565b600060208284031215610cb457600080fd5b5035919050565b80356001600160a01b0381168114610cd257600080fd5b919050565b60008060408385031215610cea57600080fd5b610cf383610cbb565b946020939093013593505050565b600080600060608486031215610d1657600080fd5b610d1f84610cbb565b9250610d2d60208501610cbb565b9150604084013590509250925092565b600060208284031215610d4f57600080fd5b610c3b82610cbb565b60008060408385031215610d6b57600080fd5b610d7483610cbb565b915060208301358015158114610d8957600080fd5b809150509250929050565b600080600080600060808688031215610dac57600080fd5b610db586610cbb565b9450610dc360208701610cbb565b935060408601359250606086013567ffffffffffffffff80821115610de757600080fd5b818801915088601f830112610dfb57600080fd5b813581811115610e0a57600080fd5b896020828501011115610e1c57600080fd5b9699959850939650602001949392505050565b60008060408385031215610e4257600080fd5b610e4b83610cbb565b9150610e5960208401610cbb565b90509250929050565b600181811c90821680610e7657607f821691505b602082108103610e9657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610ec557610ec5610e9c565b500190565b600060018201610edc57610edc610e9c565b5060010190565b600082821015610ef557610ef5610e9c565b500390565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610f2d90830184610c42565b9695505050505050565b600060208284031215610f4957600080fd5b8151610c3b81610c0556fea2646970667358221220811862e43b54114c9709fd25ae4c8914ec7f9ef1c64ecee7e70a90675e54756764736f6c634300080d0033";

type ERC721GenericConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721GenericConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Generic__factory extends ContractFactory {
  constructor(...args: ERC721GenericConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Generic> {
    return super.deploy(overrides || {}) as Promise<ERC721Generic>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC721Generic {
    return super.attach(address) as ERC721Generic;
  }
  override connect(signer: Signer): ERC721Generic__factory {
    return super.connect(signer) as ERC721Generic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721GenericInterface {
    return new utils.Interface(_abi) as ERC721GenericInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Generic {
    return new Contract(address, _abi, signerOrProvider) as ERC721Generic;
  }
}
