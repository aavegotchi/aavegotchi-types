/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IRewardsController,
  IRewardsControllerInterface,
} from "../../../../../../src/contracts/ghst-staking/contracts/interfaces/IRewardsController";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "reward",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardsClaimed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "assets",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "claimAllRewards",
    outputs: [
      {
        internalType: "address[]",
        name: "rewardsList",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "claimedAmounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IRewardsController__factory {
  static readonly abi = _abi;
  static createInterface(): IRewardsControllerInterface {
    return new utils.Interface(_abi) as IRewardsControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IRewardsController {
    return new Contract(address, _abi, signerOrProvider) as IRewardsController;
  }
}
