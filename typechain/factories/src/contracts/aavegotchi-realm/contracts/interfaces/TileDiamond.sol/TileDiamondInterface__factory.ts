/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  TileDiamondInterface,
  TileDiamondInterfaceInterface,
} from "../../../../../../../src/contracts/aavegotchi-realm/contracts/interfaces/TileDiamond.sol/TileDiamondInterface";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "width",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "height",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "deprecated",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "tileType",
            type: "uint16",
          },
          {
            internalType: "uint256[4]",
            name: "alchemicaCost",
            type: "uint256[4]",
          },
          {
            internalType: "uint256",
            name: "craftTime",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct TileDiamondInterface.TileType[]",
        name: "_tileTypes",
        type: "tuple[]",
      },
    ],
    name: "addTileTypes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "bal_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_queueIds",
        type: "uint256[]",
      },
    ],
    name: "claimTiles",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_tileTypes",
        type: "uint256[]",
      },
    ],
    name: "craftTiles",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_realmTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tileId",
        type: "uint256",
      },
    ],
    name: "equipTile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAlchemicaAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_itemId",
        type: "uint256",
      },
    ],
    name: "getTileType",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "width",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "height",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "deprecated",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "tileType",
            type: "uint16",
          },
          {
            internalType: "uint256[4]",
            name: "alchemicaCost",
            type: "uint256[4]",
          },
          {
            internalType: "uint256",
            name: "craftTime",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct TileDiamondInterface.TileType",
        name: "tileType",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_itemIds",
        type: "uint256[]",
      },
    ],
    name: "getTileTypes",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "width",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "height",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "deprecated",
            type: "bool",
          },
          {
            internalType: "uint16",
            name: "tileType",
            type: "uint16",
          },
          {
            internalType: "uint256[4]",
            name: "alchemicaCost",
            type: "uint256[4]",
          },
          {
            internalType: "uint256",
            name: "craftTime",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
        ],
        internalType: "struct TileDiamondInterface.TileType[]",
        name: "itemTypes_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
    ],
    name: "tileBalancesOfTokenByIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "tilesBalances",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "tileId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
        ],
        internalType: "struct TileDiamondInterface.TileIdIO[]",
        name: "bals_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_realmId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_tileId",
        type: "uint256",
      },
    ],
    name: "unequipTile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class TileDiamondInterface__factory {
  static readonly abi = _abi;
  static createInterface(): TileDiamondInterfaceInterface {
    return new utils.Interface(_abi) as TileDiamondInterfaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TileDiamondInterface {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TileDiamondInterface;
  }
}
