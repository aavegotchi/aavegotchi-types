/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../../common";
import type {
  ERC1155Facet,
  ERC1155FacetInterface,
} from "../../../../../../../src/contracts/aavegotchi-realm/contracts/InstallationDiamond/facets/ERC1155Facet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "bal_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "bals",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "operators_",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_value",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611974806100206000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c806355f804b31161005b57806355f804b314610129578063a22cb4651461013c578063e985e9c51461014f578063f242432a1461019b57600080fd5b8062fdd58e1461008c5780630e89341c146100d45780632eb2c2d6146100f45780634e1273f414610109575b600080fd5b6100c161009a366004611233565b6001600160a01b039091166000908152600e60209081526040808320938352929052205490565b6040519081526020015b60405180910390f35b6100e76100e236600461125d565b6101ae565b6040516100cb91906112ce565b610107610102366004611376565b6102b2565b005b61011c610117366004611431565b6105c3565b6040516100cb919061149d565b6101076101373660046114f7565b610736565b61010761014a3660046115a8565b6107b8565b61018b61015d3660046115e4565b6001600160a01b039182166000908152600a6020908152604080832093909416825291909152205460ff1690565b60405190151581526020016100cb565b6101076101a9366004611617565b6108aa565b60075460609082106102155760405162461bcd60e51b815260206004820152602560248201527f496e7374616c6c6174696f6e46616365743a204974656d205f6964206e6f7420604482015264199bdd5b9960da1b60648201526084015b60405180910390fd5b6102ac600060060180546102289061168f565b80601f01602080910402602001604051908101604052809291908181526020018280546102549061168f565b80156102a15780601f10610276576101008083540402835291602001916102a1565b820191906000526020600020905b81548152906001019060200180831161028457829003601f168201915b505050505083610b0e565b92915050565b6001600160a01b03871661031b5760405162461bcd60e51b815260206004820152602a60248201527f4974656d735472616e736665723a2043616e2774207472616e7366657220746f6044820152692030206164647265737360b01b606482015260840161020c565b84831461037f5760405162461bcd60e51b815260206004820152602c60248201527f4974656d735472616e736665723a20696473206e6f742073616d65206c656e6760448201526b74682061732076616c75657360a01b606482015260840161020c565b6000610389610c1e565b9050886001600160a01b0316816001600160a01b031614806103d057506001600160a01b03808a166000908152600a602090815260408083209385168352929052205460ff165b61043a5760405162461bcd60e51b815260206004820152603560248201527f4974656d735472616e736665723a204e6f74206f776e657220616e64206e6f746044820152741030b8383937bb32b2103a37903a3930b739b332b960591b606482015260840161020c565b60005b86811015610516576000888883818110610459576104596116ca565b9050602002013590506000878784818110610476576104766116ca565b90506020020135905061048a8c8383610c7b565b6104958b8383610ec5565b60015460405163e9a8887f60e01b8152306004820152602481018490526001600160a01b038e811660448301529091169063e9a8887f90606401600060405180830381600087803b1580156104e957600080fd5b505af11580156104fd573d6000803e3d6000fd5b505050505050808061050e906116f6565b91505061043d565b50876001600160a01b0316896001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8a8a8a8a60405161056a9493929190611747565b60405180910390a46105b8818a8a8a8a8a8a8a8a8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610f7792505050565b505050505050505050565b606083821461063a5760405162461bcd60e51b815260206004820152603960248201527f496e7374616c6c6174696f6e46616365743a205f6f776e657273206c656e677460448201527f68206e6f742073616d65206173205f696473206c656e67746800000000000000606482015260840161020c565b8367ffffffffffffffff811115610653576106536114e1565b60405190808252806020026020018201604052801561067c578160200160208202803683370190505b50905060005b8481101561072d57600084848381811061069e5761069e6116ca565b90506020020135905060008787848181106106bb576106bb6116ca565b90506020020160208101906106d09190611779565b6001600160a01b0381166000908152600e6020908152604080832086845290915290205485519192509085908590811061070c5761070c6116ca565b60200260200101818152505050508080610725906116f6565b915050610682565b50949350505050565b61073e611038565b805161075190600690602084019061117e565b5060075460005b818110156107b357807f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b61078c8584610b0e565b60405161079991906112ce565b60405180910390a2806107ab816116f6565b915050610758565b505050565b60006107c2610c1e565b9050826001600160a01b0316816001600160a01b0316141561083d5760405162461bcd60e51b815260206004820152602e60248201527f4552433131353546616365743a2073657474696e6720617070726f76616c207360448201526d3a30ba3ab9903337b91039b2b63360911b606482015260840161020c565b6001600160a01b038181166000818152600a6020908152604080832094881680845294825291829020805460ff191687151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0385166109125760405162461bcd60e51b815260206004820152602960248201527f4552433131353546616365743a2043616e2774207472616e7366657220746f2060448201526830206164647265737360b81b606482015260840161020c565b600061091c610c1e565b9050866001600160a01b0316816001600160a01b0316148061096357506001600160a01b038088166000908152600a602090815260408083209385168352929052205460ff165b8061097657506001600160a01b03811630145b6109df5760405162461bcd60e51b815260206004820152603460248201527f4552433131353546616365743a204e6f74206f776e657220616e64206e6f742060448201527330b8383937bb32b2103a37903a3930b739b332b960611b606482015260840161020c565b6109ea878686610c7b565b6109f5868686610ec5565b60015460405163e9a8887f60e01b8152306004820152602481018790526001600160a01b0389811660448301529091169063e9a8887f90606401600060405180830381600087803b158015610a4957600080fd5b505af1158015610a5d573d6000803e3d6000fd5b50505050856001600160a01b0316876001600160a01b0316826001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628888604051610ab9929190918252602082015260400190565b60405180910390a4610b05818888888888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506110c192505050565b50505050505050565b60608082610b3e5783604051602001610b279190611794565b6040516020818303038152906040529150506102ac565b8260005b8115610b5657600101600a82049150610b42565b8067ffffffffffffffff811115610b6f57610b6f6114e1565b6040519080825280601f01601f191660200182016040528015610b99576020820181803683370190505b50925084915060001981015b8215610bf057600a830660300160f81b84828060019003935081518110610bce57610bce6116ca565b60200101906001600160f81b031916908160001a905350600a83049250610ba5565b5050508381604051602001610c069291906117b9565b60405160208183030381529060405291505092915050565b600033301415610c7557600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b03169150610c789050565b50335b90565b6001600160a01b0383166000908152600e6020908152604080832085845290915281205480831115610d065760405162461bcd60e51b815260206004820152602e60248201527f4c6962455243313135353a20446f65736e277420686176652074686174206d6160448201526d373c903a37903a3930b739b332b960911b606482015260840161020c565b610d1083826117e8565b6001600160a01b0386166000908152600e8401602090815260408083208884529091529020819055905080610ebe576001600160a01b03851660009081526010830160209081526040808320878452909152812054610d71906001906117e8565b6001600160a01b0387166000908152600f8501602052604081205491925090610d9c906001906117e8565b9050808214610e57576001600160a01b0387166000908152600f850160205260408120805483908110610dd157610dd16116ca565b906000526020600020015490508085600f0160008a6001600160a01b03166001600160a01b031681526020019081526020016000208481548110610e1757610e176116ca565b600091825260209091200155610e2e8360016117ff565b6001600160a01b0389166000908152601087016020908152604080832094835293905291909120555b6001600160a01b0387166000908152600f850160205260409020805480610e8057610e80611817565b6000828152602080822083016000199081018390559092019092556001600160a01b0389168252601086018152604080832089845290915281205550505b5050505050565b6001600160a01b0383166000908152600e60209081526040808320858452909152812080548391908390610efa9084906117ff565b90915550506001600160a01b03841660009081526010820160209081526040808320868452909152902054610f71576001600160a01b0384166000818152600f8301602090815260408083208054600181018255818552838520018890559383529254601085018252838320878452909152919020555b50505050565b853b80156105b85760405163bc197c8160e01b81526001600160a01b0388169063bc197c8190610fb7908c908c908b908b908b908b908b9060040161182d565b602060405180830381600087803b158015610fd157600080fd5b505af1158015610fe5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611009919061188f565b6001600160e01b03191663bc197c8160e01b146105b85760405162461bcd60e51b815260040161020c906118b9565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c600401546001600160a01b031633146110bf5760405162461bcd60e51b815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201526132b960f11b606482015260840161020c565b565b833b8015610b055760405163f23a6e6160e01b81526001600160a01b0386169063f23a6e61906110fd908a908a90899089908990600401611904565b602060405180830381600087803b15801561111757600080fd5b505af115801561112b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114f919061188f565b6001600160e01b03191663f23a6e6160e01b14610b055760405162461bcd60e51b815260040161020c906118b9565b82805461118a9061168f565b90600052602060002090601f0160209004810192826111ac57600085556111f2565b82601f106111c557805160ff19168380011785556111f2565b828001600101855582156111f2579182015b828111156111f25782518255916020019190600101906111d7565b506111fe929150611202565b5090565b5b808211156111fe5760008155600101611203565b80356001600160a01b038116811461122e57600080fd5b919050565b6000806040838503121561124657600080fd5b61124f83611217565b946020939093013593505050565b60006020828403121561126f57600080fd5b5035919050565b60005b83811015611291578181015183820152602001611279565b83811115610f715750506000910152565b600081518084526112ba816020860160208601611276565b601f01601f19169290920160200192915050565b6020815260006112e160208301846112a2565b9392505050565b60008083601f8401126112fa57600080fd5b50813567ffffffffffffffff81111561131257600080fd5b6020830191508360208260051b850101111561132d57600080fd5b9250929050565b60008083601f84011261134657600080fd5b50813567ffffffffffffffff81111561135e57600080fd5b60208301915083602082850101111561132d57600080fd5b60008060008060008060008060a0898b03121561139257600080fd5b61139b89611217565b97506113a960208a01611217565b9650604089013567ffffffffffffffff808211156113c657600080fd5b6113d28c838d016112e8565b909850965060608b01359150808211156113eb57600080fd5b6113f78c838d016112e8565b909650945060808b013591508082111561141057600080fd5b5061141d8b828c01611334565b999c989b5096995094979396929594505050565b6000806000806040858703121561144757600080fd5b843567ffffffffffffffff8082111561145f57600080fd5b61146b888389016112e8565b9096509450602087013591508082111561148457600080fd5b50611491878288016112e8565b95989497509550505050565b6020808252825182820181905260009190848201906040850190845b818110156114d5578351835292840192918401916001016114b9565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561150957600080fd5b813567ffffffffffffffff8082111561152157600080fd5b818401915084601f83011261153557600080fd5b813581811115611547576115476114e1565b604051601f8201601f19908116603f0116810190838211818310171561156f5761156f6114e1565b8160405282815287602084870101111561158857600080fd5b826020860160208301376000928101602001929092525095945050505050565b600080604083850312156115bb57600080fd5b6115c483611217565b9150602083013580151581146115d957600080fd5b809150509250929050565b600080604083850312156115f757600080fd5b61160083611217565b915061160e60208401611217565b90509250929050565b60008060008060008060a0878903121561163057600080fd5b61163987611217565b955061164760208801611217565b94506040870135935060608701359250608087013567ffffffffffffffff81111561167157600080fd5b61167d89828a01611334565b979a9699509497509295939492505050565b600181811c908216806116a357607f821691505b602082108114156116c457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561170a5761170a6116e0565b5060010190565b81835260006001600160fb1b0383111561172a57600080fd5b8260051b8083602087013760009401602001938452509192915050565b60408152600061175b604083018688611711565b828103602084015261176e818587611711565b979650505050505050565b60006020828403121561178b57600080fd5b6112e182611217565b600082516117a6818460208701611276565b600360fc1b920191825250600101919050565b600083516117cb818460208801611276565b8351908301906117df818360208801611276565b01949350505050565b6000828210156117fa576117fa6116e0565b500390565b60008219821115611812576118126116e0565b500190565b634e487b7160e01b600052603160045260246000fd5b6001600160a01b0388811682528716602082015260a06040820181905260009061185a9083018789611711565b828103606084015261186d818688611711565b9050828103608084015261188181856112a2565b9a9950505050505050505050565b6000602082840312156118a157600080fd5b81516001600160e01b0319811681146112e157600080fd5b6020808252602b908201527f4c6962455243313135353a205472616e736665722072656a65637465642f666160408201526a696c6564206279205f746f60a81b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061176e908301846112a256fea26469706673582212209139fd9b7925d265a9cb88172a6ae7e5231a38a1208fca75dbcb789cc75a34e564736f6c63430008090033";

type ERC1155FacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155FacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Facet__factory extends ContractFactory {
  constructor(...args: ERC1155FacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Facet> {
    return super.deploy(overrides || {}) as Promise<ERC1155Facet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1155Facet {
    return super.attach(address) as ERC1155Facet;
  }
  override connect(signer: Signer): ERC1155Facet__factory {
    return super.connect(signer) as ERC1155Facet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155FacetInterface {
    return new utils.Interface(_abi) as ERC1155FacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Facet {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Facet;
  }
}
