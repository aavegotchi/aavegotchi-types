/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../../../common";
import type {
  EventHandlerFacet,
  EventHandlerFacetInterface,
} from "../../../../../../../../src/contracts/aavegotchi-contracts/contracts/Aavegotchi/WearableDiamond/facets/EventHandlerFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "emitApprovalEvent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_values",
        type: "uint256[]",
      },
    ],
    name: "emitTransferBatchEvent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "emitTransferSingleEvent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_value",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "emitUriEvent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610654806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806381ee2e46146100515780639942e75514610066578063c67d535414610079578063e82b15f41461008c575b600080fd5b61006461005f3660046103ed565b61009f565b005b610064610074366004610437565b6100b7565b6100646100873660046102fa565b6100cd565b61006461009a366004610399565b6100ed565b6100a7610109565b6100b2838383610147565b505050565b6100bf610109565b6100c98282610197565b5050565b6100d5610109565b6100e4878787878787876101d3565b50505050505050565b6100f5610109565b6101028585858585610237565b5050505050565b337386935f11c86623dec8a25696e1c19a8659cbf95d146101455760405162461bcd60e51b815260040161013c906105ad565b60405180910390fd5b565b816001600160a01b0316836001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161018a919061054f565b60405180910390a3505050565b807f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b836040516101c7919061055a565b60405180910390a25050565b846001600160a01b0316866001600160a01b0316886001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87878787604051610226949392919061051d565b60405180910390a450505050505050565b826001600160a01b0316846001600160a01b0316866001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6285856040516102869291906105fa565b60405180910390a45050505050565b80356001600160a01b03811681146102ac57600080fd5b919050565b60008083601f8401126102c2578081fd5b50813567ffffffffffffffff8111156102d9578182fd5b60208301915083602080830285010111156102f357600080fd5b9250929050565b600080600080600080600060a0888a031215610314578283fd5b61031d88610295565b965061032b60208901610295565b955061033960408901610295565b9450606088013567ffffffffffffffff80821115610355578485fd5b6103618b838c016102b1565b909650945060808a0135915080821115610379578384fd5b506103868a828b016102b1565b989b979a50959850939692959293505050565b600080600080600060a086880312156103b0578081fd5b6103b986610295565b94506103c760208701610295565b93506103d560408701610295565b94979396509394606081013594506080013592915050565b600080600060608486031215610401578283fd5b61040a84610295565b925061041860208501610295565b91506040840135801515811461042c578182fd5b809150509250925092565b60008060408385031215610449578182fd5b823567ffffffffffffffff80821115610460578384fd5b818501915085601f830112610473578384fd5b81358181111561048557610485610608565b604051601f8201601f19908116603f011681019083821181831017156104ad576104ad610608565b816040528281528860208487010111156104c5578687fd5b82602086016020830137918201602090810196909652509694909301359450505050565b81835260006001600160fb1b03831115610501578081fd5b6020830280836020870137939093016020019283525090919050565b6000604082526105316040830186886104e9565b82810360208401526105448185876104e9565b979650505050505050565b901515815260200190565b6000602080835283518082850152825b818110156105865785810183015185820160400152820161056a565b818111156105975783604083870101525b50601f01601f1916929092016040019392505050565b6020808252602d908201527f4c69624469616d6f6e643a2043616c6c6572206d75737420626520416176656760408201526c1bdd18da1a48111a585b5bdb99609a1b606082015260800190565b918252602082015260400190565b634e487b7160e01b600052604160045260246000fdfea26469706673582212208e24958840aee45cd4ceb757b86b90c7cc648235fadea3d8635c2dfb353c1fde64736f6c63430008010033";

type EventHandlerFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EventHandlerFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EventHandlerFacet__factory extends ContractFactory {
  constructor(...args: EventHandlerFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EventHandlerFacet> {
    return super.deploy(overrides || {}) as Promise<EventHandlerFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EventHandlerFacet {
    return super.attach(address) as EventHandlerFacet;
  }
  override connect(signer: Signer): EventHandlerFacet__factory {
    return super.connect(signer) as EventHandlerFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EventHandlerFacetInterface {
    return new utils.Interface(_abi) as EventHandlerFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EventHandlerFacet {
    return new Contract(address, _abi, signerOrProvider) as EventHandlerFacet;
  }
}
