/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../../common";
import type {
  ItemsFacet,
  ItemsFacetInterface,
} from "../../../../../../../src/contracts/aavegotchi-contracts/contracts/Ethereum/facets/ItemsFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "bal_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "bals",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "balancesWithItemTypes",
    outputs: [
      {
        internalType: "uint256[]",
        name: "itemTypes_",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "balances_",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "approved_",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_value",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611711806100206000396000f3fe608060405234801561001057600080fd5b50600436106100925760003560e01c806355f804b31161006657806355f804b314610115578063a22cb46514610128578063a22ccb541461013b578063e985e9c51461015c578063f242432a1461017c57610092565b8062fdd58e146100975780630e89341c146100c05780632eb2c2d6146100e05780634e1273f4146100f5575b600080fd5b6100aa6100a53660046110a4565b61018f565b6040516100b791906115e3565b60405180910390f35b6100d36100ce366004611208565b6101b6565b6040516100b79190611428565b6100f36100ee366004610f3d565b610257565b005b6101086101033660046110cd565b610512565b6040516100b791906113dc565b6100f361012336600461115e565b61056e565b6100f361013636600461106a565b61061c565b61014e610149366004610eea565b61069c565b6040516100b79291906113ef565b61016f61016a366004610f0b565b61081e565b6040516100b7919061141d565b6100f361018a366004610ff4565b61084c565b6001600160a01b039091166000908152600260209081526040808320938352929052205490565b606061024f600060030180546101cb90611659565b80601f01602080910402602001604051908101604052809291908181526020018280546101f790611659565b80156102445780601f1061021957610100808354040283529160200191610244565b820191906000526020600020905b81548152906001019060200180831161022757829003601f168201915b505050505083610a37565b90505b919050565b6001600160a01b0387166102865760405162461bcd60e51b815260040161027d9061150e565b60405180910390fd5b8483146102a55760405162461bcd60e51b815260040161027d9061147d565b60006102af610b64565b9050886001600160a01b0316816001600160a01b031614806102f657506001600160a01b03808a1660009081526006602090815260408083209385168352929052205460ff165b6103125760405162461bcd60e51b815260040161027d906114c1565b60005b8681101561046557600088888381811061033f57634e487b7160e01b600052603260045260246000fd5b905060200201359050600087878481811061036a57634e487b7160e01b600052603260045260246000fd5b6001600160a01b038f16600090815260026020908152604080832088845282529091205491029290920135925050808211156103b85760405162461bcd60e51b815260040161027d9061159a565b6103c28282611612565b600060020160008f6001600160a01b03166001600160a01b0316815260200190815260200160002060008581526020019081526020016000208190555081600060020160008e6001600160a01b03166001600160a01b031681526020019081526020016000206000858152602001908152602001600020600082825461044891906115fa565b92505081905550505050808061045d90611694565b915050610315565b50876001600160a01b0316896001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8a8a8a8a6040516104b994939291906113b5565b60405180910390a4610507818a8a8a8a8a8a8a8a8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610bc192505050565b505050505050505050565b60608367ffffffffffffffff81111561053b57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610564578160200160208202803683370190505b5095945050505050565b610576610c82565b8051610589906003906020840190610db1565b5060005b60015481101561061857807f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b6105f184600060010185815481106105e157634e487b7160e01b600052603260045260246000fd5b9060005260206000200154610a37565b6040516105fe9190611428565b60405180910390a28061061081611694565b91505061058d565b5050565b6000610626610b64565b6001600160a01b0381811660008181526006602090815260408083209489168084529490915290819020805460ff19168715151790555192935090917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319061068f90869061141d565b60405180910390a3505050565b60015460609081908067ffffffffffffffff8111156106cb57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156106f4578160200160208202803683370190505b5092508067ffffffffffffffff81111561071e57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610747578160200160208202803683370190505b50915060005b8181101561081757600080600101828154811061077a57634e487b7160e01b600052603260045260246000fd5b90600052602060002001549050808583815181106107a857634e487b7160e01b600052603260045260246000fd5b6020908102919091018101919091526001600160a01b0387166000908152600282526040808220848352909252205484518590849081106107f957634e487b7160e01b600052603260045260246000fd5b6020908102919091010152508061080f81611694565b91505061074d565b5050915091565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b6001600160a01b0385166108725760405162461bcd60e51b815260040161027d9061150e565b600061087c610b64565b9050866001600160a01b0316816001600160a01b031614806108c357506001600160a01b0380881660009081526006602090815260408083209385168352929052205460ff165b806108d657506001600160a01b03811630145b6108f25760405162461bcd60e51b815260040161027d906114c1565b6001600160a01b0387166000908152600260209081526040808320888452909152902054808511156109365760405162461bcd60e51b815260040161027d9061159a565b6109408582611612565b6001600160a01b03808a1660009081526002602081815260408084208c8552825280842095909555928b1682528252828120898252909152908120805487929061098b9084906115fa565b92505081905550866001600160a01b0316886001600160a01b0316836001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6289896040516109e19291906115ec565b60405180910390a4610a2d828989898989898080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610cc792505050565b5050505050505050565b60608082610a675783604051602001610a5091906112e9565b604051602081830303815290604052915050610b5e565b8260005b8115610a7f57600101600a82049150610a6b565b8067ffffffffffffffff811115610aa657634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610ad0576020820181803683370190505b50925084915060001981015b8215610b3557600a830660300160f81b84828060019003935081518110610b1357634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600a83049250610adc565b5050508381604051602001610b4b9291906112ba565b6040516020818303038152906040529150505b92915050565b600033301415610bbb57600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b03169150610bbe9050565b50335b90565b853b80156105075760405163bc197c8160e01b81526001600160a01b0388169063bc197c8190610c01908c908c908b908b908b908b908b9060040161130e565b602060405180830381600087803b158015610c1b57600080fd5b505af1158015610c2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c539190611136565b6001600160e01b03191663bc197c8160e01b146105075760405162461bcd60e51b815260040161027d90611550565b610c8a610d8d565b600401546001600160a01b0316610c9f610b64565b6001600160a01b031614610cc55760405162461bcd60e51b815260040161027d9061143b565b565b833b8015610d845760405163f23a6e6160e01b81526001600160a01b0386169063f23a6e6190610d03908a908a90899089908990600401611370565b602060405180830381600087803b158015610d1d57600080fd5b505af1158015610d31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d559190611136565b6001600160e01b03191663f23a6e6160e01b14610d845760405162461bcd60e51b815260040161027d90611550565b50505050505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90565b828054610dbd90611659565b90600052602060002090601f016020900481019282610ddf5760008555610e25565b82601f10610df857805160ff1916838001178555610e25565b82800160010185558215610e25579182015b82811115610e25578251825591602001919060010190610e0a565b50610e31929150610e35565b5090565b5b80821115610e315760008155600101610e36565b80356001600160a01b038116811461025257600080fd5b60008083601f840112610e72578081fd5b50813567ffffffffffffffff811115610e89578182fd5b6020830191508360208083028501011115610ea357600080fd5b9250929050565b60008083601f840112610ebb578182fd5b50813567ffffffffffffffff811115610ed2578182fd5b602083019150836020828501011115610ea357600080fd5b600060208284031215610efb578081fd5b610f0482610e4a565b9392505050565b60008060408385031215610f1d578081fd5b610f2683610e4a565b9150610f3460208401610e4a565b90509250929050565b60008060008060008060008060a0898b031215610f58578384fd5b610f6189610e4a565b9750610f6f60208a01610e4a565b9650604089013567ffffffffffffffff80821115610f8b578586fd5b610f978c838d01610e61565b909850965060608b0135915080821115610faf578586fd5b610fbb8c838d01610e61565b909650945060808b0135915080821115610fd3578384fd5b50610fe08b828c01610eaa565b999c989b5096995094979396929594505050565b60008060008060008060a0878903121561100c578182fd5b61101587610e4a565b955061102360208801610e4a565b94506040870135935060608701359250608087013567ffffffffffffffff81111561104c578283fd5b61105889828a01610eaa565b979a9699509497509295939492505050565b6000806040838503121561107c578182fd5b61108583610e4a565b915060208301358015158114611099578182fd5b809150509250929050565b600080604083850312156110b6578182fd5b6110bf83610e4a565b946020939093013593505050565b600080600080604085870312156110e2578384fd5b843567ffffffffffffffff808211156110f9578586fd5b61110588838901610e61565b9096509450602087013591508082111561111d578384fd5b5061112a87828801610e61565b95989497509550505050565b600060208284031215611147578081fd5b81516001600160e01b031981168114610f04578182fd5b60006020828403121561116f578081fd5b813567ffffffffffffffff80821115611186578283fd5b818401915084601f830112611199578283fd5b8135818111156111ab576111ab6116c5565b604051601f8201601f19908116603f011681019083821181831017156111d3576111d36116c5565b816040528281528760208487010111156111eb578586fd5b826020860160208301379182016020019490945295945050505050565b600060208284031215611219578081fd5b5035919050565b81835260006001600160fb1b03831115611238578081fd5b6020830280836020870137939093016020019283525090919050565b6000815180845260208085019450808401835b8381101561128357815187529582019590820190600101611267565b509495945050505050565b600081518084526112a6816020860160208601611629565b601f01601f19169290920160200192915050565b600083516112cc818460208801611629565b8351908301906112e0818360208801611629565b01949350505050565b600082516112fb818460208701611629565b600360fc1b920191825250600101919050565b6001600160a01b0388811682528716602082015260a06040820181905260009061133b9083018789611220565b828103606084015261134e818688611220565b90508281036080840152611362818561128e565b9a9950505050505050505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906113aa9083018461128e565b979650505050505050565b6000604082526113c9604083018688611220565b82810360208401526113aa818587611220565b600060208252610f046020830184611254565b6000604082526114026040830185611254565b82810360208401526114148185611254565b95945050505050565b901515815260200190565b600060208252610f04602083018461128e565b60208082526022908201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60408201526132b960f11b606082015260800190565b60208082526024908201527f4974656d733a20696473206e6f742073616d65206c656e6774682061732076616040820152636c75657360e01b606082015260800190565b6020808252602d908201527f4974656d733a204e6f74206f776e657220616e64206e6f7420617070726f766560408201526c32103a37903a3930b739b332b960991b606082015260800190565b60208082526022908201527f4974656d733a2043616e2774207472616e7366657220746f2030206164647265604082015261737360f01b606082015260800190565b6020808252602a908201527f5765617261626c65733a205472616e736665722072656a65637465642f6661696040820152696c6564206279205f746f60b01b606082015260800190565b60208082526029908201527f4974656d733a20446f65736e277420686176652074686174206d616e7920746f604082015268103a3930b739b332b960b91b606082015260800190565b90815260200190565b918252602082015260400190565b6000821982111561160d5761160d6116af565b500190565b600082821015611624576116246116af565b500390565b60005b8381101561164457818101518382015260200161162c565b83811115611653576000848401525b50505050565b60028104600182168061166d57607f821691505b6020821081141561168e57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156116a8576116a86116af565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122066cbc3a34adc271f98aa0ce1e45e2219be27ddbaf33337de1807473e3fb1a2c164736f6c63430008010033";

type ItemsFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ItemsFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ItemsFacet__factory extends ContractFactory {
  constructor(...args: ItemsFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ItemsFacet> {
    return super.deploy(overrides || {}) as Promise<ItemsFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ItemsFacet {
    return super.attach(address) as ItemsFacet;
  }
  override connect(signer: Signer): ItemsFacet__factory {
    return super.connect(signer) as ItemsFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ItemsFacetInterface {
    return new utils.Interface(_abi) as ItemsFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ItemsFacet {
    return new Contract(address, _abi, signerOrProvider) as ItemsFacet;
  }
}
