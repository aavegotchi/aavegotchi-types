/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  Signer,
  utils,
} from "ethers";
import type { EventFragment } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../../../../common";

export interface LibGotchiLendingInterface extends utils.Interface {
  functions: {};

  events: {
    "GotchiLendingAdd(uint32)": EventFragment;
    "GotchiLendingAdded(uint32,address,uint32,uint96,uint32,uint8[3],address,address,uint32,address[],uint256)": EventFragment;
    "GotchiLendingCancel(uint32,uint256)": EventFragment;
    "GotchiLendingCanceled(uint32,address,uint32,uint96,uint32,uint8[3],address,address,uint32,address[],uint256)": EventFragment;
    "GotchiLendingClaim(uint32,address[],uint256[])": EventFragment;
    "GotchiLendingClaimed(uint32,address,address,uint32,uint96,uint32,uint8[3],address,address,uint32,address[],uint256[],uint256)": EventFragment;
    "GotchiLendingEnd(uint32)": EventFragment;
    "GotchiLendingEnded(uint32,address,address,uint32,uint96,uint32,uint8[3],address,address,uint32,address[],uint256)": EventFragment;
    "GotchiLendingExecute(uint32)": EventFragment;
    "GotchiLendingExecuted(uint32,address,address,uint32,uint96,uint32,uint8[3],address,address,uint32,address[],uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "GotchiLendingAdd"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "GotchiLendingAdd(uint32)"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "GotchiLendingAdded"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "GotchiLendingAdded(uint32,address,uint32,uint96,uint32,uint8[3],address,address,uint32,address[],uint256)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "GotchiLendingCancel"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "GotchiLendingCancel(uint32,uint256)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "GotchiLendingCanceled"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "GotchiLendingCanceled(uint32,address,uint32,uint96,uint32,uint8[3],address,address,uint32,address[],uint256)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "GotchiLendingClaim"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "GotchiLendingClaim(uint32,address[],uint256[])"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "GotchiLendingClaimed"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "GotchiLendingClaimed(uint32,address,address,uint32,uint96,uint32,uint8[3],address,address,uint32,address[],uint256[],uint256)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "GotchiLendingEnd"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "GotchiLendingEnd(uint32)"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "GotchiLendingEnded"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "GotchiLendingEnded(uint32,address,address,uint32,uint96,uint32,uint8[3],address,address,uint32,address[],uint256)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "GotchiLendingExecute"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "GotchiLendingExecute(uint32)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "GotchiLendingExecuted"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "GotchiLendingExecuted(uint32,address,address,uint32,uint96,uint32,uint8[3],address,address,uint32,address[],uint256)"
  ): EventFragment;
}

export interface GotchiLendingAddEventObject {
  listingId: number;
}
export type GotchiLendingAddEvent = TypedEvent<
  [number],
  GotchiLendingAddEventObject
>;

export type GotchiLendingAddEventFilter =
  TypedEventFilter<GotchiLendingAddEvent>;

export interface GotchiLendingAddedEventObject {
  listingId: number;
  lender: string;
  tokenId: number;
  initialCost: BigNumber;
  period: number;
  revenueSplit: [number, number, number];
  originalOwner: string;
  thirdParty: string;
  whitelistId: number;
  revenueTokens: string[];
  timeCreated: BigNumber;
}
export type GotchiLendingAddedEvent = TypedEvent<
  [
    number,
    string,
    number,
    BigNumber,
    number,
    [number, number, number],
    string,
    string,
    number,
    string[],
    BigNumber
  ],
  GotchiLendingAddedEventObject
>;

export type GotchiLendingAddedEventFilter =
  TypedEventFilter<GotchiLendingAddedEvent>;

export interface GotchiLendingCancelEventObject {
  listingId: number;
  time: BigNumber;
}
export type GotchiLendingCancelEvent = TypedEvent<
  [number, BigNumber],
  GotchiLendingCancelEventObject
>;

export type GotchiLendingCancelEventFilter =
  TypedEventFilter<GotchiLendingCancelEvent>;

export interface GotchiLendingCanceledEventObject {
  listingId: number;
  lender: string;
  tokenId: number;
  initialCost: BigNumber;
  period: number;
  revenueSplit: [number, number, number];
  originalOwner: string;
  thirdParty: string;
  whitelistId: number;
  revenueTokens: string[];
  timeCanceled: BigNumber;
}
export type GotchiLendingCanceledEvent = TypedEvent<
  [
    number,
    string,
    number,
    BigNumber,
    number,
    [number, number, number],
    string,
    string,
    number,
    string[],
    BigNumber
  ],
  GotchiLendingCanceledEventObject
>;

export type GotchiLendingCanceledEventFilter =
  TypedEventFilter<GotchiLendingCanceledEvent>;

export interface GotchiLendingClaimEventObject {
  listingId: number;
  tokenAddresses: string[];
  amounts: BigNumber[];
}
export type GotchiLendingClaimEvent = TypedEvent<
  [number, string[], BigNumber[]],
  GotchiLendingClaimEventObject
>;

export type GotchiLendingClaimEventFilter =
  TypedEventFilter<GotchiLendingClaimEvent>;

export interface GotchiLendingClaimedEventObject {
  listingId: number;
  lender: string;
  borrower: string;
  tokenId: number;
  initialCost: BigNumber;
  period: number;
  revenueSplit: [number, number, number];
  originalOwner: string;
  thirdParty: string;
  whitelistId: number;
  revenueTokens: string[];
  amounts: BigNumber[];
  timeClaimed: BigNumber;
}
export type GotchiLendingClaimedEvent = TypedEvent<
  [
    number,
    string,
    string,
    number,
    BigNumber,
    number,
    [number, number, number],
    string,
    string,
    number,
    string[],
    BigNumber[],
    BigNumber
  ],
  GotchiLendingClaimedEventObject
>;

export type GotchiLendingClaimedEventFilter =
  TypedEventFilter<GotchiLendingClaimedEvent>;

export interface GotchiLendingEndEventObject {
  listingId: number;
}
export type GotchiLendingEndEvent = TypedEvent<
  [number],
  GotchiLendingEndEventObject
>;

export type GotchiLendingEndEventFilter =
  TypedEventFilter<GotchiLendingEndEvent>;

export interface GotchiLendingEndedEventObject {
  listingId: number;
  lender: string;
  borrower: string;
  tokenId: number;
  initialCost: BigNumber;
  period: number;
  revenueSplit: [number, number, number];
  originalOwner: string;
  thirdParty: string;
  whitelistId: number;
  revenueTokens: string[];
  timeEnded: BigNumber;
}
export type GotchiLendingEndedEvent = TypedEvent<
  [
    number,
    string,
    string,
    number,
    BigNumber,
    number,
    [number, number, number],
    string,
    string,
    number,
    string[],
    BigNumber
  ],
  GotchiLendingEndedEventObject
>;

export type GotchiLendingEndedEventFilter =
  TypedEventFilter<GotchiLendingEndedEvent>;

export interface GotchiLendingExecuteEventObject {
  listingId: number;
}
export type GotchiLendingExecuteEvent = TypedEvent<
  [number],
  GotchiLendingExecuteEventObject
>;

export type GotchiLendingExecuteEventFilter =
  TypedEventFilter<GotchiLendingExecuteEvent>;

export interface GotchiLendingExecutedEventObject {
  listingId: number;
  lender: string;
  borrower: string;
  tokenId: number;
  initialCost: BigNumber;
  period: number;
  revenueSplit: [number, number, number];
  originalOwner: string;
  thirdParty: string;
  whitelistId: number;
  revenueTokens: string[];
  timeAgreed: BigNumber;
}
export type GotchiLendingExecutedEvent = TypedEvent<
  [
    number,
    string,
    string,
    number,
    BigNumber,
    number,
    [number, number, number],
    string,
    string,
    number,
    string[],
    BigNumber
  ],
  GotchiLendingExecutedEventObject
>;

export type GotchiLendingExecutedEventFilter =
  TypedEventFilter<GotchiLendingExecutedEvent>;

export interface LibGotchiLending extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: LibGotchiLendingInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {};

  callStatic: {};

  filters: {
    "GotchiLendingAdd(uint32)"(
      listingId?: PromiseOrValue<BigNumberish> | null
    ): GotchiLendingAddEventFilter;
    GotchiLendingAdd(
      listingId?: PromiseOrValue<BigNumberish> | null
    ): GotchiLendingAddEventFilter;

    "GotchiLendingAdded(uint32,address,uint32,uint96,uint32,uint8[3],address,address,uint32,address[],uint256)"(
      listingId?: PromiseOrValue<BigNumberish> | null,
      lender?: PromiseOrValue<string> | null,
      tokenId?: PromiseOrValue<BigNumberish> | null,
      initialCost?: null,
      period?: null,
      revenueSplit?: null,
      originalOwner?: null,
      thirdParty?: null,
      whitelistId?: null,
      revenueTokens?: null,
      timeCreated?: null
    ): GotchiLendingAddedEventFilter;
    GotchiLendingAdded(
      listingId?: PromiseOrValue<BigNumberish> | null,
      lender?: PromiseOrValue<string> | null,
      tokenId?: PromiseOrValue<BigNumberish> | null,
      initialCost?: null,
      period?: null,
      revenueSplit?: null,
      originalOwner?: null,
      thirdParty?: null,
      whitelistId?: null,
      revenueTokens?: null,
      timeCreated?: null
    ): GotchiLendingAddedEventFilter;

    "GotchiLendingCancel(uint32,uint256)"(
      listingId?: PromiseOrValue<BigNumberish> | null,
      time?: null
    ): GotchiLendingCancelEventFilter;
    GotchiLendingCancel(
      listingId?: PromiseOrValue<BigNumberish> | null,
      time?: null
    ): GotchiLendingCancelEventFilter;

    "GotchiLendingCanceled(uint32,address,uint32,uint96,uint32,uint8[3],address,address,uint32,address[],uint256)"(
      listingId?: PromiseOrValue<BigNumberish> | null,
      lender?: PromiseOrValue<string> | null,
      tokenId?: PromiseOrValue<BigNumberish> | null,
      initialCost?: null,
      period?: null,
      revenueSplit?: null,
      originalOwner?: null,
      thirdParty?: null,
      whitelistId?: null,
      revenueTokens?: null,
      timeCanceled?: null
    ): GotchiLendingCanceledEventFilter;
    GotchiLendingCanceled(
      listingId?: PromiseOrValue<BigNumberish> | null,
      lender?: PromiseOrValue<string> | null,
      tokenId?: PromiseOrValue<BigNumberish> | null,
      initialCost?: null,
      period?: null,
      revenueSplit?: null,
      originalOwner?: null,
      thirdParty?: null,
      whitelistId?: null,
      revenueTokens?: null,
      timeCanceled?: null
    ): GotchiLendingCanceledEventFilter;

    "GotchiLendingClaim(uint32,address[],uint256[])"(
      listingId?: PromiseOrValue<BigNumberish> | null,
      tokenAddresses?: null,
      amounts?: null
    ): GotchiLendingClaimEventFilter;
    GotchiLendingClaim(
      listingId?: PromiseOrValue<BigNumberish> | null,
      tokenAddresses?: null,
      amounts?: null
    ): GotchiLendingClaimEventFilter;

    "GotchiLendingClaimed(uint32,address,address,uint32,uint96,uint32,uint8[3],address,address,uint32,address[],uint256[],uint256)"(
      listingId?: PromiseOrValue<BigNumberish> | null,
      lender?: PromiseOrValue<string> | null,
      borrower?: PromiseOrValue<string> | null,
      tokenId?: null,
      initialCost?: null,
      period?: null,
      revenueSplit?: null,
      originalOwner?: null,
      thirdParty?: null,
      whitelistId?: null,
      revenueTokens?: null,
      amounts?: null,
      timeClaimed?: null
    ): GotchiLendingClaimedEventFilter;
    GotchiLendingClaimed(
      listingId?: PromiseOrValue<BigNumberish> | null,
      lender?: PromiseOrValue<string> | null,
      borrower?: PromiseOrValue<string> | null,
      tokenId?: null,
      initialCost?: null,
      period?: null,
      revenueSplit?: null,
      originalOwner?: null,
      thirdParty?: null,
      whitelistId?: null,
      revenueTokens?: null,
      amounts?: null,
      timeClaimed?: null
    ): GotchiLendingClaimedEventFilter;

    "GotchiLendingEnd(uint32)"(
      listingId?: PromiseOrValue<BigNumberish> | null
    ): GotchiLendingEndEventFilter;
    GotchiLendingEnd(
      listingId?: PromiseOrValue<BigNumberish> | null
    ): GotchiLendingEndEventFilter;

    "GotchiLendingEnded(uint32,address,address,uint32,uint96,uint32,uint8[3],address,address,uint32,address[],uint256)"(
      listingId?: PromiseOrValue<BigNumberish> | null,
      lender?: PromiseOrValue<string> | null,
      borrower?: PromiseOrValue<string> | null,
      tokenId?: null,
      initialCost?: null,
      period?: null,
      revenueSplit?: null,
      originalOwner?: null,
      thirdParty?: null,
      whitelistId?: null,
      revenueTokens?: null,
      timeEnded?: null
    ): GotchiLendingEndedEventFilter;
    GotchiLendingEnded(
      listingId?: PromiseOrValue<BigNumberish> | null,
      lender?: PromiseOrValue<string> | null,
      borrower?: PromiseOrValue<string> | null,
      tokenId?: null,
      initialCost?: null,
      period?: null,
      revenueSplit?: null,
      originalOwner?: null,
      thirdParty?: null,
      whitelistId?: null,
      revenueTokens?: null,
      timeEnded?: null
    ): GotchiLendingEndedEventFilter;

    "GotchiLendingExecute(uint32)"(
      listingId?: PromiseOrValue<BigNumberish> | null
    ): GotchiLendingExecuteEventFilter;
    GotchiLendingExecute(
      listingId?: PromiseOrValue<BigNumberish> | null
    ): GotchiLendingExecuteEventFilter;

    "GotchiLendingExecuted(uint32,address,address,uint32,uint96,uint32,uint8[3],address,address,uint32,address[],uint256)"(
      listingId?: PromiseOrValue<BigNumberish> | null,
      lender?: PromiseOrValue<string> | null,
      borrower?: PromiseOrValue<string> | null,
      tokenId?: null,
      initialCost?: null,
      period?: null,
      revenueSplit?: null,
      originalOwner?: null,
      thirdParty?: null,
      whitelistId?: null,
      revenueTokens?: null,
      timeAgreed?: null
    ): GotchiLendingExecutedEventFilter;
    GotchiLendingExecuted(
      listingId?: PromiseOrValue<BigNumberish> | null,
      lender?: PromiseOrValue<string> | null,
      borrower?: PromiseOrValue<string> | null,
      tokenId?: null,
      initialCost?: null,
      period?: null,
      revenueSplit?: null,
      originalOwner?: null,
      thirdParty?: null,
      whitelistId?: null,
      revenueTokens?: null,
      timeAgreed?: null
    ): GotchiLendingExecutedEventFilter;
  };

  estimateGas: {};

  populateTransaction: {};
}
