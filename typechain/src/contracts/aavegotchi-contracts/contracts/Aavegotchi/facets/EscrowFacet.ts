/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../../../../common";

export interface EscrowFacetInterface extends utils.Interface {
  functions: {
    "batchDepositERC20(uint256[],address[],uint256[])": FunctionFragment;
    "batchDepositGHST(uint256[],uint256[])": FunctionFragment;
    "depositERC20(uint256,address,uint256)": FunctionFragment;
    "escrowBalance(uint256,address)": FunctionFragment;
    "gotchiEscrow(uint256)": FunctionFragment;
    "transferEscrow(uint256,address,address,uint256)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "batchDepositERC20"
      | "batchDepositERC20(uint256[],address[],uint256[])"
      | "batchDepositGHST"
      | "batchDepositGHST(uint256[],uint256[])"
      | "depositERC20"
      | "depositERC20(uint256,address,uint256)"
      | "escrowBalance"
      | "escrowBalance(uint256,address)"
      | "gotchiEscrow"
      | "gotchiEscrow(uint256)"
      | "transferEscrow"
      | "transferEscrow(uint256,address,address,uint256)"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "batchDepositERC20",
    values: [
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<string>[],
      PromiseOrValue<BigNumberish>[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "batchDepositERC20(uint256[],address[],uint256[])",
    values: [
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<string>[],
      PromiseOrValue<BigNumberish>[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "batchDepositGHST",
    values: [PromiseOrValue<BigNumberish>[], PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchDepositGHST(uint256[],uint256[])",
    values: [PromiseOrValue<BigNumberish>[], PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "depositERC20",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "depositERC20(uint256,address,uint256)",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "escrowBalance",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "escrowBalance(uint256,address)",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "gotchiEscrow",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "gotchiEscrow(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "transferEscrow",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "transferEscrow(uint256,address,address,uint256)",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "batchDepositERC20",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchDepositERC20(uint256[],address[],uint256[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchDepositGHST",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchDepositGHST(uint256[],uint256[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "depositERC20",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "depositERC20(uint256,address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "escrowBalance",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "escrowBalance(uint256,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "gotchiEscrow",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "gotchiEscrow(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferEscrow",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferEscrow(uint256,address,address,uint256)",
    data: BytesLike
  ): Result;

  events: {
    "Erc20Deposited(uint256,address,address,address,uint256)": EventFragment;
    "TransferEscrow(uint256,address,address,address,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Erc20Deposited"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "Erc20Deposited(uint256,address,address,address,uint256)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "TransferEscrow"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "TransferEscrow(uint256,address,address,address,uint256)"
  ): EventFragment;
}

export interface Erc20DepositedEventObject {
  _tokenId: BigNumber;
  _erc20Contract: string;
  _from: string;
  _to: string;
  _depositAmount: BigNumber;
}
export type Erc20DepositedEvent = TypedEvent<
  [BigNumber, string, string, string, BigNumber],
  Erc20DepositedEventObject
>;

export type Erc20DepositedEventFilter = TypedEventFilter<Erc20DepositedEvent>;

export interface TransferEscrowEventObject {
  _tokenId: BigNumber;
  _erc20Contract: string;
  _from: string;
  _to: string;
  _transferAmount: BigNumber;
}
export type TransferEscrowEvent = TypedEvent<
  [BigNumber, string, string, string, BigNumber],
  TransferEscrowEventObject
>;

export type TransferEscrowEventFilter = TypedEventFilter<TransferEscrowEvent>;

export interface EscrowFacet extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: EscrowFacetInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    batchDepositERC20(
      _tokenIds: PromiseOrValue<BigNumberish>[],
      _erc20Contracts: PromiseOrValue<string>[],
      _values: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "batchDepositERC20(uint256[],address[],uint256[])"(
      _tokenIds: PromiseOrValue<BigNumberish>[],
      _erc20Contracts: PromiseOrValue<string>[],
      _values: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    batchDepositGHST(
      _tokenIds: PromiseOrValue<BigNumberish>[],
      _values: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "batchDepositGHST(uint256[],uint256[])"(
      _tokenIds: PromiseOrValue<BigNumberish>[],
      _values: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    depositERC20(
      _tokenId: PromiseOrValue<BigNumberish>,
      _erc20Contract: PromiseOrValue<string>,
      _value: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "depositERC20(uint256,address,uint256)"(
      _tokenId: PromiseOrValue<BigNumberish>,
      _erc20Contract: PromiseOrValue<string>,
      _value: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    escrowBalance(
      _tokenId: PromiseOrValue<BigNumberish>,
      _erc20Contract: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "escrowBalance(uint256,address)"(
      _tokenId: PromiseOrValue<BigNumberish>,
      _erc20Contract: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    gotchiEscrow(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "gotchiEscrow(uint256)"(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    transferEscrow(
      _tokenId: PromiseOrValue<BigNumberish>,
      _erc20Contract: PromiseOrValue<string>,
      _recipient: PromiseOrValue<string>,
      _transferAmount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "transferEscrow(uint256,address,address,uint256)"(
      _tokenId: PromiseOrValue<BigNumberish>,
      _erc20Contract: PromiseOrValue<string>,
      _recipient: PromiseOrValue<string>,
      _transferAmount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  batchDepositERC20(
    _tokenIds: PromiseOrValue<BigNumberish>[],
    _erc20Contracts: PromiseOrValue<string>[],
    _values: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "batchDepositERC20(uint256[],address[],uint256[])"(
    _tokenIds: PromiseOrValue<BigNumberish>[],
    _erc20Contracts: PromiseOrValue<string>[],
    _values: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  batchDepositGHST(
    _tokenIds: PromiseOrValue<BigNumberish>[],
    _values: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "batchDepositGHST(uint256[],uint256[])"(
    _tokenIds: PromiseOrValue<BigNumberish>[],
    _values: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  depositERC20(
    _tokenId: PromiseOrValue<BigNumberish>,
    _erc20Contract: PromiseOrValue<string>,
    _value: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "depositERC20(uint256,address,uint256)"(
    _tokenId: PromiseOrValue<BigNumberish>,
    _erc20Contract: PromiseOrValue<string>,
    _value: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  escrowBalance(
    _tokenId: PromiseOrValue<BigNumberish>,
    _erc20Contract: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "escrowBalance(uint256,address)"(
    _tokenId: PromiseOrValue<BigNumberish>,
    _erc20Contract: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  gotchiEscrow(
    _tokenId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  "gotchiEscrow(uint256)"(
    _tokenId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  transferEscrow(
    _tokenId: PromiseOrValue<BigNumberish>,
    _erc20Contract: PromiseOrValue<string>,
    _recipient: PromiseOrValue<string>,
    _transferAmount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "transferEscrow(uint256,address,address,uint256)"(
    _tokenId: PromiseOrValue<BigNumberish>,
    _erc20Contract: PromiseOrValue<string>,
    _recipient: PromiseOrValue<string>,
    _transferAmount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    batchDepositERC20(
      _tokenIds: PromiseOrValue<BigNumberish>[],
      _erc20Contracts: PromiseOrValue<string>[],
      _values: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    "batchDepositERC20(uint256[],address[],uint256[])"(
      _tokenIds: PromiseOrValue<BigNumberish>[],
      _erc20Contracts: PromiseOrValue<string>[],
      _values: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    batchDepositGHST(
      _tokenIds: PromiseOrValue<BigNumberish>[],
      _values: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    "batchDepositGHST(uint256[],uint256[])"(
      _tokenIds: PromiseOrValue<BigNumberish>[],
      _values: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    depositERC20(
      _tokenId: PromiseOrValue<BigNumberish>,
      _erc20Contract: PromiseOrValue<string>,
      _value: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "depositERC20(uint256,address,uint256)"(
      _tokenId: PromiseOrValue<BigNumberish>,
      _erc20Contract: PromiseOrValue<string>,
      _value: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    escrowBalance(
      _tokenId: PromiseOrValue<BigNumberish>,
      _erc20Contract: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "escrowBalance(uint256,address)"(
      _tokenId: PromiseOrValue<BigNumberish>,
      _erc20Contract: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    gotchiEscrow(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    "gotchiEscrow(uint256)"(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    transferEscrow(
      _tokenId: PromiseOrValue<BigNumberish>,
      _erc20Contract: PromiseOrValue<string>,
      _recipient: PromiseOrValue<string>,
      _transferAmount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "transferEscrow(uint256,address,address,uint256)"(
      _tokenId: PromiseOrValue<BigNumberish>,
      _erc20Contract: PromiseOrValue<string>,
      _recipient: PromiseOrValue<string>,
      _transferAmount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "Erc20Deposited(uint256,address,address,address,uint256)"(
      _tokenId?: PromiseOrValue<BigNumberish> | null,
      _erc20Contract?: PromiseOrValue<string> | null,
      _from?: PromiseOrValue<string> | null,
      _to?: null,
      _depositAmount?: null
    ): Erc20DepositedEventFilter;
    Erc20Deposited(
      _tokenId?: PromiseOrValue<BigNumberish> | null,
      _erc20Contract?: PromiseOrValue<string> | null,
      _from?: PromiseOrValue<string> | null,
      _to?: null,
      _depositAmount?: null
    ): Erc20DepositedEventFilter;

    "TransferEscrow(uint256,address,address,address,uint256)"(
      _tokenId?: PromiseOrValue<BigNumberish> | null,
      _erc20Contract?: PromiseOrValue<string> | null,
      _from?: null,
      _to?: PromiseOrValue<string> | null,
      _transferAmount?: null
    ): TransferEscrowEventFilter;
    TransferEscrow(
      _tokenId?: PromiseOrValue<BigNumberish> | null,
      _erc20Contract?: PromiseOrValue<string> | null,
      _from?: null,
      _to?: PromiseOrValue<string> | null,
      _transferAmount?: null
    ): TransferEscrowEventFilter;
  };

  estimateGas: {
    batchDepositERC20(
      _tokenIds: PromiseOrValue<BigNumberish>[],
      _erc20Contracts: PromiseOrValue<string>[],
      _values: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "batchDepositERC20(uint256[],address[],uint256[])"(
      _tokenIds: PromiseOrValue<BigNumberish>[],
      _erc20Contracts: PromiseOrValue<string>[],
      _values: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    batchDepositGHST(
      _tokenIds: PromiseOrValue<BigNumberish>[],
      _values: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "batchDepositGHST(uint256[],uint256[])"(
      _tokenIds: PromiseOrValue<BigNumberish>[],
      _values: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    depositERC20(
      _tokenId: PromiseOrValue<BigNumberish>,
      _erc20Contract: PromiseOrValue<string>,
      _value: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "depositERC20(uint256,address,uint256)"(
      _tokenId: PromiseOrValue<BigNumberish>,
      _erc20Contract: PromiseOrValue<string>,
      _value: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    escrowBalance(
      _tokenId: PromiseOrValue<BigNumberish>,
      _erc20Contract: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "escrowBalance(uint256,address)"(
      _tokenId: PromiseOrValue<BigNumberish>,
      _erc20Contract: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    gotchiEscrow(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "gotchiEscrow(uint256)"(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    transferEscrow(
      _tokenId: PromiseOrValue<BigNumberish>,
      _erc20Contract: PromiseOrValue<string>,
      _recipient: PromiseOrValue<string>,
      _transferAmount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "transferEscrow(uint256,address,address,uint256)"(
      _tokenId: PromiseOrValue<BigNumberish>,
      _erc20Contract: PromiseOrValue<string>,
      _recipient: PromiseOrValue<string>,
      _transferAmount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    batchDepositERC20(
      _tokenIds: PromiseOrValue<BigNumberish>[],
      _erc20Contracts: PromiseOrValue<string>[],
      _values: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "batchDepositERC20(uint256[],address[],uint256[])"(
      _tokenIds: PromiseOrValue<BigNumberish>[],
      _erc20Contracts: PromiseOrValue<string>[],
      _values: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    batchDepositGHST(
      _tokenIds: PromiseOrValue<BigNumberish>[],
      _values: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "batchDepositGHST(uint256[],uint256[])"(
      _tokenIds: PromiseOrValue<BigNumberish>[],
      _values: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    depositERC20(
      _tokenId: PromiseOrValue<BigNumberish>,
      _erc20Contract: PromiseOrValue<string>,
      _value: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "depositERC20(uint256,address,uint256)"(
      _tokenId: PromiseOrValue<BigNumberish>,
      _erc20Contract: PromiseOrValue<string>,
      _value: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    escrowBalance(
      _tokenId: PromiseOrValue<BigNumberish>,
      _erc20Contract: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "escrowBalance(uint256,address)"(
      _tokenId: PromiseOrValue<BigNumberish>,
      _erc20Contract: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    gotchiEscrow(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "gotchiEscrow(uint256)"(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    transferEscrow(
      _tokenId: PromiseOrValue<BigNumberish>,
      _erc20Contract: PromiseOrValue<string>,
      _recipient: PromiseOrValue<string>,
      _transferAmount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "transferEscrow(uint256,address,address,uint256)"(
      _tokenId: PromiseOrValue<BigNumberish>,
      _erc20Contract: PromiseOrValue<string>,
      _recipient: PromiseOrValue<string>,
      _transferAmount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
