/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../../../../common";

export declare namespace RealmGridFacet {
  export type ParcelCoordinatesStruct = {
    coords: PromiseOrValue<BigNumberish>[][];
  };

  export type ParcelCoordinatesStructOutput = [BigNumber[][]] & {
    coords: BigNumber[][];
  };
}

export interface RealmGridFacetInterface extends utils.Interface {
  functions: {
    "batchGetGrid(uint256[],uint256)": FunctionFragment;
    "fixGridStartPositions(uint256[],uint256[],uint256[],bool,uint256[])": FunctionFragment;
    "getHumbleGrid(uint256,uint256)": FunctionFragment;
    "getPaartnerGrid(uint256,uint256)": FunctionFragment;
    "getReasonableGrid(uint256,uint256)": FunctionFragment;
    "getSpaciousHorizontalGrid(uint256,uint256)": FunctionFragment;
    "getSpaciousVerticalGrid(uint256,uint256)": FunctionFragment;
    "isGridStartPosition(uint256,uint256,uint256,bool,uint256)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "batchGetGrid"
      | "batchGetGrid(uint256[],uint256)"
      | "fixGridStartPositions"
      | "fixGridStartPositions(uint256[],uint256[],uint256[],bool,uint256[])"
      | "getHumbleGrid"
      | "getHumbleGrid(uint256,uint256)"
      | "getPaartnerGrid"
      | "getPaartnerGrid(uint256,uint256)"
      | "getReasonableGrid"
      | "getReasonableGrid(uint256,uint256)"
      | "getSpaciousHorizontalGrid"
      | "getSpaciousHorizontalGrid(uint256,uint256)"
      | "getSpaciousVerticalGrid"
      | "getSpaciousVerticalGrid(uint256,uint256)"
      | "isGridStartPosition"
      | "isGridStartPosition(uint256,uint256,uint256,bool,uint256)"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "batchGetGrid",
    values: [PromiseOrValue<BigNumberish>[], PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "batchGetGrid(uint256[],uint256)",
    values: [PromiseOrValue<BigNumberish>[], PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "fixGridStartPositions",
    values: [
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<boolean>,
      PromiseOrValue<BigNumberish>[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "fixGridStartPositions(uint256[],uint256[],uint256[],bool,uint256[])",
    values: [
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<boolean>,
      PromiseOrValue<BigNumberish>[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getHumbleGrid",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getHumbleGrid(uint256,uint256)",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getPaartnerGrid",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getPaartnerGrid(uint256,uint256)",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getReasonableGrid",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getReasonableGrid(uint256,uint256)",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getSpaciousHorizontalGrid",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getSpaciousHorizontalGrid(uint256,uint256)",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getSpaciousVerticalGrid",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getSpaciousVerticalGrid(uint256,uint256)",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "isGridStartPosition",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<boolean>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "isGridStartPosition(uint256,uint256,uint256,bool,uint256)",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<boolean>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "batchGetGrid",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchGetGrid(uint256[],uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "fixGridStartPositions",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "fixGridStartPositions(uint256[],uint256[],uint256[],bool,uint256[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getHumbleGrid",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getHumbleGrid(uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPaartnerGrid",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPaartnerGrid(uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getReasonableGrid",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getReasonableGrid(uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSpaciousHorizontalGrid",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSpaciousHorizontalGrid(uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSpaciousVerticalGrid",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getSpaciousVerticalGrid(uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isGridStartPosition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isGridStartPosition(uint256,uint256,uint256,bool,uint256)",
    data: BytesLike
  ): Result;

  events: {};
}

export interface RealmGridFacet extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: RealmGridFacetInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    batchGetGrid(
      _parcelIds: PromiseOrValue<BigNumberish>[],
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[RealmGridFacet.ParcelCoordinatesStructOutput[]]>;

    "batchGetGrid(uint256[],uint256)"(
      _parcelIds: PromiseOrValue<BigNumberish>[],
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[RealmGridFacet.ParcelCoordinatesStructOutput[]]>;

    fixGridStartPositions(
      _parcelIds: PromiseOrValue<BigNumberish>[],
      _x: PromiseOrValue<BigNumberish>[],
      _y: PromiseOrValue<BigNumberish>[],
      _isTile: PromiseOrValue<boolean>,
      _ids: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "fixGridStartPositions(uint256[],uint256[],uint256[],bool,uint256[])"(
      _parcelIds: PromiseOrValue<BigNumberish>[],
      _x: PromiseOrValue<BigNumberish>[],
      _y: PromiseOrValue<BigNumberish>[],
      _isTile: PromiseOrValue<boolean>,
      _ids: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    getHumbleGrid(
      _parcelId: PromiseOrValue<BigNumberish>,
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber[][]] & { output_: BigNumber[][] }>;

    "getHumbleGrid(uint256,uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber[][]] & { output_: BigNumber[][] }>;

    getPaartnerGrid(
      _parcelId: PromiseOrValue<BigNumberish>,
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber[][]] & { output_: BigNumber[][] }>;

    "getPaartnerGrid(uint256,uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber[][]] & { output_: BigNumber[][] }>;

    getReasonableGrid(
      _parcelId: PromiseOrValue<BigNumberish>,
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber[][]] & { output_: BigNumber[][] }>;

    "getReasonableGrid(uint256,uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber[][]] & { output_: BigNumber[][] }>;

    getSpaciousHorizontalGrid(
      _parcelId: PromiseOrValue<BigNumberish>,
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber[][]] & { output_: BigNumber[][] }>;

    "getSpaciousHorizontalGrid(uint256,uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber[][]] & { output_: BigNumber[][] }>;

    getSpaciousVerticalGrid(
      _parcelId: PromiseOrValue<BigNumberish>,
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber[][]] & { output_: BigNumber[][] }>;

    "getSpaciousVerticalGrid(uint256,uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber[][]] & { output_: BigNumber[][] }>;

    isGridStartPosition(
      _parcelId: PromiseOrValue<BigNumberish>,
      _x: PromiseOrValue<BigNumberish>,
      _y: PromiseOrValue<BigNumberish>,
      _isTile: PromiseOrValue<boolean>,
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "isGridStartPosition(uint256,uint256,uint256,bool,uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      _x: PromiseOrValue<BigNumberish>,
      _y: PromiseOrValue<BigNumberish>,
      _isTile: PromiseOrValue<boolean>,
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;
  };

  batchGetGrid(
    _parcelIds: PromiseOrValue<BigNumberish>[],
    _gridType: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<RealmGridFacet.ParcelCoordinatesStructOutput[]>;

  "batchGetGrid(uint256[],uint256)"(
    _parcelIds: PromiseOrValue<BigNumberish>[],
    _gridType: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<RealmGridFacet.ParcelCoordinatesStructOutput[]>;

  fixGridStartPositions(
    _parcelIds: PromiseOrValue<BigNumberish>[],
    _x: PromiseOrValue<BigNumberish>[],
    _y: PromiseOrValue<BigNumberish>[],
    _isTile: PromiseOrValue<boolean>,
    _ids: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "fixGridStartPositions(uint256[],uint256[],uint256[],bool,uint256[])"(
    _parcelIds: PromiseOrValue<BigNumberish>[],
    _x: PromiseOrValue<BigNumberish>[],
    _y: PromiseOrValue<BigNumberish>[],
    _isTile: PromiseOrValue<boolean>,
    _ids: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  getHumbleGrid(
    _parcelId: PromiseOrValue<BigNumberish>,
    _gridType: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber[][]>;

  "getHumbleGrid(uint256,uint256)"(
    _parcelId: PromiseOrValue<BigNumberish>,
    _gridType: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber[][]>;

  getPaartnerGrid(
    _parcelId: PromiseOrValue<BigNumberish>,
    _gridType: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber[][]>;

  "getPaartnerGrid(uint256,uint256)"(
    _parcelId: PromiseOrValue<BigNumberish>,
    _gridType: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber[][]>;

  getReasonableGrid(
    _parcelId: PromiseOrValue<BigNumberish>,
    _gridType: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber[][]>;

  "getReasonableGrid(uint256,uint256)"(
    _parcelId: PromiseOrValue<BigNumberish>,
    _gridType: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber[][]>;

  getSpaciousHorizontalGrid(
    _parcelId: PromiseOrValue<BigNumberish>,
    _gridType: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber[][]>;

  "getSpaciousHorizontalGrid(uint256,uint256)"(
    _parcelId: PromiseOrValue<BigNumberish>,
    _gridType: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber[][]>;

  getSpaciousVerticalGrid(
    _parcelId: PromiseOrValue<BigNumberish>,
    _gridType: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber[][]>;

  "getSpaciousVerticalGrid(uint256,uint256)"(
    _parcelId: PromiseOrValue<BigNumberish>,
    _gridType: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber[][]>;

  isGridStartPosition(
    _parcelId: PromiseOrValue<BigNumberish>,
    _x: PromiseOrValue<BigNumberish>,
    _y: PromiseOrValue<BigNumberish>,
    _isTile: PromiseOrValue<boolean>,
    _id: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isGridStartPosition(uint256,uint256,uint256,bool,uint256)"(
    _parcelId: PromiseOrValue<BigNumberish>,
    _x: PromiseOrValue<BigNumberish>,
    _y: PromiseOrValue<BigNumberish>,
    _isTile: PromiseOrValue<boolean>,
    _id: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  callStatic: {
    batchGetGrid(
      _parcelIds: PromiseOrValue<BigNumberish>[],
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<RealmGridFacet.ParcelCoordinatesStructOutput[]>;

    "batchGetGrid(uint256[],uint256)"(
      _parcelIds: PromiseOrValue<BigNumberish>[],
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<RealmGridFacet.ParcelCoordinatesStructOutput[]>;

    fixGridStartPositions(
      _parcelIds: PromiseOrValue<BigNumberish>[],
      _x: PromiseOrValue<BigNumberish>[],
      _y: PromiseOrValue<BigNumberish>[],
      _isTile: PromiseOrValue<boolean>,
      _ids: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    "fixGridStartPositions(uint256[],uint256[],uint256[],bool,uint256[])"(
      _parcelIds: PromiseOrValue<BigNumberish>[],
      _x: PromiseOrValue<BigNumberish>[],
      _y: PromiseOrValue<BigNumberish>[],
      _isTile: PromiseOrValue<boolean>,
      _ids: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    getHumbleGrid(
      _parcelId: PromiseOrValue<BigNumberish>,
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber[][]>;

    "getHumbleGrid(uint256,uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber[][]>;

    getPaartnerGrid(
      _parcelId: PromiseOrValue<BigNumberish>,
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber[][]>;

    "getPaartnerGrid(uint256,uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber[][]>;

    getReasonableGrid(
      _parcelId: PromiseOrValue<BigNumberish>,
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber[][]>;

    "getReasonableGrid(uint256,uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber[][]>;

    getSpaciousHorizontalGrid(
      _parcelId: PromiseOrValue<BigNumberish>,
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber[][]>;

    "getSpaciousHorizontalGrid(uint256,uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber[][]>;

    getSpaciousVerticalGrid(
      _parcelId: PromiseOrValue<BigNumberish>,
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber[][]>;

    "getSpaciousVerticalGrid(uint256,uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber[][]>;

    isGridStartPosition(
      _parcelId: PromiseOrValue<BigNumberish>,
      _x: PromiseOrValue<BigNumberish>,
      _y: PromiseOrValue<BigNumberish>,
      _isTile: PromiseOrValue<boolean>,
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isGridStartPosition(uint256,uint256,uint256,bool,uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      _x: PromiseOrValue<BigNumberish>,
      _y: PromiseOrValue<BigNumberish>,
      _isTile: PromiseOrValue<boolean>,
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<boolean>;
  };

  filters: {};

  estimateGas: {
    batchGetGrid(
      _parcelIds: PromiseOrValue<BigNumberish>[],
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "batchGetGrid(uint256[],uint256)"(
      _parcelIds: PromiseOrValue<BigNumberish>[],
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    fixGridStartPositions(
      _parcelIds: PromiseOrValue<BigNumberish>[],
      _x: PromiseOrValue<BigNumberish>[],
      _y: PromiseOrValue<BigNumberish>[],
      _isTile: PromiseOrValue<boolean>,
      _ids: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "fixGridStartPositions(uint256[],uint256[],uint256[],bool,uint256[])"(
      _parcelIds: PromiseOrValue<BigNumberish>[],
      _x: PromiseOrValue<BigNumberish>[],
      _y: PromiseOrValue<BigNumberish>[],
      _isTile: PromiseOrValue<boolean>,
      _ids: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    getHumbleGrid(
      _parcelId: PromiseOrValue<BigNumberish>,
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getHumbleGrid(uint256,uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getPaartnerGrid(
      _parcelId: PromiseOrValue<BigNumberish>,
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getPaartnerGrid(uint256,uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getReasonableGrid(
      _parcelId: PromiseOrValue<BigNumberish>,
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getReasonableGrid(uint256,uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getSpaciousHorizontalGrid(
      _parcelId: PromiseOrValue<BigNumberish>,
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getSpaciousHorizontalGrid(uint256,uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getSpaciousVerticalGrid(
      _parcelId: PromiseOrValue<BigNumberish>,
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getSpaciousVerticalGrid(uint256,uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isGridStartPosition(
      _parcelId: PromiseOrValue<BigNumberish>,
      _x: PromiseOrValue<BigNumberish>,
      _y: PromiseOrValue<BigNumberish>,
      _isTile: PromiseOrValue<boolean>,
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isGridStartPosition(uint256,uint256,uint256,bool,uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      _x: PromiseOrValue<BigNumberish>,
      _y: PromiseOrValue<BigNumberish>,
      _isTile: PromiseOrValue<boolean>,
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    batchGetGrid(
      _parcelIds: PromiseOrValue<BigNumberish>[],
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "batchGetGrid(uint256[],uint256)"(
      _parcelIds: PromiseOrValue<BigNumberish>[],
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    fixGridStartPositions(
      _parcelIds: PromiseOrValue<BigNumberish>[],
      _x: PromiseOrValue<BigNumberish>[],
      _y: PromiseOrValue<BigNumberish>[],
      _isTile: PromiseOrValue<boolean>,
      _ids: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "fixGridStartPositions(uint256[],uint256[],uint256[],bool,uint256[])"(
      _parcelIds: PromiseOrValue<BigNumberish>[],
      _x: PromiseOrValue<BigNumberish>[],
      _y: PromiseOrValue<BigNumberish>[],
      _isTile: PromiseOrValue<boolean>,
      _ids: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    getHumbleGrid(
      _parcelId: PromiseOrValue<BigNumberish>,
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getHumbleGrid(uint256,uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPaartnerGrid(
      _parcelId: PromiseOrValue<BigNumberish>,
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getPaartnerGrid(uint256,uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getReasonableGrid(
      _parcelId: PromiseOrValue<BigNumberish>,
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getReasonableGrid(uint256,uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getSpaciousHorizontalGrid(
      _parcelId: PromiseOrValue<BigNumberish>,
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getSpaciousHorizontalGrid(uint256,uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getSpaciousVerticalGrid(
      _parcelId: PromiseOrValue<BigNumberish>,
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getSpaciousVerticalGrid(uint256,uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      _gridType: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isGridStartPosition(
      _parcelId: PromiseOrValue<BigNumberish>,
      _x: PromiseOrValue<BigNumberish>,
      _y: PromiseOrValue<BigNumberish>,
      _isTile: PromiseOrValue<boolean>,
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isGridStartPosition(uint256,uint256,uint256,bool,uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      _x: PromiseOrValue<BigNumberish>,
      _y: PromiseOrValue<BigNumberish>,
      _isTile: PromiseOrValue<boolean>,
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
