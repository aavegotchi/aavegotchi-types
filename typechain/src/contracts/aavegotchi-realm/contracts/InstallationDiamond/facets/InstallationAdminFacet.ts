/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../../../../common";

export type InstallationTypeIOStruct = {
  width: PromiseOrValue<BigNumberish>;
  height: PromiseOrValue<BigNumberish>;
  installationType: PromiseOrValue<BigNumberish>;
  level: PromiseOrValue<BigNumberish>;
  alchemicaType: PromiseOrValue<BigNumberish>;
  spillRadius: PromiseOrValue<BigNumberish>;
  spillRate: PromiseOrValue<BigNumberish>;
  upgradeQueueBoost: PromiseOrValue<BigNumberish>;
  craftTime: PromiseOrValue<BigNumberish>;
  nextLevelId: PromiseOrValue<BigNumberish>;
  deprecated: PromiseOrValue<boolean>;
  alchemicaCost: [
    PromiseOrValue<BigNumberish>,
    PromiseOrValue<BigNumberish>,
    PromiseOrValue<BigNumberish>,
    PromiseOrValue<BigNumberish>
  ];
  harvestRate: PromiseOrValue<BigNumberish>;
  capacity: PromiseOrValue<BigNumberish>;
  prerequisites: PromiseOrValue<BigNumberish>[];
  name: PromiseOrValue<string>;
  unequipType: PromiseOrValue<BigNumberish>;
  deprecateTime: PromiseOrValue<BigNumberish>;
};

export type InstallationTypeIOStructOutput = [
  number,
  number,
  number,
  number,
  number,
  number,
  number,
  number,
  number,
  number,
  boolean,
  [BigNumber, BigNumber, BigNumber, BigNumber],
  BigNumber,
  BigNumber,
  BigNumber[],
  string,
  BigNumber,
  BigNumber
] & {
  width: number;
  height: number;
  installationType: number;
  level: number;
  alchemicaType: number;
  spillRadius: number;
  spillRate: number;
  upgradeQueueBoost: number;
  craftTime: number;
  nextLevelId: number;
  deprecated: boolean;
  alchemicaCost: [BigNumber, BigNumber, BigNumber, BigNumber];
  harvestRate: BigNumber;
  capacity: BigNumber;
  prerequisites: BigNumber[];
  name: string;
  unequipType: BigNumber;
  deprecateTime: BigNumber;
};

export type InstallationTypeStruct = {
  width: PromiseOrValue<BigNumberish>;
  height: PromiseOrValue<BigNumberish>;
  installationType: PromiseOrValue<BigNumberish>;
  level: PromiseOrValue<BigNumberish>;
  alchemicaType: PromiseOrValue<BigNumberish>;
  spillRadius: PromiseOrValue<BigNumberish>;
  spillRate: PromiseOrValue<BigNumberish>;
  upgradeQueueBoost: PromiseOrValue<BigNumberish>;
  craftTime: PromiseOrValue<BigNumberish>;
  nextLevelId: PromiseOrValue<BigNumberish>;
  deprecated: PromiseOrValue<boolean>;
  alchemicaCost: [
    PromiseOrValue<BigNumberish>,
    PromiseOrValue<BigNumberish>,
    PromiseOrValue<BigNumberish>,
    PromiseOrValue<BigNumberish>
  ];
  harvestRate: PromiseOrValue<BigNumberish>;
  capacity: PromiseOrValue<BigNumberish>;
  prerequisites: PromiseOrValue<BigNumberish>[];
  name: PromiseOrValue<string>;
};

export type InstallationTypeStructOutput = [
  number,
  number,
  number,
  number,
  number,
  number,
  number,
  number,
  number,
  number,
  boolean,
  [BigNumber, BigNumber, BigNumber, BigNumber],
  BigNumber,
  BigNumber,
  BigNumber[],
  string
] & {
  width: number;
  height: number;
  installationType: number;
  level: number;
  alchemicaType: number;
  spillRadius: number;
  spillRate: number;
  upgradeQueueBoost: number;
  craftTime: number;
  nextLevelId: number;
  deprecated: boolean;
  alchemicaCost: [BigNumber, BigNumber, BigNumber, BigNumber];
  harvestRate: BigNumber;
  capacity: BigNumber;
  prerequisites: BigNumber[];
  name: string;
};

export declare namespace InstallationAdminFacet {
  export type BuggedUpgradeInputStruct = {
    _parcelId: PromiseOrValue<BigNumberish>;
    _coordinateX: PromiseOrValue<BigNumberish>;
    _coordinateY: PromiseOrValue<BigNumberish>;
    _installationId: PromiseOrValue<BigNumberish>;
  };

  export type BuggedUpgradeInputStructOutput = [
    BigNumber,
    number,
    number,
    BigNumber
  ] & {
    _parcelId: BigNumber;
    _coordinateX: number;
    _coordinateY: number;
    _installationId: BigNumber;
  };

  export type MissingAltarsStruct = {
    _parcelId: PromiseOrValue<BigNumberish>;
    _oldAltarId: PromiseOrValue<BigNumberish>;
    _newAltarId: PromiseOrValue<BigNumberish>;
  };

  export type MissingAltarsStructOutput = [BigNumber, BigNumber, BigNumber] & {
    _parcelId: BigNumber;
    _oldAltarId: BigNumber;
    _newAltarId: BigNumber;
  };
}

export interface InstallationAdminFacetInterface extends utils.Interface {
  functions: {
    "addInstallationTypes((uint8,uint8,uint16,uint8,uint8,uint32,uint16,uint8,uint32,uint32,bool,uint256[4],uint256,uint256,uint256[],string,uint256,uint256)[])": FunctionFragment;
    "deleteBuggedUpgrades((uint256,uint16,uint16,uint256)[])": FunctionFragment;
    "deleteBuggedUpgradesWithHashes(bytes32[])": FunctionFragment;
    "deprecateInstallations(uint256[])": FunctionFragment;
    "editDeprecateTime(uint256,uint40)": FunctionFragment;
    "editInstallationTypes(uint256[],(uint8,uint8,uint16,uint8,uint8,uint32,uint16,uint8,uint32,uint32,bool,uint256[4],uint256,uint256,uint256[],string)[])": FunctionFragment;
    "editInstallationUnequipTypes(uint256[],uint256[])": FunctionFragment;
    "fixMissingAltars((uint256,uint256,uint256)[])": FunctionFragment;
    "getAddresses()": FunctionFragment;
    "getUniqueHash(uint256,uint16,uint16,uint256)": FunctionFragment;
    "mintInstallations(uint16[],uint16[],address)": FunctionFragment;
    "setAddresses(address,address,address,address,address,bytes)": FunctionFragment;
    "toggleGameManager(address,bool)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "addInstallationTypes"
      | "addInstallationTypes((uint8,uint8,uint16,uint8,uint8,uint32,uint16,uint8,uint32,uint32,bool,uint256[4],uint256,uint256,uint256[],string,uint256,uint256)[])"
      | "deleteBuggedUpgrades"
      | "deleteBuggedUpgrades((uint256,uint16,uint16,uint256)[])"
      | "deleteBuggedUpgradesWithHashes"
      | "deleteBuggedUpgradesWithHashes(bytes32[])"
      | "deprecateInstallations"
      | "deprecateInstallations(uint256[])"
      | "editDeprecateTime"
      | "editDeprecateTime(uint256,uint40)"
      | "editInstallationTypes"
      | "editInstallationTypes(uint256[],(uint8,uint8,uint16,uint8,uint8,uint32,uint16,uint8,uint32,uint32,bool,uint256[4],uint256,uint256,uint256[],string)[])"
      | "editInstallationUnequipTypes"
      | "editInstallationUnequipTypes(uint256[],uint256[])"
      | "fixMissingAltars"
      | "fixMissingAltars((uint256,uint256,uint256)[])"
      | "getAddresses"
      | "getAddresses()"
      | "getUniqueHash"
      | "getUniqueHash(uint256,uint16,uint16,uint256)"
      | "mintInstallations"
      | "mintInstallations(uint16[],uint16[],address)"
      | "setAddresses"
      | "setAddresses(address,address,address,address,address,bytes)"
      | "toggleGameManager"
      | "toggleGameManager(address,bool)"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "addInstallationTypes",
    values: [InstallationTypeIOStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "addInstallationTypes((uint8,uint8,uint16,uint8,uint8,uint32,uint16,uint8,uint32,uint32,bool,uint256[4],uint256,uint256,uint256[],string,uint256,uint256)[])",
    values: [InstallationTypeIOStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "deleteBuggedUpgrades",
    values: [InstallationAdminFacet.BuggedUpgradeInputStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "deleteBuggedUpgrades((uint256,uint16,uint16,uint256)[])",
    values: [InstallationAdminFacet.BuggedUpgradeInputStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "deleteBuggedUpgradesWithHashes",
    values: [PromiseOrValue<BytesLike>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "deleteBuggedUpgradesWithHashes(bytes32[])",
    values: [PromiseOrValue<BytesLike>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "deprecateInstallations",
    values: [PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "deprecateInstallations(uint256[])",
    values: [PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "editDeprecateTime",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "editDeprecateTime(uint256,uint40)",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "editInstallationTypes",
    values: [PromiseOrValue<BigNumberish>[], InstallationTypeStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "editInstallationTypes(uint256[],(uint8,uint8,uint16,uint8,uint8,uint32,uint16,uint8,uint32,uint32,bool,uint256[4],uint256,uint256,uint256[],string)[])",
    values: [PromiseOrValue<BigNumberish>[], InstallationTypeStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "editInstallationUnequipTypes",
    values: [PromiseOrValue<BigNumberish>[], PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "editInstallationUnequipTypes(uint256[],uint256[])",
    values: [PromiseOrValue<BigNumberish>[], PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "fixMissingAltars",
    values: [InstallationAdminFacet.MissingAltarsStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "fixMissingAltars((uint256,uint256,uint256)[])",
    values: [InstallationAdminFacet.MissingAltarsStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getAddresses",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getAddresses()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getUniqueHash",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getUniqueHash(uint256,uint16,uint16,uint256)",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "mintInstallations",
    values: [
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "mintInstallations(uint16[],uint16[],address)",
    values: [
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "setAddresses",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "setAddresses(address,address,address,address,address,bytes)",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "toggleGameManager",
    values: [PromiseOrValue<string>, PromiseOrValue<boolean>]
  ): string;
  encodeFunctionData(
    functionFragment: "toggleGameManager(address,bool)",
    values: [PromiseOrValue<string>, PromiseOrValue<boolean>]
  ): string;

  decodeFunctionResult(
    functionFragment: "addInstallationTypes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addInstallationTypes((uint8,uint8,uint16,uint8,uint8,uint32,uint16,uint8,uint32,uint32,bool,uint256[4],uint256,uint256,uint256[],string,uint256,uint256)[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "deleteBuggedUpgrades",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "deleteBuggedUpgrades((uint256,uint16,uint16,uint256)[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "deleteBuggedUpgradesWithHashes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "deleteBuggedUpgradesWithHashes(bytes32[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "deprecateInstallations",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "deprecateInstallations(uint256[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "editDeprecateTime",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "editDeprecateTime(uint256,uint40)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "editInstallationTypes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "editInstallationTypes(uint256[],(uint8,uint8,uint16,uint8,uint8,uint32,uint16,uint8,uint32,uint32,bool,uint256[4],uint256,uint256,uint256[],string)[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "editInstallationUnequipTypes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "editInstallationUnequipTypes(uint256[],uint256[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "fixMissingAltars",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "fixMissingAltars((uint256,uint256,uint256)[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAddresses",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAddresses()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUniqueHash",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUniqueHash(uint256,uint16,uint16,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "mintInstallations",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "mintInstallations(uint16[],uint16[],address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setAddresses",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setAddresses(address,address,address,address,address,bytes)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "toggleGameManager",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "toggleGameManager(address,bool)",
    data: BytesLike
  ): Result;

  events: {
    "AddInstallationType(uint256)": EventFragment;
    "AddressesUpdated(address,address,address,address,address,bytes)": EventFragment;
    "DeprecateInstallation(uint256)": EventFragment;
    "EditDeprecateTime(uint256,uint256)": EventFragment;
    "EditInstallationType(uint256)": EventFragment;
    "EditInstallationUnequipType(uint256)": EventFragment;
    "SetInstallationUnequipType(uint256,uint256)": EventFragment;
    "UpgradeCancelled(uint256,uint256,uint256,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "AddInstallationType"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "AddInstallationType(uint256)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AddressesUpdated"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "AddressesUpdated(address,address,address,address,address,bytes)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "DeprecateInstallation"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "DeprecateInstallation(uint256)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "EditDeprecateTime"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "EditDeprecateTime(uint256,uint256)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "EditInstallationType"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "EditInstallationType(uint256)"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "EditInstallationUnequipType"
  ): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "EditInstallationUnequipType(uint256)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetInstallationUnequipType"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "SetInstallationUnequipType(uint256,uint256)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "UpgradeCancelled"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "UpgradeCancelled(uint256,uint256,uint256,uint256)"
  ): EventFragment;
}

export interface AddInstallationTypeEventObject {
  _installationId: BigNumber;
}
export type AddInstallationTypeEvent = TypedEvent<
  [BigNumber],
  AddInstallationTypeEventObject
>;

export type AddInstallationTypeEventFilter =
  TypedEventFilter<AddInstallationTypeEvent>;

export interface AddressesUpdatedEventObject {
  _aavegotchiDiamond: string;
  _realmDiamond: string;
  _gltr: string;
  _pixelcraft: string;
  _aavegotchiDAO: string;
  _backendPubKey: string;
}
export type AddressesUpdatedEvent = TypedEvent<
  [string, string, string, string, string, string],
  AddressesUpdatedEventObject
>;

export type AddressesUpdatedEventFilter =
  TypedEventFilter<AddressesUpdatedEvent>;

export interface DeprecateInstallationEventObject {
  _installationId: BigNumber;
}
export type DeprecateInstallationEvent = TypedEvent<
  [BigNumber],
  DeprecateInstallationEventObject
>;

export type DeprecateInstallationEventFilter =
  TypedEventFilter<DeprecateInstallationEvent>;

export interface EditDeprecateTimeEventObject {
  _installationId: BigNumber;
  _newDeprecatetime: BigNumber;
}
export type EditDeprecateTimeEvent = TypedEvent<
  [BigNumber, BigNumber],
  EditDeprecateTimeEventObject
>;

export type EditDeprecateTimeEventFilter =
  TypedEventFilter<EditDeprecateTimeEvent>;

export interface EditInstallationTypeEventObject {
  _installationId: BigNumber;
}
export type EditInstallationTypeEvent = TypedEvent<
  [BigNumber],
  EditInstallationTypeEventObject
>;

export type EditInstallationTypeEventFilter =
  TypedEventFilter<EditInstallationTypeEvent>;

export interface EditInstallationUnequipTypeEventObject {
  _installationId: BigNumber;
}
export type EditInstallationUnequipTypeEvent = TypedEvent<
  [BigNumber],
  EditInstallationUnequipTypeEventObject
>;

export type EditInstallationUnequipTypeEventFilter =
  TypedEventFilter<EditInstallationUnequipTypeEvent>;

export interface SetInstallationUnequipTypeEventObject {
  _installationId: BigNumber;
  _unequipType: BigNumber;
}
export type SetInstallationUnequipTypeEvent = TypedEvent<
  [BigNumber, BigNumber],
  SetInstallationUnequipTypeEventObject
>;

export type SetInstallationUnequipTypeEventFilter =
  TypedEventFilter<SetInstallationUnequipTypeEvent>;

export interface UpgradeCancelledEventObject {
  _realmId: BigNumber;
  _coordinateX: BigNumber;
  _coordinateY: BigNumber;
  _installationId: BigNumber;
}
export type UpgradeCancelledEvent = TypedEvent<
  [BigNumber, BigNumber, BigNumber, BigNumber],
  UpgradeCancelledEventObject
>;

export type UpgradeCancelledEventFilter =
  TypedEventFilter<UpgradeCancelledEvent>;

export interface InstallationAdminFacet extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: InstallationAdminFacetInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    addInstallationTypes(
      _installationTypes: InstallationTypeIOStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "addInstallationTypes((uint8,uint8,uint16,uint8,uint8,uint32,uint16,uint8,uint32,uint32,bool,uint256[4],uint256,uint256,uint256[],string,uint256,uint256)[])"(
      _installationTypes: InstallationTypeIOStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    deleteBuggedUpgrades(
      _upgrades: InstallationAdminFacet.BuggedUpgradeInputStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "deleteBuggedUpgrades((uint256,uint16,uint16,uint256)[])"(
      _upgrades: InstallationAdminFacet.BuggedUpgradeInputStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    deleteBuggedUpgradesWithHashes(
      _hashes: PromiseOrValue<BytesLike>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "deleteBuggedUpgradesWithHashes(bytes32[])"(
      _hashes: PromiseOrValue<BytesLike>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    deprecateInstallations(
      _installationIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "deprecateInstallations(uint256[])"(
      _installationIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    editDeprecateTime(
      _typeId: PromiseOrValue<BigNumberish>,
      _deprecateTime: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "editDeprecateTime(uint256,uint40)"(
      _typeId: PromiseOrValue<BigNumberish>,
      _deprecateTime: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    editInstallationTypes(
      _ids: PromiseOrValue<BigNumberish>[],
      _installationTypes: InstallationTypeStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "editInstallationTypes(uint256[],(uint8,uint8,uint16,uint8,uint8,uint32,uint16,uint8,uint32,uint32,bool,uint256[4],uint256,uint256,uint256[],string)[])"(
      _ids: PromiseOrValue<BigNumberish>[],
      _installationTypes: InstallationTypeStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    editInstallationUnequipTypes(
      _ids: PromiseOrValue<BigNumberish>[],
      _unequipTypes: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "editInstallationUnequipTypes(uint256[],uint256[])"(
      _ids: PromiseOrValue<BigNumberish>[],
      _unequipTypes: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    fixMissingAltars(
      _altars: InstallationAdminFacet.MissingAltarsStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "fixMissingAltars((uint256,uint256,uint256)[])"(
      _altars: InstallationAdminFacet.MissingAltarsStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    getAddresses(
      overrides?: CallOverrides
    ): Promise<
      [string, string, string, string, string, string] & {
        _aavegotchiDiamond: string;
        _realmDiamond: string;
        _gltr: string;
        _pixelcraft: string;
        _aavegotchiDAO: string;
        _backendPubKey: string;
      }
    >;

    "getAddresses()"(
      overrides?: CallOverrides
    ): Promise<
      [string, string, string, string, string, string] & {
        _aavegotchiDiamond: string;
        _realmDiamond: string;
        _gltr: string;
        _pixelcraft: string;
        _aavegotchiDAO: string;
        _backendPubKey: string;
      }
    >;

    getUniqueHash(
      _parcelId: PromiseOrValue<BigNumberish>,
      _x: PromiseOrValue<BigNumberish>,
      _y: PromiseOrValue<BigNumberish>,
      _installationId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getUniqueHash(uint256,uint16,uint16,uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      _x: PromiseOrValue<BigNumberish>,
      _y: PromiseOrValue<BigNumberish>,
      _installationId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    mintInstallations(
      _installationIds: PromiseOrValue<BigNumberish>[],
      _amounts: PromiseOrValue<BigNumberish>[],
      _toAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "mintInstallations(uint16[],uint16[],address)"(
      _installationIds: PromiseOrValue<BigNumberish>[],
      _amounts: PromiseOrValue<BigNumberish>[],
      _toAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setAddresses(
      _aavegotchiDiamond: PromiseOrValue<string>,
      _realmDiamond: PromiseOrValue<string>,
      _gltr: PromiseOrValue<string>,
      _pixelcraft: PromiseOrValue<string>,
      _aavegotchiDAO: PromiseOrValue<string>,
      _backendPubKey: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "setAddresses(address,address,address,address,address,bytes)"(
      _aavegotchiDiamond: PromiseOrValue<string>,
      _realmDiamond: PromiseOrValue<string>,
      _gltr: PromiseOrValue<string>,
      _pixelcraft: PromiseOrValue<string>,
      _aavegotchiDAO: PromiseOrValue<string>,
      _backendPubKey: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    toggleGameManager(
      _newGameManager: PromiseOrValue<string>,
      _active: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "toggleGameManager(address,bool)"(
      _newGameManager: PromiseOrValue<string>,
      _active: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  addInstallationTypes(
    _installationTypes: InstallationTypeIOStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "addInstallationTypes((uint8,uint8,uint16,uint8,uint8,uint32,uint16,uint8,uint32,uint32,bool,uint256[4],uint256,uint256,uint256[],string,uint256,uint256)[])"(
    _installationTypes: InstallationTypeIOStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  deleteBuggedUpgrades(
    _upgrades: InstallationAdminFacet.BuggedUpgradeInputStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "deleteBuggedUpgrades((uint256,uint16,uint16,uint256)[])"(
    _upgrades: InstallationAdminFacet.BuggedUpgradeInputStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  deleteBuggedUpgradesWithHashes(
    _hashes: PromiseOrValue<BytesLike>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "deleteBuggedUpgradesWithHashes(bytes32[])"(
    _hashes: PromiseOrValue<BytesLike>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  deprecateInstallations(
    _installationIds: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "deprecateInstallations(uint256[])"(
    _installationIds: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  editDeprecateTime(
    _typeId: PromiseOrValue<BigNumberish>,
    _deprecateTime: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "editDeprecateTime(uint256,uint40)"(
    _typeId: PromiseOrValue<BigNumberish>,
    _deprecateTime: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  editInstallationTypes(
    _ids: PromiseOrValue<BigNumberish>[],
    _installationTypes: InstallationTypeStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "editInstallationTypes(uint256[],(uint8,uint8,uint16,uint8,uint8,uint32,uint16,uint8,uint32,uint32,bool,uint256[4],uint256,uint256,uint256[],string)[])"(
    _ids: PromiseOrValue<BigNumberish>[],
    _installationTypes: InstallationTypeStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  editInstallationUnequipTypes(
    _ids: PromiseOrValue<BigNumberish>[],
    _unequipTypes: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "editInstallationUnequipTypes(uint256[],uint256[])"(
    _ids: PromiseOrValue<BigNumberish>[],
    _unequipTypes: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  fixMissingAltars(
    _altars: InstallationAdminFacet.MissingAltarsStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "fixMissingAltars((uint256,uint256,uint256)[])"(
    _altars: InstallationAdminFacet.MissingAltarsStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  getAddresses(
    overrides?: CallOverrides
  ): Promise<
    [string, string, string, string, string, string] & {
      _aavegotchiDiamond: string;
      _realmDiamond: string;
      _gltr: string;
      _pixelcraft: string;
      _aavegotchiDAO: string;
      _backendPubKey: string;
    }
  >;

  "getAddresses()"(
    overrides?: CallOverrides
  ): Promise<
    [string, string, string, string, string, string] & {
      _aavegotchiDiamond: string;
      _realmDiamond: string;
      _gltr: string;
      _pixelcraft: string;
      _aavegotchiDAO: string;
      _backendPubKey: string;
    }
  >;

  getUniqueHash(
    _parcelId: PromiseOrValue<BigNumberish>,
    _x: PromiseOrValue<BigNumberish>,
    _y: PromiseOrValue<BigNumberish>,
    _installationId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getUniqueHash(uint256,uint16,uint16,uint256)"(
    _parcelId: PromiseOrValue<BigNumberish>,
    _x: PromiseOrValue<BigNumberish>,
    _y: PromiseOrValue<BigNumberish>,
    _installationId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  mintInstallations(
    _installationIds: PromiseOrValue<BigNumberish>[],
    _amounts: PromiseOrValue<BigNumberish>[],
    _toAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "mintInstallations(uint16[],uint16[],address)"(
    _installationIds: PromiseOrValue<BigNumberish>[],
    _amounts: PromiseOrValue<BigNumberish>[],
    _toAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setAddresses(
    _aavegotchiDiamond: PromiseOrValue<string>,
    _realmDiamond: PromiseOrValue<string>,
    _gltr: PromiseOrValue<string>,
    _pixelcraft: PromiseOrValue<string>,
    _aavegotchiDAO: PromiseOrValue<string>,
    _backendPubKey: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "setAddresses(address,address,address,address,address,bytes)"(
    _aavegotchiDiamond: PromiseOrValue<string>,
    _realmDiamond: PromiseOrValue<string>,
    _gltr: PromiseOrValue<string>,
    _pixelcraft: PromiseOrValue<string>,
    _aavegotchiDAO: PromiseOrValue<string>,
    _backendPubKey: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  toggleGameManager(
    _newGameManager: PromiseOrValue<string>,
    _active: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "toggleGameManager(address,bool)"(
    _newGameManager: PromiseOrValue<string>,
    _active: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    addInstallationTypes(
      _installationTypes: InstallationTypeIOStruct[],
      overrides?: CallOverrides
    ): Promise<void>;

    "addInstallationTypes((uint8,uint8,uint16,uint8,uint8,uint32,uint16,uint8,uint32,uint32,bool,uint256[4],uint256,uint256,uint256[],string,uint256,uint256)[])"(
      _installationTypes: InstallationTypeIOStruct[],
      overrides?: CallOverrides
    ): Promise<void>;

    deleteBuggedUpgrades(
      _upgrades: InstallationAdminFacet.BuggedUpgradeInputStruct[],
      overrides?: CallOverrides
    ): Promise<void>;

    "deleteBuggedUpgrades((uint256,uint16,uint16,uint256)[])"(
      _upgrades: InstallationAdminFacet.BuggedUpgradeInputStruct[],
      overrides?: CallOverrides
    ): Promise<void>;

    deleteBuggedUpgradesWithHashes(
      _hashes: PromiseOrValue<BytesLike>[],
      overrides?: CallOverrides
    ): Promise<void>;

    "deleteBuggedUpgradesWithHashes(bytes32[])"(
      _hashes: PromiseOrValue<BytesLike>[],
      overrides?: CallOverrides
    ): Promise<void>;

    deprecateInstallations(
      _installationIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    "deprecateInstallations(uint256[])"(
      _installationIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    editDeprecateTime(
      _typeId: PromiseOrValue<BigNumberish>,
      _deprecateTime: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "editDeprecateTime(uint256,uint40)"(
      _typeId: PromiseOrValue<BigNumberish>,
      _deprecateTime: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    editInstallationTypes(
      _ids: PromiseOrValue<BigNumberish>[],
      _installationTypes: InstallationTypeStruct[],
      overrides?: CallOverrides
    ): Promise<void>;

    "editInstallationTypes(uint256[],(uint8,uint8,uint16,uint8,uint8,uint32,uint16,uint8,uint32,uint32,bool,uint256[4],uint256,uint256,uint256[],string)[])"(
      _ids: PromiseOrValue<BigNumberish>[],
      _installationTypes: InstallationTypeStruct[],
      overrides?: CallOverrides
    ): Promise<void>;

    editInstallationUnequipTypes(
      _ids: PromiseOrValue<BigNumberish>[],
      _unequipTypes: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    "editInstallationUnequipTypes(uint256[],uint256[])"(
      _ids: PromiseOrValue<BigNumberish>[],
      _unequipTypes: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    fixMissingAltars(
      _altars: InstallationAdminFacet.MissingAltarsStruct[],
      overrides?: CallOverrides
    ): Promise<void>;

    "fixMissingAltars((uint256,uint256,uint256)[])"(
      _altars: InstallationAdminFacet.MissingAltarsStruct[],
      overrides?: CallOverrides
    ): Promise<void>;

    getAddresses(
      overrides?: CallOverrides
    ): Promise<
      [string, string, string, string, string, string] & {
        _aavegotchiDiamond: string;
        _realmDiamond: string;
        _gltr: string;
        _pixelcraft: string;
        _aavegotchiDAO: string;
        _backendPubKey: string;
      }
    >;

    "getAddresses()"(
      overrides?: CallOverrides
    ): Promise<
      [string, string, string, string, string, string] & {
        _aavegotchiDiamond: string;
        _realmDiamond: string;
        _gltr: string;
        _pixelcraft: string;
        _aavegotchiDAO: string;
        _backendPubKey: string;
      }
    >;

    getUniqueHash(
      _parcelId: PromiseOrValue<BigNumberish>,
      _x: PromiseOrValue<BigNumberish>,
      _y: PromiseOrValue<BigNumberish>,
      _installationId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getUniqueHash(uint256,uint16,uint16,uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      _x: PromiseOrValue<BigNumberish>,
      _y: PromiseOrValue<BigNumberish>,
      _installationId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    mintInstallations(
      _installationIds: PromiseOrValue<BigNumberish>[],
      _amounts: PromiseOrValue<BigNumberish>[],
      _toAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    "mintInstallations(uint16[],uint16[],address)"(
      _installationIds: PromiseOrValue<BigNumberish>[],
      _amounts: PromiseOrValue<BigNumberish>[],
      _toAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    setAddresses(
      _aavegotchiDiamond: PromiseOrValue<string>,
      _realmDiamond: PromiseOrValue<string>,
      _gltr: PromiseOrValue<string>,
      _pixelcraft: PromiseOrValue<string>,
      _aavegotchiDAO: PromiseOrValue<string>,
      _backendPubKey: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    "setAddresses(address,address,address,address,address,bytes)"(
      _aavegotchiDiamond: PromiseOrValue<string>,
      _realmDiamond: PromiseOrValue<string>,
      _gltr: PromiseOrValue<string>,
      _pixelcraft: PromiseOrValue<string>,
      _aavegotchiDAO: PromiseOrValue<string>,
      _backendPubKey: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<void>;

    toggleGameManager(
      _newGameManager: PromiseOrValue<string>,
      _active: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<void>;

    "toggleGameManager(address,bool)"(
      _newGameManager: PromiseOrValue<string>,
      _active: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "AddInstallationType(uint256)"(
      _installationId?: null
    ): AddInstallationTypeEventFilter;
    AddInstallationType(_installationId?: null): AddInstallationTypeEventFilter;

    "AddressesUpdated(address,address,address,address,address,bytes)"(
      _aavegotchiDiamond?: null,
      _realmDiamond?: null,
      _gltr?: null,
      _pixelcraft?: null,
      _aavegotchiDAO?: null,
      _backendPubKey?: null
    ): AddressesUpdatedEventFilter;
    AddressesUpdated(
      _aavegotchiDiamond?: null,
      _realmDiamond?: null,
      _gltr?: null,
      _pixelcraft?: null,
      _aavegotchiDAO?: null,
      _backendPubKey?: null
    ): AddressesUpdatedEventFilter;

    "DeprecateInstallation(uint256)"(
      _installationId?: null
    ): DeprecateInstallationEventFilter;
    DeprecateInstallation(
      _installationId?: null
    ): DeprecateInstallationEventFilter;

    "EditDeprecateTime(uint256,uint256)"(
      _installationId?: null,
      _newDeprecatetime?: null
    ): EditDeprecateTimeEventFilter;
    EditDeprecateTime(
      _installationId?: null,
      _newDeprecatetime?: null
    ): EditDeprecateTimeEventFilter;

    "EditInstallationType(uint256)"(
      _installationId?: null
    ): EditInstallationTypeEventFilter;
    EditInstallationType(
      _installationId?: null
    ): EditInstallationTypeEventFilter;

    "EditInstallationUnequipType(uint256)"(
      _installationId?: null
    ): EditInstallationUnequipTypeEventFilter;
    EditInstallationUnequipType(
      _installationId?: null
    ): EditInstallationUnequipTypeEventFilter;

    "SetInstallationUnequipType(uint256,uint256)"(
      _installationId?: null,
      _unequipType?: null
    ): SetInstallationUnequipTypeEventFilter;
    SetInstallationUnequipType(
      _installationId?: null,
      _unequipType?: null
    ): SetInstallationUnequipTypeEventFilter;

    "UpgradeCancelled(uint256,uint256,uint256,uint256)"(
      _realmId?: PromiseOrValue<BigNumberish> | null,
      _coordinateX?: null,
      _coordinateY?: null,
      _installationId?: null
    ): UpgradeCancelledEventFilter;
    UpgradeCancelled(
      _realmId?: PromiseOrValue<BigNumberish> | null,
      _coordinateX?: null,
      _coordinateY?: null,
      _installationId?: null
    ): UpgradeCancelledEventFilter;
  };

  estimateGas: {
    addInstallationTypes(
      _installationTypes: InstallationTypeIOStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "addInstallationTypes((uint8,uint8,uint16,uint8,uint8,uint32,uint16,uint8,uint32,uint32,bool,uint256[4],uint256,uint256,uint256[],string,uint256,uint256)[])"(
      _installationTypes: InstallationTypeIOStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    deleteBuggedUpgrades(
      _upgrades: InstallationAdminFacet.BuggedUpgradeInputStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "deleteBuggedUpgrades((uint256,uint16,uint16,uint256)[])"(
      _upgrades: InstallationAdminFacet.BuggedUpgradeInputStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    deleteBuggedUpgradesWithHashes(
      _hashes: PromiseOrValue<BytesLike>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "deleteBuggedUpgradesWithHashes(bytes32[])"(
      _hashes: PromiseOrValue<BytesLike>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    deprecateInstallations(
      _installationIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "deprecateInstallations(uint256[])"(
      _installationIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    editDeprecateTime(
      _typeId: PromiseOrValue<BigNumberish>,
      _deprecateTime: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "editDeprecateTime(uint256,uint40)"(
      _typeId: PromiseOrValue<BigNumberish>,
      _deprecateTime: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    editInstallationTypes(
      _ids: PromiseOrValue<BigNumberish>[],
      _installationTypes: InstallationTypeStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "editInstallationTypes(uint256[],(uint8,uint8,uint16,uint8,uint8,uint32,uint16,uint8,uint32,uint32,bool,uint256[4],uint256,uint256,uint256[],string)[])"(
      _ids: PromiseOrValue<BigNumberish>[],
      _installationTypes: InstallationTypeStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    editInstallationUnequipTypes(
      _ids: PromiseOrValue<BigNumberish>[],
      _unequipTypes: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "editInstallationUnequipTypes(uint256[],uint256[])"(
      _ids: PromiseOrValue<BigNumberish>[],
      _unequipTypes: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    fixMissingAltars(
      _altars: InstallationAdminFacet.MissingAltarsStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "fixMissingAltars((uint256,uint256,uint256)[])"(
      _altars: InstallationAdminFacet.MissingAltarsStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    getAddresses(overrides?: CallOverrides): Promise<BigNumber>;

    "getAddresses()"(overrides?: CallOverrides): Promise<BigNumber>;

    getUniqueHash(
      _parcelId: PromiseOrValue<BigNumberish>,
      _x: PromiseOrValue<BigNumberish>,
      _y: PromiseOrValue<BigNumberish>,
      _installationId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getUniqueHash(uint256,uint16,uint16,uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      _x: PromiseOrValue<BigNumberish>,
      _y: PromiseOrValue<BigNumberish>,
      _installationId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    mintInstallations(
      _installationIds: PromiseOrValue<BigNumberish>[],
      _amounts: PromiseOrValue<BigNumberish>[],
      _toAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "mintInstallations(uint16[],uint16[],address)"(
      _installationIds: PromiseOrValue<BigNumberish>[],
      _amounts: PromiseOrValue<BigNumberish>[],
      _toAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setAddresses(
      _aavegotchiDiamond: PromiseOrValue<string>,
      _realmDiamond: PromiseOrValue<string>,
      _gltr: PromiseOrValue<string>,
      _pixelcraft: PromiseOrValue<string>,
      _aavegotchiDAO: PromiseOrValue<string>,
      _backendPubKey: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "setAddresses(address,address,address,address,address,bytes)"(
      _aavegotchiDiamond: PromiseOrValue<string>,
      _realmDiamond: PromiseOrValue<string>,
      _gltr: PromiseOrValue<string>,
      _pixelcraft: PromiseOrValue<string>,
      _aavegotchiDAO: PromiseOrValue<string>,
      _backendPubKey: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    toggleGameManager(
      _newGameManager: PromiseOrValue<string>,
      _active: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "toggleGameManager(address,bool)"(
      _newGameManager: PromiseOrValue<string>,
      _active: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addInstallationTypes(
      _installationTypes: InstallationTypeIOStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "addInstallationTypes((uint8,uint8,uint16,uint8,uint8,uint32,uint16,uint8,uint32,uint32,bool,uint256[4],uint256,uint256,uint256[],string,uint256,uint256)[])"(
      _installationTypes: InstallationTypeIOStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    deleteBuggedUpgrades(
      _upgrades: InstallationAdminFacet.BuggedUpgradeInputStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "deleteBuggedUpgrades((uint256,uint16,uint16,uint256)[])"(
      _upgrades: InstallationAdminFacet.BuggedUpgradeInputStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    deleteBuggedUpgradesWithHashes(
      _hashes: PromiseOrValue<BytesLike>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "deleteBuggedUpgradesWithHashes(bytes32[])"(
      _hashes: PromiseOrValue<BytesLike>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    deprecateInstallations(
      _installationIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "deprecateInstallations(uint256[])"(
      _installationIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    editDeprecateTime(
      _typeId: PromiseOrValue<BigNumberish>,
      _deprecateTime: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "editDeprecateTime(uint256,uint40)"(
      _typeId: PromiseOrValue<BigNumberish>,
      _deprecateTime: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    editInstallationTypes(
      _ids: PromiseOrValue<BigNumberish>[],
      _installationTypes: InstallationTypeStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "editInstallationTypes(uint256[],(uint8,uint8,uint16,uint8,uint8,uint32,uint16,uint8,uint32,uint32,bool,uint256[4],uint256,uint256,uint256[],string)[])"(
      _ids: PromiseOrValue<BigNumberish>[],
      _installationTypes: InstallationTypeStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    editInstallationUnequipTypes(
      _ids: PromiseOrValue<BigNumberish>[],
      _unequipTypes: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "editInstallationUnequipTypes(uint256[],uint256[])"(
      _ids: PromiseOrValue<BigNumberish>[],
      _unequipTypes: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    fixMissingAltars(
      _altars: InstallationAdminFacet.MissingAltarsStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "fixMissingAltars((uint256,uint256,uint256)[])"(
      _altars: InstallationAdminFacet.MissingAltarsStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    getAddresses(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getAddresses()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getUniqueHash(
      _parcelId: PromiseOrValue<BigNumberish>,
      _x: PromiseOrValue<BigNumberish>,
      _y: PromiseOrValue<BigNumberish>,
      _installationId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getUniqueHash(uint256,uint16,uint16,uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      _x: PromiseOrValue<BigNumberish>,
      _y: PromiseOrValue<BigNumberish>,
      _installationId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    mintInstallations(
      _installationIds: PromiseOrValue<BigNumberish>[],
      _amounts: PromiseOrValue<BigNumberish>[],
      _toAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "mintInstallations(uint16[],uint16[],address)"(
      _installationIds: PromiseOrValue<BigNumberish>[],
      _amounts: PromiseOrValue<BigNumberish>[],
      _toAddress: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setAddresses(
      _aavegotchiDiamond: PromiseOrValue<string>,
      _realmDiamond: PromiseOrValue<string>,
      _gltr: PromiseOrValue<string>,
      _pixelcraft: PromiseOrValue<string>,
      _aavegotchiDAO: PromiseOrValue<string>,
      _backendPubKey: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "setAddresses(address,address,address,address,address,bytes)"(
      _aavegotchiDiamond: PromiseOrValue<string>,
      _realmDiamond: PromiseOrValue<string>,
      _gltr: PromiseOrValue<string>,
      _pixelcraft: PromiseOrValue<string>,
      _aavegotchiDAO: PromiseOrValue<string>,
      _backendPubKey: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    toggleGameManager(
      _newGameManager: PromiseOrValue<string>,
      _active: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "toggleGameManager(address,bool)"(
      _newGameManager: PromiseOrValue<string>,
      _active: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
