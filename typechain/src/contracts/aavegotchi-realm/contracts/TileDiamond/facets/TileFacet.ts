/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../../../../common";

export type TileTypeStruct = {
  width: PromiseOrValue<BigNumberish>;
  height: PromiseOrValue<BigNumberish>;
  deprecated: PromiseOrValue<boolean>;
  tileType: PromiseOrValue<BigNumberish>;
  craftTime: PromiseOrValue<BigNumberish>;
  alchemicaCost: [
    PromiseOrValue<BigNumberish>,
    PromiseOrValue<BigNumberish>,
    PromiseOrValue<BigNumberish>,
    PromiseOrValue<BigNumberish>
  ];
  name: PromiseOrValue<string>;
};

export type TileTypeStructOutput = [
  number,
  number,
  boolean,
  number,
  number,
  [BigNumber, BigNumber, BigNumber, BigNumber],
  string
] & {
  width: number;
  height: number;
  deprecated: boolean;
  tileType: number;
  craftTime: number;
  alchemicaCost: [BigNumber, BigNumber, BigNumber, BigNumber];
  name: string;
};

export type TileTypeIOStruct = {
  width: PromiseOrValue<BigNumberish>;
  height: PromiseOrValue<BigNumberish>;
  deprecated: PromiseOrValue<boolean>;
  tileType: PromiseOrValue<BigNumberish>;
  craftTime: PromiseOrValue<BigNumberish>;
  alchemicaCost: [
    PromiseOrValue<BigNumberish>,
    PromiseOrValue<BigNumberish>,
    PromiseOrValue<BigNumberish>,
    PromiseOrValue<BigNumberish>
  ];
  name: PromiseOrValue<string>;
  deprecateTime: PromiseOrValue<BigNumberish>;
};

export type TileTypeIOStructOutput = [
  number,
  number,
  boolean,
  number,
  number,
  [BigNumber, BigNumber, BigNumber, BigNumber],
  string,
  BigNumber
] & {
  width: number;
  height: number;
  deprecated: boolean;
  tileType: number;
  craftTime: number;
  alchemicaCost: [BigNumber, BigNumber, BigNumber, BigNumber];
  name: string;
  deprecateTime: BigNumber;
};

export type QueueItemStruct = {
  id: PromiseOrValue<BigNumberish>;
  readyBlock: PromiseOrValue<BigNumberish>;
  tileType: PromiseOrValue<BigNumberish>;
  claimed: PromiseOrValue<boolean>;
  owner: PromiseOrValue<string>;
};

export type QueueItemStructOutput = [
  BigNumber,
  number,
  number,
  boolean,
  string
] & {
  id: BigNumber;
  readyBlock: number;
  tileType: number;
  claimed: boolean;
  owner: string;
};

export type ItemTypeIOStruct = {
  balance: PromiseOrValue<BigNumberish>;
  itemId: PromiseOrValue<BigNumberish>;
  tileType: TileTypeStruct;
};

export type ItemTypeIOStructOutput = [
  BigNumber,
  BigNumber,
  TileTypeStructOutput
] & { balance: BigNumber; itemId: BigNumber; tileType: TileTypeStructOutput };

export declare namespace TileFacet {
  export type BatchCraftTilesInputStruct = {
    tileID: PromiseOrValue<BigNumberish>;
    amount: PromiseOrValue<BigNumberish>;
    gltr: PromiseOrValue<BigNumberish>;
  };

  export type BatchCraftTilesInputStructOutput = [number, number, number] & {
    tileID: number;
    amount: number;
    gltr: number;
  };

  export type TileIdIOStruct = {
    tileId: PromiseOrValue<BigNumberish>;
    balance: PromiseOrValue<BigNumberish>;
  };

  export type TileIdIOStructOutput = [BigNumber, BigNumber] & {
    tileId: BigNumber;
    balance: BigNumber;
  };
}

export interface TileFacetInterface extends utils.Interface {
  functions: {
    "addTileTypes((uint8,uint8,bool,uint16,uint32,uint256[4],string,uint256)[])": FunctionFragment;
    "balanceOfToken(address,uint256,uint256)": FunctionFragment;
    "batchCraftTiles((uint16,uint16,uint40)[])": FunctionFragment;
    "claimTiles(uint256[])": FunctionFragment;
    "craftTiles(uint16[])": FunctionFragment;
    "deprecateTiles(uint256[])": FunctionFragment;
    "editDeprecateTime(uint256[],uint40[])": FunctionFragment;
    "editTileTypes(uint256[],(uint8,uint8,bool,uint16,uint32,uint256[4],string)[])": FunctionFragment;
    "equipTile(address,uint256,uint256)": FunctionFragment;
    "getCraftQueue(address)": FunctionFragment;
    "getTileType(uint256)": FunctionFragment;
    "getTileTypes(uint256[])": FunctionFragment;
    "reduceCraftTime(uint256[],uint40[])": FunctionFragment;
    "setAddresses(address,address,address,address,address)": FunctionFragment;
    "tileBalancesOfToken(address,uint256)": FunctionFragment;
    "tileBalancesOfTokenByIds(address,uint256,uint256[])": FunctionFragment;
    "tileBalancesOfTokenWithTypes(address,uint256)": FunctionFragment;
    "tilesBalances(address)": FunctionFragment;
    "tilesBalancesWithTypes(address)": FunctionFragment;
    "unequipTile(address,uint256,uint256)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "addTileTypes"
      | "addTileTypes((uint8,uint8,bool,uint16,uint32,uint256[4],string,uint256)[])"
      | "balanceOfToken"
      | "balanceOfToken(address,uint256,uint256)"
      | "batchCraftTiles"
      | "batchCraftTiles((uint16,uint16,uint40)[])"
      | "claimTiles"
      | "claimTiles(uint256[])"
      | "craftTiles"
      | "craftTiles(uint16[])"
      | "deprecateTiles"
      | "deprecateTiles(uint256[])"
      | "editDeprecateTime"
      | "editDeprecateTime(uint256[],uint40[])"
      | "editTileTypes"
      | "editTileTypes(uint256[],(uint8,uint8,bool,uint16,uint32,uint256[4],string)[])"
      | "equipTile"
      | "equipTile(address,uint256,uint256)"
      | "getCraftQueue"
      | "getCraftQueue(address)"
      | "getTileType"
      | "getTileType(uint256)"
      | "getTileTypes"
      | "getTileTypes(uint256[])"
      | "reduceCraftTime"
      | "reduceCraftTime(uint256[],uint40[])"
      | "setAddresses"
      | "setAddresses(address,address,address,address,address)"
      | "tileBalancesOfToken"
      | "tileBalancesOfToken(address,uint256)"
      | "tileBalancesOfTokenByIds"
      | "tileBalancesOfTokenByIds(address,uint256,uint256[])"
      | "tileBalancesOfTokenWithTypes"
      | "tileBalancesOfTokenWithTypes(address,uint256)"
      | "tilesBalances"
      | "tilesBalances(address)"
      | "tilesBalancesWithTypes"
      | "tilesBalancesWithTypes(address)"
      | "unequipTile"
      | "unequipTile(address,uint256,uint256)"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "addTileTypes",
    values: [TileTypeIOStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "addTileTypes((uint8,uint8,bool,uint16,uint32,uint256[4],string,uint256)[])",
    values: [TileTypeIOStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOfToken",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOfToken(address,uint256,uint256)",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "batchCraftTiles",
    values: [TileFacet.BatchCraftTilesInputStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchCraftTiles((uint16,uint16,uint40)[])",
    values: [TileFacet.BatchCraftTilesInputStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "claimTiles",
    values: [PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "claimTiles(uint256[])",
    values: [PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "craftTiles",
    values: [PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "craftTiles(uint16[])",
    values: [PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "deprecateTiles",
    values: [PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "deprecateTiles(uint256[])",
    values: [PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "editDeprecateTime",
    values: [PromiseOrValue<BigNumberish>[], PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "editDeprecateTime(uint256[],uint40[])",
    values: [PromiseOrValue<BigNumberish>[], PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "editTileTypes",
    values: [PromiseOrValue<BigNumberish>[], TileTypeStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "editTileTypes(uint256[],(uint8,uint8,bool,uint16,uint32,uint256[4],string)[])",
    values: [PromiseOrValue<BigNumberish>[], TileTypeStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "equipTile",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "equipTile(address,uint256,uint256)",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getCraftQueue",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getCraftQueue(address)",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getTileType",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getTileType(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getTileTypes",
    values: [PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getTileTypes(uint256[])",
    values: [PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "reduceCraftTime",
    values: [PromiseOrValue<BigNumberish>[], PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "reduceCraftTime(uint256[],uint40[])",
    values: [PromiseOrValue<BigNumberish>[], PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "setAddresses",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "setAddresses(address,address,address,address,address)",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "tileBalancesOfToken",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "tileBalancesOfToken(address,uint256)",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "tileBalancesOfTokenByIds",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "tileBalancesOfTokenByIds(address,uint256,uint256[])",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "tileBalancesOfTokenWithTypes",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "tileBalancesOfTokenWithTypes(address,uint256)",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "tilesBalances",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "tilesBalances(address)",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "tilesBalancesWithTypes",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "tilesBalancesWithTypes(address)",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "unequipTile",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "unequipTile(address,uint256,uint256)",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "addTileTypes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addTileTypes((uint8,uint8,bool,uint16,uint32,uint256[4],string,uint256)[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "balanceOfToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "balanceOfToken(address,uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchCraftTiles",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchCraftTiles((uint16,uint16,uint40)[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "claimTiles", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "claimTiles(uint256[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "craftTiles", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "craftTiles(uint16[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "deprecateTiles",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "deprecateTiles(uint256[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "editDeprecateTime",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "editDeprecateTime(uint256[],uint40[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "editTileTypes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "editTileTypes(uint256[],(uint8,uint8,bool,uint16,uint32,uint256[4],string)[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "equipTile", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "equipTile(address,uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCraftQueue",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getCraftQueue(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTileType",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTileType(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTileTypes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTileTypes(uint256[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "reduceCraftTime",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "reduceCraftTime(uint256[],uint40[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setAddresses",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setAddresses(address,address,address,address,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tileBalancesOfToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tileBalancesOfToken(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tileBalancesOfTokenByIds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tileBalancesOfTokenByIds(address,uint256,uint256[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tileBalancesOfTokenWithTypes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tileBalancesOfTokenWithTypes(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tilesBalances",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tilesBalances(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tilesBalancesWithTypes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tilesBalancesWithTypes(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "unequipTile",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "unequipTile(address,uint256,uint256)",
    data: BytesLike
  ): Result;

  events: {
    "AddedToQueue(uint256,uint256,uint256,address)": EventFragment;
    "AddressesUpdated(address,address,address)": EventFragment;
    "CraftTimeReduced(uint256,uint256)": EventFragment;
    "EditDeprecateTime(uint256,uint256)": EventFragment;
    "EditTileType(uint256,tuple)": EventFragment;
    "QueueClaimed(uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "AddedToQueue"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "AddedToQueue(uint256,uint256,uint256,address)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "AddressesUpdated"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "AddressesUpdated(address,address,address)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "CraftTimeReduced"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "CraftTimeReduced(uint256,uint256)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "EditDeprecateTime"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "EditDeprecateTime(uint256,uint256)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "EditTileType"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "EditTileType(uint256,tuple)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "QueueClaimed"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "QueueClaimed(uint256)"): EventFragment;
}

export interface AddedToQueueEventObject {
  _queueId: BigNumber;
  _tileId: BigNumber;
  _readyBlock: BigNumber;
  _sender: string;
}
export type AddedToQueueEvent = TypedEvent<
  [BigNumber, BigNumber, BigNumber, string],
  AddedToQueueEventObject
>;

export type AddedToQueueEventFilter = TypedEventFilter<AddedToQueueEvent>;

export interface AddressesUpdatedEventObject {
  _aavegotchiDiamond: string;
  _realmDiamond: string;
  _gltr: string;
}
export type AddressesUpdatedEvent = TypedEvent<
  [string, string, string],
  AddressesUpdatedEventObject
>;

export type AddressesUpdatedEventFilter =
  TypedEventFilter<AddressesUpdatedEvent>;

export interface CraftTimeReducedEventObject {
  _queueId: BigNumber;
  _blocksReduced: BigNumber;
}
export type CraftTimeReducedEvent = TypedEvent<
  [BigNumber, BigNumber],
  CraftTimeReducedEventObject
>;

export type CraftTimeReducedEventFilter =
  TypedEventFilter<CraftTimeReducedEvent>;

export interface EditDeprecateTimeEventObject {
  _tileId: BigNumber;
  _newDeprecatetime: BigNumber;
}
export type EditDeprecateTimeEvent = TypedEvent<
  [BigNumber, BigNumber],
  EditDeprecateTimeEventObject
>;

export type EditDeprecateTimeEventFilter =
  TypedEventFilter<EditDeprecateTimeEvent>;

export interface EditTileTypeEventObject {
  _tileId: BigNumber;
  arg1: TileTypeStructOutput;
}
export type EditTileTypeEvent = TypedEvent<
  [BigNumber, TileTypeStructOutput],
  EditTileTypeEventObject
>;

export type EditTileTypeEventFilter = TypedEventFilter<EditTileTypeEvent>;

export interface QueueClaimedEventObject {
  _queueId: BigNumber;
}
export type QueueClaimedEvent = TypedEvent<
  [BigNumber],
  QueueClaimedEventObject
>;

export type QueueClaimedEventFilter = TypedEventFilter<QueueClaimedEvent>;

export interface TileFacet extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: TileFacetInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    addTileTypes(
      _tileTypes: TileTypeIOStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "addTileTypes((uint8,uint8,bool,uint16,uint32,uint256[4],string,uint256)[])"(
      _tileTypes: TileTypeIOStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    balanceOfToken(
      _tokenContract: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { value: BigNumber }>;

    "balanceOfToken(address,uint256,uint256)"(
      _tokenContract: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { value: BigNumber }>;

    batchCraftTiles(
      _inputs: TileFacet.BatchCraftTilesInputStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "batchCraftTiles((uint16,uint16,uint40)[])"(
      _inputs: TileFacet.BatchCraftTilesInputStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    claimTiles(
      _queueIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "claimTiles(uint256[])"(
      _queueIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    craftTiles(
      _tileTypes: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "craftTiles(uint16[])"(
      _tileTypes: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    deprecateTiles(
      _tileIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "deprecateTiles(uint256[])"(
      _tileIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    editDeprecateTime(
      _typeIds: PromiseOrValue<BigNumberish>[],
      _deprecateTimes: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "editDeprecateTime(uint256[],uint40[])"(
      _typeIds: PromiseOrValue<BigNumberish>[],
      _deprecateTimes: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    editTileTypes(
      _typeIds: PromiseOrValue<BigNumberish>[],
      _updatedTiles: TileTypeStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "editTileTypes(uint256[],(uint8,uint8,bool,uint16,uint32,uint256[4],string)[])"(
      _typeIds: PromiseOrValue<BigNumberish>[],
      _updatedTiles: TileTypeStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    equipTile(
      _owner: PromiseOrValue<string>,
      _realmId: PromiseOrValue<BigNumberish>,
      _tileId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "equipTile(address,uint256,uint256)"(
      _owner: PromiseOrValue<string>,
      _realmId: PromiseOrValue<BigNumberish>,
      _tileId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    getCraftQueue(
      _owner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [QueueItemStructOutput[]] & { output_: QueueItemStructOutput[] }
    >;

    "getCraftQueue(address)"(
      _owner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [QueueItemStructOutput[]] & { output_: QueueItemStructOutput[] }
    >;

    getTileType(
      _tileTypeId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[TileTypeStructOutput] & { tileType: TileTypeStructOutput }>;

    "getTileType(uint256)"(
      _tileTypeId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[TileTypeStructOutput] & { tileType: TileTypeStructOutput }>;

    getTileTypes(
      _tileTypeIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<
      [TileTypeStructOutput[]] & { tileTypes_: TileTypeStructOutput[] }
    >;

    "getTileTypes(uint256[])"(
      _tileTypeIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<
      [TileTypeStructOutput[]] & { tileTypes_: TileTypeStructOutput[] }
    >;

    reduceCraftTime(
      _queueIds: PromiseOrValue<BigNumberish>[],
      _amounts: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "reduceCraftTime(uint256[],uint40[])"(
      _queueIds: PromiseOrValue<BigNumberish>[],
      _amounts: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setAddresses(
      _aavegotchiDiamond: PromiseOrValue<string>,
      _realmDiamond: PromiseOrValue<string>,
      _gltr: PromiseOrValue<string>,
      _pixelcraft: PromiseOrValue<string>,
      _aavegotchiDAO: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "setAddresses(address,address,address,address,address)"(
      _aavegotchiDiamond: PromiseOrValue<string>,
      _realmDiamond: PromiseOrValue<string>,
      _gltr: PromiseOrValue<string>,
      _pixelcraft: PromiseOrValue<string>,
      _aavegotchiDAO: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    tileBalancesOfToken(
      _tokenContract: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [TileFacet.TileIdIOStructOutput[]] & {
        bals_: TileFacet.TileIdIOStructOutput[];
      }
    >;

    "tileBalancesOfToken(address,uint256)"(
      _tokenContract: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [TileFacet.TileIdIOStructOutput[]] & {
        bals_: TileFacet.TileIdIOStructOutput[];
      }
    >;

    tileBalancesOfTokenByIds(
      _tokenContract: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      _ids: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    "tileBalancesOfTokenByIds(address,uint256,uint256[])"(
      _tokenContract: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      _ids: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    tileBalancesOfTokenWithTypes(
      _tokenContract: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [ItemTypeIOStructOutput[]] & {
        tileBalancesOfTokenWithTypes_: ItemTypeIOStructOutput[];
      }
    >;

    "tileBalancesOfTokenWithTypes(address,uint256)"(
      _tokenContract: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [ItemTypeIOStructOutput[]] & {
        tileBalancesOfTokenWithTypes_: ItemTypeIOStructOutput[];
      }
    >;

    tilesBalances(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [TileFacet.TileIdIOStructOutput[]] & {
        bals_: TileFacet.TileIdIOStructOutput[];
      }
    >;

    "tilesBalances(address)"(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [TileFacet.TileIdIOStructOutput[]] & {
        bals_: TileFacet.TileIdIOStructOutput[];
      }
    >;

    tilesBalancesWithTypes(
      _owner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [ItemTypeIOStructOutput[]] & { output_: ItemTypeIOStructOutput[] }
    >;

    "tilesBalancesWithTypes(address)"(
      _owner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [ItemTypeIOStructOutput[]] & { output_: ItemTypeIOStructOutput[] }
    >;

    unequipTile(
      _owner: PromiseOrValue<string>,
      _realmId: PromiseOrValue<BigNumberish>,
      _tileId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "unequipTile(address,uint256,uint256)"(
      _owner: PromiseOrValue<string>,
      _realmId: PromiseOrValue<BigNumberish>,
      _tileId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  addTileTypes(
    _tileTypes: TileTypeIOStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "addTileTypes((uint8,uint8,bool,uint16,uint32,uint256[4],string,uint256)[])"(
    _tileTypes: TileTypeIOStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  balanceOfToken(
    _tokenContract: PromiseOrValue<string>,
    _tokenId: PromiseOrValue<BigNumberish>,
    _id: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "balanceOfToken(address,uint256,uint256)"(
    _tokenContract: PromiseOrValue<string>,
    _tokenId: PromiseOrValue<BigNumberish>,
    _id: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  batchCraftTiles(
    _inputs: TileFacet.BatchCraftTilesInputStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "batchCraftTiles((uint16,uint16,uint40)[])"(
    _inputs: TileFacet.BatchCraftTilesInputStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  claimTiles(
    _queueIds: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "claimTiles(uint256[])"(
    _queueIds: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  craftTiles(
    _tileTypes: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "craftTiles(uint16[])"(
    _tileTypes: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  deprecateTiles(
    _tileIds: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "deprecateTiles(uint256[])"(
    _tileIds: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  editDeprecateTime(
    _typeIds: PromiseOrValue<BigNumberish>[],
    _deprecateTimes: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "editDeprecateTime(uint256[],uint40[])"(
    _typeIds: PromiseOrValue<BigNumberish>[],
    _deprecateTimes: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  editTileTypes(
    _typeIds: PromiseOrValue<BigNumberish>[],
    _updatedTiles: TileTypeStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "editTileTypes(uint256[],(uint8,uint8,bool,uint16,uint32,uint256[4],string)[])"(
    _typeIds: PromiseOrValue<BigNumberish>[],
    _updatedTiles: TileTypeStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  equipTile(
    _owner: PromiseOrValue<string>,
    _realmId: PromiseOrValue<BigNumberish>,
    _tileId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "equipTile(address,uint256,uint256)"(
    _owner: PromiseOrValue<string>,
    _realmId: PromiseOrValue<BigNumberish>,
    _tileId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  getCraftQueue(
    _owner: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<QueueItemStructOutput[]>;

  "getCraftQueue(address)"(
    _owner: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<QueueItemStructOutput[]>;

  getTileType(
    _tileTypeId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<TileTypeStructOutput>;

  "getTileType(uint256)"(
    _tileTypeId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<TileTypeStructOutput>;

  getTileTypes(
    _tileTypeIds: PromiseOrValue<BigNumberish>[],
    overrides?: CallOverrides
  ): Promise<TileTypeStructOutput[]>;

  "getTileTypes(uint256[])"(
    _tileTypeIds: PromiseOrValue<BigNumberish>[],
    overrides?: CallOverrides
  ): Promise<TileTypeStructOutput[]>;

  reduceCraftTime(
    _queueIds: PromiseOrValue<BigNumberish>[],
    _amounts: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "reduceCraftTime(uint256[],uint40[])"(
    _queueIds: PromiseOrValue<BigNumberish>[],
    _amounts: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setAddresses(
    _aavegotchiDiamond: PromiseOrValue<string>,
    _realmDiamond: PromiseOrValue<string>,
    _gltr: PromiseOrValue<string>,
    _pixelcraft: PromiseOrValue<string>,
    _aavegotchiDAO: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "setAddresses(address,address,address,address,address)"(
    _aavegotchiDiamond: PromiseOrValue<string>,
    _realmDiamond: PromiseOrValue<string>,
    _gltr: PromiseOrValue<string>,
    _pixelcraft: PromiseOrValue<string>,
    _aavegotchiDAO: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  tileBalancesOfToken(
    _tokenContract: PromiseOrValue<string>,
    _tokenId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<TileFacet.TileIdIOStructOutput[]>;

  "tileBalancesOfToken(address,uint256)"(
    _tokenContract: PromiseOrValue<string>,
    _tokenId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<TileFacet.TileIdIOStructOutput[]>;

  tileBalancesOfTokenByIds(
    _tokenContract: PromiseOrValue<string>,
    _tokenId: PromiseOrValue<BigNumberish>,
    _ids: PromiseOrValue<BigNumberish>[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  "tileBalancesOfTokenByIds(address,uint256,uint256[])"(
    _tokenContract: PromiseOrValue<string>,
    _tokenId: PromiseOrValue<BigNumberish>,
    _ids: PromiseOrValue<BigNumberish>[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  tileBalancesOfTokenWithTypes(
    _tokenContract: PromiseOrValue<string>,
    _tokenId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<ItemTypeIOStructOutput[]>;

  "tileBalancesOfTokenWithTypes(address,uint256)"(
    _tokenContract: PromiseOrValue<string>,
    _tokenId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<ItemTypeIOStructOutput[]>;

  tilesBalances(
    _account: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<TileFacet.TileIdIOStructOutput[]>;

  "tilesBalances(address)"(
    _account: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<TileFacet.TileIdIOStructOutput[]>;

  tilesBalancesWithTypes(
    _owner: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<ItemTypeIOStructOutput[]>;

  "tilesBalancesWithTypes(address)"(
    _owner: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<ItemTypeIOStructOutput[]>;

  unequipTile(
    _owner: PromiseOrValue<string>,
    _realmId: PromiseOrValue<BigNumberish>,
    _tileId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "unequipTile(address,uint256,uint256)"(
    _owner: PromiseOrValue<string>,
    _realmId: PromiseOrValue<BigNumberish>,
    _tileId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    addTileTypes(
      _tileTypes: TileTypeIOStruct[],
      overrides?: CallOverrides
    ): Promise<void>;

    "addTileTypes((uint8,uint8,bool,uint16,uint32,uint256[4],string,uint256)[])"(
      _tileTypes: TileTypeIOStruct[],
      overrides?: CallOverrides
    ): Promise<void>;

    balanceOfToken(
      _tokenContract: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "balanceOfToken(address,uint256,uint256)"(
      _tokenContract: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    batchCraftTiles(
      _inputs: TileFacet.BatchCraftTilesInputStruct[],
      overrides?: CallOverrides
    ): Promise<void>;

    "batchCraftTiles((uint16,uint16,uint40)[])"(
      _inputs: TileFacet.BatchCraftTilesInputStruct[],
      overrides?: CallOverrides
    ): Promise<void>;

    claimTiles(
      _queueIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    "claimTiles(uint256[])"(
      _queueIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    craftTiles(
      _tileTypes: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    "craftTiles(uint16[])"(
      _tileTypes: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    deprecateTiles(
      _tileIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    "deprecateTiles(uint256[])"(
      _tileIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    editDeprecateTime(
      _typeIds: PromiseOrValue<BigNumberish>[],
      _deprecateTimes: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    "editDeprecateTime(uint256[],uint40[])"(
      _typeIds: PromiseOrValue<BigNumberish>[],
      _deprecateTimes: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    editTileTypes(
      _typeIds: PromiseOrValue<BigNumberish>[],
      _updatedTiles: TileTypeStruct[],
      overrides?: CallOverrides
    ): Promise<void>;

    "editTileTypes(uint256[],(uint8,uint8,bool,uint16,uint32,uint256[4],string)[])"(
      _typeIds: PromiseOrValue<BigNumberish>[],
      _updatedTiles: TileTypeStruct[],
      overrides?: CallOverrides
    ): Promise<void>;

    equipTile(
      _owner: PromiseOrValue<string>,
      _realmId: PromiseOrValue<BigNumberish>,
      _tileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "equipTile(address,uint256,uint256)"(
      _owner: PromiseOrValue<string>,
      _realmId: PromiseOrValue<BigNumberish>,
      _tileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    getCraftQueue(
      _owner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<QueueItemStructOutput[]>;

    "getCraftQueue(address)"(
      _owner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<QueueItemStructOutput[]>;

    getTileType(
      _tileTypeId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<TileTypeStructOutput>;

    "getTileType(uint256)"(
      _tileTypeId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<TileTypeStructOutput>;

    getTileTypes(
      _tileTypeIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<TileTypeStructOutput[]>;

    "getTileTypes(uint256[])"(
      _tileTypeIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<TileTypeStructOutput[]>;

    reduceCraftTime(
      _queueIds: PromiseOrValue<BigNumberish>[],
      _amounts: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    "reduceCraftTime(uint256[],uint40[])"(
      _queueIds: PromiseOrValue<BigNumberish>[],
      _amounts: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    setAddresses(
      _aavegotchiDiamond: PromiseOrValue<string>,
      _realmDiamond: PromiseOrValue<string>,
      _gltr: PromiseOrValue<string>,
      _pixelcraft: PromiseOrValue<string>,
      _aavegotchiDAO: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    "setAddresses(address,address,address,address,address)"(
      _aavegotchiDiamond: PromiseOrValue<string>,
      _realmDiamond: PromiseOrValue<string>,
      _gltr: PromiseOrValue<string>,
      _pixelcraft: PromiseOrValue<string>,
      _aavegotchiDAO: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    tileBalancesOfToken(
      _tokenContract: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<TileFacet.TileIdIOStructOutput[]>;

    "tileBalancesOfToken(address,uint256)"(
      _tokenContract: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<TileFacet.TileIdIOStructOutput[]>;

    tileBalancesOfTokenByIds(
      _tokenContract: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      _ids: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    "tileBalancesOfTokenByIds(address,uint256,uint256[])"(
      _tokenContract: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      _ids: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    tileBalancesOfTokenWithTypes(
      _tokenContract: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<ItemTypeIOStructOutput[]>;

    "tileBalancesOfTokenWithTypes(address,uint256)"(
      _tokenContract: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<ItemTypeIOStructOutput[]>;

    tilesBalances(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<TileFacet.TileIdIOStructOutput[]>;

    "tilesBalances(address)"(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<TileFacet.TileIdIOStructOutput[]>;

    tilesBalancesWithTypes(
      _owner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<ItemTypeIOStructOutput[]>;

    "tilesBalancesWithTypes(address)"(
      _owner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<ItemTypeIOStructOutput[]>;

    unequipTile(
      _owner: PromiseOrValue<string>,
      _realmId: PromiseOrValue<BigNumberish>,
      _tileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "unequipTile(address,uint256,uint256)"(
      _owner: PromiseOrValue<string>,
      _realmId: PromiseOrValue<BigNumberish>,
      _tileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "AddedToQueue(uint256,uint256,uint256,address)"(
      _queueId?: PromiseOrValue<BigNumberish> | null,
      _tileId?: PromiseOrValue<BigNumberish> | null,
      _readyBlock?: null,
      _sender?: null
    ): AddedToQueueEventFilter;
    AddedToQueue(
      _queueId?: PromiseOrValue<BigNumberish> | null,
      _tileId?: PromiseOrValue<BigNumberish> | null,
      _readyBlock?: null,
      _sender?: null
    ): AddedToQueueEventFilter;

    "AddressesUpdated(address,address,address)"(
      _aavegotchiDiamond?: null,
      _realmDiamond?: null,
      _gltr?: null
    ): AddressesUpdatedEventFilter;
    AddressesUpdated(
      _aavegotchiDiamond?: null,
      _realmDiamond?: null,
      _gltr?: null
    ): AddressesUpdatedEventFilter;

    "CraftTimeReduced(uint256,uint256)"(
      _queueId?: PromiseOrValue<BigNumberish> | null,
      _blocksReduced?: null
    ): CraftTimeReducedEventFilter;
    CraftTimeReduced(
      _queueId?: PromiseOrValue<BigNumberish> | null,
      _blocksReduced?: null
    ): CraftTimeReducedEventFilter;

    "EditDeprecateTime(uint256,uint256)"(
      _tileId?: null,
      _newDeprecatetime?: null
    ): EditDeprecateTimeEventFilter;
    EditDeprecateTime(
      _tileId?: null,
      _newDeprecatetime?: null
    ): EditDeprecateTimeEventFilter;

    "EditTileType(uint256,tuple)"(
      _tileId?: PromiseOrValue<BigNumberish> | null,
      arg1?: null
    ): EditTileTypeEventFilter;
    EditTileType(
      _tileId?: PromiseOrValue<BigNumberish> | null,
      arg1?: null
    ): EditTileTypeEventFilter;

    "QueueClaimed(uint256)"(
      _queueId?: PromiseOrValue<BigNumberish> | null
    ): QueueClaimedEventFilter;
    QueueClaimed(
      _queueId?: PromiseOrValue<BigNumberish> | null
    ): QueueClaimedEventFilter;
  };

  estimateGas: {
    addTileTypes(
      _tileTypes: TileTypeIOStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "addTileTypes((uint8,uint8,bool,uint16,uint32,uint256[4],string,uint256)[])"(
      _tileTypes: TileTypeIOStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    balanceOfToken(
      _tokenContract: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "balanceOfToken(address,uint256,uint256)"(
      _tokenContract: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    batchCraftTiles(
      _inputs: TileFacet.BatchCraftTilesInputStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "batchCraftTiles((uint16,uint16,uint40)[])"(
      _inputs: TileFacet.BatchCraftTilesInputStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    claimTiles(
      _queueIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "claimTiles(uint256[])"(
      _queueIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    craftTiles(
      _tileTypes: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "craftTiles(uint16[])"(
      _tileTypes: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    deprecateTiles(
      _tileIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "deprecateTiles(uint256[])"(
      _tileIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    editDeprecateTime(
      _typeIds: PromiseOrValue<BigNumberish>[],
      _deprecateTimes: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "editDeprecateTime(uint256[],uint40[])"(
      _typeIds: PromiseOrValue<BigNumberish>[],
      _deprecateTimes: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    editTileTypes(
      _typeIds: PromiseOrValue<BigNumberish>[],
      _updatedTiles: TileTypeStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "editTileTypes(uint256[],(uint8,uint8,bool,uint16,uint32,uint256[4],string)[])"(
      _typeIds: PromiseOrValue<BigNumberish>[],
      _updatedTiles: TileTypeStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    equipTile(
      _owner: PromiseOrValue<string>,
      _realmId: PromiseOrValue<BigNumberish>,
      _tileId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "equipTile(address,uint256,uint256)"(
      _owner: PromiseOrValue<string>,
      _realmId: PromiseOrValue<BigNumberish>,
      _tileId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    getCraftQueue(
      _owner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getCraftQueue(address)"(
      _owner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTileType(
      _tileTypeId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTileType(uint256)"(
      _tileTypeId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTileTypes(
      _tileTypeIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTileTypes(uint256[])"(
      _tileTypeIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    reduceCraftTime(
      _queueIds: PromiseOrValue<BigNumberish>[],
      _amounts: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "reduceCraftTime(uint256[],uint40[])"(
      _queueIds: PromiseOrValue<BigNumberish>[],
      _amounts: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setAddresses(
      _aavegotchiDiamond: PromiseOrValue<string>,
      _realmDiamond: PromiseOrValue<string>,
      _gltr: PromiseOrValue<string>,
      _pixelcraft: PromiseOrValue<string>,
      _aavegotchiDAO: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "setAddresses(address,address,address,address,address)"(
      _aavegotchiDiamond: PromiseOrValue<string>,
      _realmDiamond: PromiseOrValue<string>,
      _gltr: PromiseOrValue<string>,
      _pixelcraft: PromiseOrValue<string>,
      _aavegotchiDAO: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    tileBalancesOfToken(
      _tokenContract: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tileBalancesOfToken(address,uint256)"(
      _tokenContract: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tileBalancesOfTokenByIds(
      _tokenContract: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      _ids: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tileBalancesOfTokenByIds(address,uint256,uint256[])"(
      _tokenContract: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      _ids: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tileBalancesOfTokenWithTypes(
      _tokenContract: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tileBalancesOfTokenWithTypes(address,uint256)"(
      _tokenContract: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tilesBalances(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tilesBalances(address)"(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tilesBalancesWithTypes(
      _owner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tilesBalancesWithTypes(address)"(
      _owner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    unequipTile(
      _owner: PromiseOrValue<string>,
      _realmId: PromiseOrValue<BigNumberish>,
      _tileId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "unequipTile(address,uint256,uint256)"(
      _owner: PromiseOrValue<string>,
      _realmId: PromiseOrValue<BigNumberish>,
      _tileId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addTileTypes(
      _tileTypes: TileTypeIOStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "addTileTypes((uint8,uint8,bool,uint16,uint32,uint256[4],string,uint256)[])"(
      _tileTypes: TileTypeIOStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    balanceOfToken(
      _tokenContract: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "balanceOfToken(address,uint256,uint256)"(
      _tokenContract: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    batchCraftTiles(
      _inputs: TileFacet.BatchCraftTilesInputStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "batchCraftTiles((uint16,uint16,uint40)[])"(
      _inputs: TileFacet.BatchCraftTilesInputStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    claimTiles(
      _queueIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "claimTiles(uint256[])"(
      _queueIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    craftTiles(
      _tileTypes: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "craftTiles(uint16[])"(
      _tileTypes: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    deprecateTiles(
      _tileIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "deprecateTiles(uint256[])"(
      _tileIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    editDeprecateTime(
      _typeIds: PromiseOrValue<BigNumberish>[],
      _deprecateTimes: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "editDeprecateTime(uint256[],uint40[])"(
      _typeIds: PromiseOrValue<BigNumberish>[],
      _deprecateTimes: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    editTileTypes(
      _typeIds: PromiseOrValue<BigNumberish>[],
      _updatedTiles: TileTypeStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "editTileTypes(uint256[],(uint8,uint8,bool,uint16,uint32,uint256[4],string)[])"(
      _typeIds: PromiseOrValue<BigNumberish>[],
      _updatedTiles: TileTypeStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    equipTile(
      _owner: PromiseOrValue<string>,
      _realmId: PromiseOrValue<BigNumberish>,
      _tileId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "equipTile(address,uint256,uint256)"(
      _owner: PromiseOrValue<string>,
      _realmId: PromiseOrValue<BigNumberish>,
      _tileId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    getCraftQueue(
      _owner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getCraftQueue(address)"(
      _owner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTileType(
      _tileTypeId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getTileType(uint256)"(
      _tileTypeId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTileTypes(
      _tileTypeIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getTileTypes(uint256[])"(
      _tileTypeIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    reduceCraftTime(
      _queueIds: PromiseOrValue<BigNumberish>[],
      _amounts: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "reduceCraftTime(uint256[],uint40[])"(
      _queueIds: PromiseOrValue<BigNumberish>[],
      _amounts: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setAddresses(
      _aavegotchiDiamond: PromiseOrValue<string>,
      _realmDiamond: PromiseOrValue<string>,
      _gltr: PromiseOrValue<string>,
      _pixelcraft: PromiseOrValue<string>,
      _aavegotchiDAO: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "setAddresses(address,address,address,address,address)"(
      _aavegotchiDiamond: PromiseOrValue<string>,
      _realmDiamond: PromiseOrValue<string>,
      _gltr: PromiseOrValue<string>,
      _pixelcraft: PromiseOrValue<string>,
      _aavegotchiDAO: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    tileBalancesOfToken(
      _tokenContract: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tileBalancesOfToken(address,uint256)"(
      _tokenContract: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tileBalancesOfTokenByIds(
      _tokenContract: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      _ids: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tileBalancesOfTokenByIds(address,uint256,uint256[])"(
      _tokenContract: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      _ids: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tileBalancesOfTokenWithTypes(
      _tokenContract: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tileBalancesOfTokenWithTypes(address,uint256)"(
      _tokenContract: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tilesBalances(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tilesBalances(address)"(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tilesBalancesWithTypes(
      _owner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tilesBalancesWithTypes(address)"(
      _owner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    unequipTile(
      _owner: PromiseOrValue<string>,
      _realmId: PromiseOrValue<BigNumberish>,
      _tileId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "unequipTile(address,uint256,uint256)"(
      _owner: PromiseOrValue<string>,
      _realmId: PromiseOrValue<BigNumberish>,
      _tileId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
