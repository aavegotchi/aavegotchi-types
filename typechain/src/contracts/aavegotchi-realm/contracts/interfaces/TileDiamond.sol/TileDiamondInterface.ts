/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../../../../common";

export declare namespace TileDiamondInterface {
  export type TileTypeStruct = {
    width: PromiseOrValue<BigNumberish>;
    height: PromiseOrValue<BigNumberish>;
    deprecated: PromiseOrValue<boolean>;
    tileType: PromiseOrValue<BigNumberish>;
    alchemicaCost: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ];
    craftTime: PromiseOrValue<BigNumberish>;
    name: PromiseOrValue<string>;
  };

  export type TileTypeStructOutput = [
    BigNumber,
    BigNumber,
    boolean,
    number,
    [BigNumber, BigNumber, BigNumber, BigNumber],
    BigNumber,
    string
  ] & {
    width: BigNumber;
    height: BigNumber;
    deprecated: boolean;
    tileType: number;
    alchemicaCost: [BigNumber, BigNumber, BigNumber, BigNumber];
    craftTime: BigNumber;
    name: string;
  };

  export type TileIdIOStruct = {
    tileId: PromiseOrValue<BigNumberish>;
    balance: PromiseOrValue<BigNumberish>;
  };

  export type TileIdIOStructOutput = [BigNumber, BigNumber] & {
    tileId: BigNumber;
    balance: BigNumber;
  };
}

export interface TileDiamondInterfaceInterface extends utils.Interface {
  functions: {
    "addTileTypes((uint256,uint256,bool,uint16,uint256[4],uint256,string)[])": FunctionFragment;
    "balanceOf(address,uint256)": FunctionFragment;
    "claimTiles(uint256[])": FunctionFragment;
    "craftTiles(uint256[])": FunctionFragment;
    "equipTile(address,uint256,uint256)": FunctionFragment;
    "getAlchemicaAddresses()": FunctionFragment;
    "getTileType(uint256)": FunctionFragment;
    "getTileTypes(uint256[])": FunctionFragment;
    "tileBalancesOfTokenByIds(address,uint256,uint256[])": FunctionFragment;
    "tilesBalances(address)": FunctionFragment;
    "unequipTile(address,uint256,uint256)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "addTileTypes"
      | "addTileTypes((uint256,uint256,bool,uint16,uint256[4],uint256,string)[])"
      | "balanceOf"
      | "balanceOf(address,uint256)"
      | "claimTiles"
      | "claimTiles(uint256[])"
      | "craftTiles"
      | "craftTiles(uint256[])"
      | "equipTile"
      | "equipTile(address,uint256,uint256)"
      | "getAlchemicaAddresses"
      | "getAlchemicaAddresses()"
      | "getTileType"
      | "getTileType(uint256)"
      | "getTileTypes"
      | "getTileTypes(uint256[])"
      | "tileBalancesOfTokenByIds"
      | "tileBalancesOfTokenByIds(address,uint256,uint256[])"
      | "tilesBalances"
      | "tilesBalances(address)"
      | "unequipTile"
      | "unequipTile(address,uint256,uint256)"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "addTileTypes",
    values: [TileDiamondInterface.TileTypeStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "addTileTypes((uint256,uint256,bool,uint16,uint256[4],uint256,string)[])",
    values: [TileDiamondInterface.TileTypeStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOf",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOf(address,uint256)",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "claimTiles",
    values: [PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "claimTiles(uint256[])",
    values: [PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "craftTiles",
    values: [PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "craftTiles(uint256[])",
    values: [PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "equipTile",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "equipTile(address,uint256,uint256)",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getAlchemicaAddresses",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getAlchemicaAddresses()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getTileType",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getTileType(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getTileTypes",
    values: [PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getTileTypes(uint256[])",
    values: [PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "tileBalancesOfTokenByIds",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "tileBalancesOfTokenByIds(address,uint256,uint256[])",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "tilesBalances",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "tilesBalances(address)",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "unequipTile",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "unequipTile(address,uint256,uint256)",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "addTileTypes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addTileTypes((uint256,uint256,bool,uint16,uint256[4],uint256,string)[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "balanceOf", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "balanceOf(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "claimTiles", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "claimTiles(uint256[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "craftTiles", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "craftTiles(uint256[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "equipTile", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "equipTile(address,uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAlchemicaAddresses",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAlchemicaAddresses()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTileType",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTileType(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTileTypes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTileTypes(uint256[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tileBalancesOfTokenByIds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tileBalancesOfTokenByIds(address,uint256,uint256[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tilesBalances",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tilesBalances(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "unequipTile",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "unequipTile(address,uint256,uint256)",
    data: BytesLike
  ): Result;

  events: {};
}

export interface TileDiamondInterface extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: TileDiamondInterfaceInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    addTileTypes(
      _tileTypes: TileDiamondInterface.TileTypeStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "addTileTypes((uint256,uint256,bool,uint16,uint256[4],uint256,string)[])"(
      _tileTypes: TileDiamondInterface.TileTypeStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    balanceOf(
      _owner: PromiseOrValue<string>,
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { bal_: BigNumber }>;

    "balanceOf(address,uint256)"(
      _owner: PromiseOrValue<string>,
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { bal_: BigNumber }>;

    claimTiles(
      _queueIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "claimTiles(uint256[])"(
      _queueIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    craftTiles(
      _tileTypes: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "craftTiles(uint256[])"(
      _tileTypes: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    equipTile(
      _owner: PromiseOrValue<string>,
      _realmTokenId: PromiseOrValue<BigNumberish>,
      _tileId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "equipTile(address,uint256,uint256)"(
      _owner: PromiseOrValue<string>,
      _realmTokenId: PromiseOrValue<BigNumberish>,
      _tileId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    getAlchemicaAddresses(overrides?: CallOverrides): Promise<[string[]]>;

    "getAlchemicaAddresses()"(overrides?: CallOverrides): Promise<[string[]]>;

    getTileType(
      _itemId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [TileDiamondInterface.TileTypeStructOutput] & {
        tileType: TileDiamondInterface.TileTypeStructOutput;
      }
    >;

    "getTileType(uint256)"(
      _itemId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [TileDiamondInterface.TileTypeStructOutput] & {
        tileType: TileDiamondInterface.TileTypeStructOutput;
      }
    >;

    getTileTypes(
      _itemIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<
      [TileDiamondInterface.TileTypeStructOutput[]] & {
        itemTypes_: TileDiamondInterface.TileTypeStructOutput[];
      }
    >;

    "getTileTypes(uint256[])"(
      _itemIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<
      [TileDiamondInterface.TileTypeStructOutput[]] & {
        itemTypes_: TileDiamondInterface.TileTypeStructOutput[];
      }
    >;

    tileBalancesOfTokenByIds(
      _tokenContract: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      _ids: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    "tileBalancesOfTokenByIds(address,uint256,uint256[])"(
      _tokenContract: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      _ids: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    tilesBalances(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [TileDiamondInterface.TileIdIOStructOutput[]] & {
        bals_: TileDiamondInterface.TileIdIOStructOutput[];
      }
    >;

    "tilesBalances(address)"(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [TileDiamondInterface.TileIdIOStructOutput[]] & {
        bals_: TileDiamondInterface.TileIdIOStructOutput[];
      }
    >;

    unequipTile(
      _owner: PromiseOrValue<string>,
      _realmId: PromiseOrValue<BigNumberish>,
      _tileId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "unequipTile(address,uint256,uint256)"(
      _owner: PromiseOrValue<string>,
      _realmId: PromiseOrValue<BigNumberish>,
      _tileId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  addTileTypes(
    _tileTypes: TileDiamondInterface.TileTypeStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "addTileTypes((uint256,uint256,bool,uint16,uint256[4],uint256,string)[])"(
    _tileTypes: TileDiamondInterface.TileTypeStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  balanceOf(
    _owner: PromiseOrValue<string>,
    _id: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "balanceOf(address,uint256)"(
    _owner: PromiseOrValue<string>,
    _id: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  claimTiles(
    _queueIds: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "claimTiles(uint256[])"(
    _queueIds: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  craftTiles(
    _tileTypes: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "craftTiles(uint256[])"(
    _tileTypes: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  equipTile(
    _owner: PromiseOrValue<string>,
    _realmTokenId: PromiseOrValue<BigNumberish>,
    _tileId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "equipTile(address,uint256,uint256)"(
    _owner: PromiseOrValue<string>,
    _realmTokenId: PromiseOrValue<BigNumberish>,
    _tileId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  getAlchemicaAddresses(overrides?: CallOverrides): Promise<string[]>;

  "getAlchemicaAddresses()"(overrides?: CallOverrides): Promise<string[]>;

  getTileType(
    _itemId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<TileDiamondInterface.TileTypeStructOutput>;

  "getTileType(uint256)"(
    _itemId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<TileDiamondInterface.TileTypeStructOutput>;

  getTileTypes(
    _itemIds: PromiseOrValue<BigNumberish>[],
    overrides?: CallOverrides
  ): Promise<TileDiamondInterface.TileTypeStructOutput[]>;

  "getTileTypes(uint256[])"(
    _itemIds: PromiseOrValue<BigNumberish>[],
    overrides?: CallOverrides
  ): Promise<TileDiamondInterface.TileTypeStructOutput[]>;

  tileBalancesOfTokenByIds(
    _tokenContract: PromiseOrValue<string>,
    _tokenId: PromiseOrValue<BigNumberish>,
    _ids: PromiseOrValue<BigNumberish>[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  "tileBalancesOfTokenByIds(address,uint256,uint256[])"(
    _tokenContract: PromiseOrValue<string>,
    _tokenId: PromiseOrValue<BigNumberish>,
    _ids: PromiseOrValue<BigNumberish>[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  tilesBalances(
    _account: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<TileDiamondInterface.TileIdIOStructOutput[]>;

  "tilesBalances(address)"(
    _account: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<TileDiamondInterface.TileIdIOStructOutput[]>;

  unequipTile(
    _owner: PromiseOrValue<string>,
    _realmId: PromiseOrValue<BigNumberish>,
    _tileId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "unequipTile(address,uint256,uint256)"(
    _owner: PromiseOrValue<string>,
    _realmId: PromiseOrValue<BigNumberish>,
    _tileId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    addTileTypes(
      _tileTypes: TileDiamondInterface.TileTypeStruct[],
      overrides?: CallOverrides
    ): Promise<void>;

    "addTileTypes((uint256,uint256,bool,uint16,uint256[4],uint256,string)[])"(
      _tileTypes: TileDiamondInterface.TileTypeStruct[],
      overrides?: CallOverrides
    ): Promise<void>;

    balanceOf(
      _owner: PromiseOrValue<string>,
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "balanceOf(address,uint256)"(
      _owner: PromiseOrValue<string>,
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    claimTiles(
      _queueIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    "claimTiles(uint256[])"(
      _queueIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    craftTiles(
      _tileTypes: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    "craftTiles(uint256[])"(
      _tileTypes: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    equipTile(
      _owner: PromiseOrValue<string>,
      _realmTokenId: PromiseOrValue<BigNumberish>,
      _tileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "equipTile(address,uint256,uint256)"(
      _owner: PromiseOrValue<string>,
      _realmTokenId: PromiseOrValue<BigNumberish>,
      _tileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    getAlchemicaAddresses(overrides?: CallOverrides): Promise<string[]>;

    "getAlchemicaAddresses()"(overrides?: CallOverrides): Promise<string[]>;

    getTileType(
      _itemId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<TileDiamondInterface.TileTypeStructOutput>;

    "getTileType(uint256)"(
      _itemId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<TileDiamondInterface.TileTypeStructOutput>;

    getTileTypes(
      _itemIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<TileDiamondInterface.TileTypeStructOutput[]>;

    "getTileTypes(uint256[])"(
      _itemIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<TileDiamondInterface.TileTypeStructOutput[]>;

    tileBalancesOfTokenByIds(
      _tokenContract: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      _ids: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    "tileBalancesOfTokenByIds(address,uint256,uint256[])"(
      _tokenContract: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      _ids: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    tilesBalances(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<TileDiamondInterface.TileIdIOStructOutput[]>;

    "tilesBalances(address)"(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<TileDiamondInterface.TileIdIOStructOutput[]>;

    unequipTile(
      _owner: PromiseOrValue<string>,
      _realmId: PromiseOrValue<BigNumberish>,
      _tileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "unequipTile(address,uint256,uint256)"(
      _owner: PromiseOrValue<string>,
      _realmId: PromiseOrValue<BigNumberish>,
      _tileId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    addTileTypes(
      _tileTypes: TileDiamondInterface.TileTypeStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "addTileTypes((uint256,uint256,bool,uint16,uint256[4],uint256,string)[])"(
      _tileTypes: TileDiamondInterface.TileTypeStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    balanceOf(
      _owner: PromiseOrValue<string>,
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "balanceOf(address,uint256)"(
      _owner: PromiseOrValue<string>,
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    claimTiles(
      _queueIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "claimTiles(uint256[])"(
      _queueIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    craftTiles(
      _tileTypes: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "craftTiles(uint256[])"(
      _tileTypes: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    equipTile(
      _owner: PromiseOrValue<string>,
      _realmTokenId: PromiseOrValue<BigNumberish>,
      _tileId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "equipTile(address,uint256,uint256)"(
      _owner: PromiseOrValue<string>,
      _realmTokenId: PromiseOrValue<BigNumberish>,
      _tileId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    getAlchemicaAddresses(overrides?: CallOverrides): Promise<BigNumber>;

    "getAlchemicaAddresses()"(overrides?: CallOverrides): Promise<BigNumber>;

    getTileType(
      _itemId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTileType(uint256)"(
      _itemId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTileTypes(
      _itemIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTileTypes(uint256[])"(
      _itemIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tileBalancesOfTokenByIds(
      _tokenContract: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      _ids: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tileBalancesOfTokenByIds(address,uint256,uint256[])"(
      _tokenContract: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      _ids: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    tilesBalances(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tilesBalances(address)"(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    unequipTile(
      _owner: PromiseOrValue<string>,
      _realmId: PromiseOrValue<BigNumberish>,
      _tileId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "unequipTile(address,uint256,uint256)"(
      _owner: PromiseOrValue<string>,
      _realmId: PromiseOrValue<BigNumberish>,
      _tileId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addTileTypes(
      _tileTypes: TileDiamondInterface.TileTypeStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "addTileTypes((uint256,uint256,bool,uint16,uint256[4],uint256,string)[])"(
      _tileTypes: TileDiamondInterface.TileTypeStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    balanceOf(
      _owner: PromiseOrValue<string>,
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "balanceOf(address,uint256)"(
      _owner: PromiseOrValue<string>,
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    claimTiles(
      _queueIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "claimTiles(uint256[])"(
      _queueIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    craftTiles(
      _tileTypes: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "craftTiles(uint256[])"(
      _tileTypes: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    equipTile(
      _owner: PromiseOrValue<string>,
      _realmTokenId: PromiseOrValue<BigNumberish>,
      _tileId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "equipTile(address,uint256,uint256)"(
      _owner: PromiseOrValue<string>,
      _realmTokenId: PromiseOrValue<BigNumberish>,
      _tileId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    getAlchemicaAddresses(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAlchemicaAddresses()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTileType(
      _itemId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getTileType(uint256)"(
      _itemId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTileTypes(
      _itemIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getTileTypes(uint256[])"(
      _itemIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tileBalancesOfTokenByIds(
      _tokenContract: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      _ids: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tileBalancesOfTokenByIds(address,uint256,uint256[])"(
      _tokenContract: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      _ids: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    tilesBalances(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tilesBalances(address)"(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    unequipTile(
      _owner: PromiseOrValue<string>,
      _realmId: PromiseOrValue<BigNumberish>,
      _tileId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "unequipTile(address,uint256,uint256)"(
      _owner: PromiseOrValue<string>,
      _realmId: PromiseOrValue<BigNumberish>,
      _tileId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
