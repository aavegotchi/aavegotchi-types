/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../../../common";

export declare namespace IStakingFacet {
  export type PoolInputStruct = {
    _poolAddress: PromiseOrValue<string>;
    _poolReceiptToken: PromiseOrValue<string>;
    _rate: PromiseOrValue<BigNumberish>;
    _poolName: PromiseOrValue<string>;
    _poolUrl: PromiseOrValue<string>;
  };

  export type PoolInputStructOutput = [
    string,
    string,
    BigNumber,
    string,
    string
  ] & {
    _poolAddress: string;
    _poolReceiptToken: string;
    _rate: BigNumber;
    _poolName: string;
    _poolUrl: string;
  };

  export type PoolStakedOutputStruct = {
    poolAddress: PromiseOrValue<string>;
    poolName: PromiseOrValue<string>;
    poolUrl: PromiseOrValue<string>;
    rate: PromiseOrValue<BigNumberish>;
    amount: PromiseOrValue<BigNumberish>;
  };

  export type PoolStakedOutputStructOutput = [
    string,
    string,
    string,
    BigNumber,
    BigNumber
  ] & {
    poolAddress: string;
    poolName: string;
    poolUrl: string;
    rate: BigNumber;
    amount: BigNumber;
  };
}

export interface IStakingFacetInterface extends utils.Interface {
  functions: {
    "addRateManagers(address[])": FunctionFragment;
    "bulkFrens(address[])": FunctionFragment;
    "bumpEpoch(address,uint256)": FunctionFragment;
    "claimTickets(uint256[],uint256[])": FunctionFragment;
    "convertTickets(uint256[],uint256[])": FunctionFragment;
    "currentEpoch()": FunctionFragment;
    "frens(address)": FunctionFragment;
    "getGhstUsdcPoolToken()": FunctionFragment;
    "getGhstWethPoolToken()": FunctionFragment;
    "getPoolInfo(address,uint256)": FunctionFragment;
    "getStkGhstUsdcToken()": FunctionFragment;
    "getStkGhstWethToken()": FunctionFragment;
    "hasMigrated(address)": FunctionFragment;
    "initiateEpoch((address,address,uint256,string,string)[])": FunctionFragment;
    "isRateManager(address)": FunctionFragment;
    "migrateToV2(address[])": FunctionFragment;
    "poolRatesInEpoch(uint256)": FunctionFragment;
    "removeRateManagers(address[])": FunctionFragment;
    "stakeGhst(uint256)": FunctionFragment;
    "stakeGhstUsdcPoolTokens(uint256)": FunctionFragment;
    "stakeGhstWethPoolTokens(uint256)": FunctionFragment;
    "stakeIntoPool(address,uint256)": FunctionFragment;
    "stakeIntoPoolForUser(address,uint256,address)": FunctionFragment;
    "stakePoolTokens(uint256)": FunctionFragment;
    "staked(address)": FunctionFragment;
    "stakedInCurrentEpoch(address)": FunctionFragment;
    "stakedInEpoch(address,uint256)": FunctionFragment;
    "ticketCost(uint256)": FunctionFragment;
    "updateRates(uint256,(address,address,uint256,string,string)[])": FunctionFragment;
    "userEpoch(address)": FunctionFragment;
    "withdrawFromPool(address,uint256)": FunctionFragment;
    "withdrawFromPoolForUser(address,uint256,address)": FunctionFragment;
    "withdrawGhstStake(uint256)": FunctionFragment;
    "withdrawGhstUsdcPoolStake(uint256)": FunctionFragment;
    "withdrawGhstWethPoolStake(uint256)": FunctionFragment;
    "withdrawPoolStake(uint256)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "addRateManagers"
      | "addRateManagers(address[])"
      | "bulkFrens"
      | "bulkFrens(address[])"
      | "bumpEpoch"
      | "bumpEpoch(address,uint256)"
      | "claimTickets"
      | "claimTickets(uint256[],uint256[])"
      | "convertTickets"
      | "convertTickets(uint256[],uint256[])"
      | "currentEpoch"
      | "currentEpoch()"
      | "frens"
      | "frens(address)"
      | "getGhstUsdcPoolToken"
      | "getGhstUsdcPoolToken()"
      | "getGhstWethPoolToken"
      | "getGhstWethPoolToken()"
      | "getPoolInfo"
      | "getPoolInfo(address,uint256)"
      | "getStkGhstUsdcToken"
      | "getStkGhstUsdcToken()"
      | "getStkGhstWethToken"
      | "getStkGhstWethToken()"
      | "hasMigrated"
      | "hasMigrated(address)"
      | "initiateEpoch"
      | "initiateEpoch((address,address,uint256,string,string)[])"
      | "isRateManager"
      | "isRateManager(address)"
      | "migrateToV2"
      | "migrateToV2(address[])"
      | "poolRatesInEpoch"
      | "poolRatesInEpoch(uint256)"
      | "removeRateManagers"
      | "removeRateManagers(address[])"
      | "stakeGhst"
      | "stakeGhst(uint256)"
      | "stakeGhstUsdcPoolTokens"
      | "stakeGhstUsdcPoolTokens(uint256)"
      | "stakeGhstWethPoolTokens"
      | "stakeGhstWethPoolTokens(uint256)"
      | "stakeIntoPool"
      | "stakeIntoPool(address,uint256)"
      | "stakeIntoPoolForUser"
      | "stakeIntoPoolForUser(address,uint256,address)"
      | "stakePoolTokens"
      | "stakePoolTokens(uint256)"
      | "staked"
      | "staked(address)"
      | "stakedInCurrentEpoch"
      | "stakedInCurrentEpoch(address)"
      | "stakedInEpoch"
      | "stakedInEpoch(address,uint256)"
      | "ticketCost"
      | "ticketCost(uint256)"
      | "updateRates"
      | "updateRates(uint256,(address,address,uint256,string,string)[])"
      | "userEpoch"
      | "userEpoch(address)"
      | "withdrawFromPool"
      | "withdrawFromPool(address,uint256)"
      | "withdrawFromPoolForUser"
      | "withdrawFromPoolForUser(address,uint256,address)"
      | "withdrawGhstStake"
      | "withdrawGhstStake(uint256)"
      | "withdrawGhstUsdcPoolStake"
      | "withdrawGhstUsdcPoolStake(uint256)"
      | "withdrawGhstWethPoolStake"
      | "withdrawGhstWethPoolStake(uint256)"
      | "withdrawPoolStake"
      | "withdrawPoolStake(uint256)"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "addRateManagers",
    values: [PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "addRateManagers(address[])",
    values: [PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "bulkFrens",
    values: [PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "bulkFrens(address[])",
    values: [PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "bumpEpoch",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "bumpEpoch(address,uint256)",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "claimTickets",
    values: [PromiseOrValue<BigNumberish>[], PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "claimTickets(uint256[],uint256[])",
    values: [PromiseOrValue<BigNumberish>[], PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "convertTickets",
    values: [PromiseOrValue<BigNumberish>[], PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "convertTickets(uint256[],uint256[])",
    values: [PromiseOrValue<BigNumberish>[], PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "currentEpoch",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "currentEpoch()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "frens",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "frens(address)",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getGhstUsdcPoolToken",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getGhstUsdcPoolToken()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getGhstWethPoolToken",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getGhstWethPoolToken()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getPoolInfo",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getPoolInfo(address,uint256)",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getStkGhstUsdcToken",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getStkGhstUsdcToken()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getStkGhstWethToken",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getStkGhstWethToken()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "hasMigrated",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "hasMigrated(address)",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "initiateEpoch",
    values: [IStakingFacet.PoolInputStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "initiateEpoch((address,address,uint256,string,string)[])",
    values: [IStakingFacet.PoolInputStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "isRateManager",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "isRateManager(address)",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "migrateToV2",
    values: [PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "migrateToV2(address[])",
    values: [PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "poolRatesInEpoch",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "poolRatesInEpoch(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "removeRateManagers",
    values: [PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "removeRateManagers(address[])",
    values: [PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "stakeGhst",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "stakeGhst(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "stakeGhstUsdcPoolTokens",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "stakeGhstUsdcPoolTokens(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "stakeGhstWethPoolTokens",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "stakeGhstWethPoolTokens(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "stakeIntoPool",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "stakeIntoPool(address,uint256)",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "stakeIntoPoolForUser",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "stakeIntoPoolForUser(address,uint256,address)",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "stakePoolTokens",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "stakePoolTokens(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "staked",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "staked(address)",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "stakedInCurrentEpoch",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "stakedInCurrentEpoch(address)",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "stakedInEpoch",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "stakedInEpoch(address,uint256)",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "ticketCost",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "ticketCost(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "updateRates",
    values: [PromiseOrValue<BigNumberish>, IStakingFacet.PoolInputStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "updateRates(uint256,(address,address,uint256,string,string)[])",
    values: [PromiseOrValue<BigNumberish>, IStakingFacet.PoolInputStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "userEpoch",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "userEpoch(address)",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawFromPool",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawFromPool(address,uint256)",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawFromPoolForUser",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawFromPoolForUser(address,uint256,address)",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawGhstStake",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawGhstStake(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawGhstUsdcPoolStake",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawGhstUsdcPoolStake(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawGhstWethPoolStake",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawGhstWethPoolStake(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawPoolStake",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawPoolStake(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;

  decodeFunctionResult(
    functionFragment: "addRateManagers",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addRateManagers(address[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "bulkFrens", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "bulkFrens(address[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "bumpEpoch", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "bumpEpoch(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "claimTickets",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "claimTickets(uint256[],uint256[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "convertTickets",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "convertTickets(uint256[],uint256[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "currentEpoch",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "currentEpoch()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "frens", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "frens(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGhstUsdcPoolToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGhstUsdcPoolToken()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGhstWethPoolToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGhstWethPoolToken()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPoolInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPoolInfo(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getStkGhstUsdcToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getStkGhstUsdcToken()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getStkGhstWethToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getStkGhstWethToken()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "hasMigrated",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "hasMigrated(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "initiateEpoch",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "initiateEpoch((address,address,uint256,string,string)[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isRateManager",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isRateManager(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "migrateToV2",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "migrateToV2(address[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "poolRatesInEpoch",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "poolRatesInEpoch(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeRateManagers",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeRateManagers(address[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "stakeGhst", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "stakeGhst(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "stakeGhstUsdcPoolTokens",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "stakeGhstUsdcPoolTokens(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "stakeGhstWethPoolTokens",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "stakeGhstWethPoolTokens(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "stakeIntoPool",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "stakeIntoPool(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "stakeIntoPoolForUser",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "stakeIntoPoolForUser(address,uint256,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "stakePoolTokens",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "stakePoolTokens(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "staked", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "staked(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "stakedInCurrentEpoch",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "stakedInCurrentEpoch(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "stakedInEpoch",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "stakedInEpoch(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "ticketCost", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "ticketCost(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateRates",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateRates(uint256,(address,address,uint256,string,string)[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "userEpoch", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "userEpoch(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawFromPool",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawFromPool(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawFromPoolForUser",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawFromPoolForUser(address,uint256,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawGhstStake",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawGhstStake(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawGhstUsdcPoolStake",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawGhstUsdcPoolStake(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawGhstWethPoolStake",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawGhstWethPoolStake(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawPoolStake",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawPoolStake(uint256)",
    data: BytesLike
  ): Result;

  events: {};
}

export interface IStakingFacet extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IStakingFacetInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    addRateManagers(
      rateManagers_: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "addRateManagers(address[])"(
      rateManagers_: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    bulkFrens(
      _accounts: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[]] & { frens_: BigNumber[] }>;

    "bulkFrens(address[])"(
      _accounts: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[]] & { frens_: BigNumber[] }>;

    bumpEpoch(
      _account: PromiseOrValue<string>,
      _epoch: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "bumpEpoch(address,uint256)"(
      _account: PromiseOrValue<string>,
      _epoch: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    claimTickets(
      _ids: PromiseOrValue<BigNumberish>[],
      _values: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "claimTickets(uint256[],uint256[])"(
      _ids: PromiseOrValue<BigNumberish>[],
      _values: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    convertTickets(
      _ids: PromiseOrValue<BigNumberish>[],
      _values: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "convertTickets(uint256[],uint256[])"(
      _ids: PromiseOrValue<BigNumberish>[],
      _values: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    currentEpoch(overrides?: CallOverrides): Promise<[BigNumber]>;

    "currentEpoch()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    frens(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { frens_: BigNumber }>;

    "frens(address)"(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { frens_: BigNumber }>;

    getGhstUsdcPoolToken(overrides?: CallOverrides): Promise<[string]>;

    "getGhstUsdcPoolToken()"(overrides?: CallOverrides): Promise<[string]>;

    getGhstWethPoolToken(overrides?: CallOverrides): Promise<[string]>;

    "getGhstWethPoolToken()"(overrides?: CallOverrides): Promise<[string]>;

    getPoolInfo(
      _poolAddress: PromiseOrValue<string>,
      _epoch: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[IStakingFacet.PoolInputStructOutput]>;

    "getPoolInfo(address,uint256)"(
      _poolAddress: PromiseOrValue<string>,
      _epoch: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[IStakingFacet.PoolInputStructOutput]>;

    getStkGhstUsdcToken(overrides?: CallOverrides): Promise<[string]>;

    "getStkGhstUsdcToken()"(overrides?: CallOverrides): Promise<[string]>;

    getStkGhstWethToken(overrides?: CallOverrides): Promise<[string]>;

    "getStkGhstWethToken()"(overrides?: CallOverrides): Promise<[string]>;

    hasMigrated(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "hasMigrated(address)"(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    initiateEpoch(
      _pools: IStakingFacet.PoolInputStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "initiateEpoch((address,address,uint256,string,string)[])"(
      _pools: IStakingFacet.PoolInputStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    isRateManager(
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "isRateManager(address)"(
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    migrateToV2(
      _accounts: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "migrateToV2(address[])"(
      _accounts: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    poolRatesInEpoch(
      _epoch: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [IStakingFacet.PoolStakedOutputStructOutput[]] & {
        _rates: IStakingFacet.PoolStakedOutputStructOutput[];
      }
    >;

    "poolRatesInEpoch(uint256)"(
      _epoch: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [IStakingFacet.PoolStakedOutputStructOutput[]] & {
        _rates: IStakingFacet.PoolStakedOutputStructOutput[];
      }
    >;

    removeRateManagers(
      rateManagers_: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "removeRateManagers(address[])"(
      rateManagers_: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    stakeGhst(
      _ghstValue: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "stakeGhst(uint256)"(
      _ghstValue: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    stakeGhstUsdcPoolTokens(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "stakeGhstUsdcPoolTokens(uint256)"(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    stakeGhstWethPoolTokens(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "stakeGhstWethPoolTokens(uint256)"(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    stakeIntoPool(
      _poolContractAddress: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "stakeIntoPool(address,uint256)"(
      _poolContractAddress: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    stakeIntoPoolForUser(
      _poolContractAddress: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      _sender: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "stakeIntoPoolForUser(address,uint256,address)"(
      _poolContractAddress: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      _sender: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    stakePoolTokens(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "stakePoolTokens(uint256)"(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    staked(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber, BigNumber] & {
        ghst_: BigNumber;
        poolTokens_: BigNumber;
        ghstUsdcPoolToken_: BigNumber;
        ghstWethPoolToken_: BigNumber;
      }
    >;

    "staked(address)"(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber, BigNumber] & {
        ghst_: BigNumber;
        poolTokens_: BigNumber;
        ghstUsdcPoolToken_: BigNumber;
        ghstWethPoolToken_: BigNumber;
      }
    >;

    stakedInCurrentEpoch(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [IStakingFacet.PoolStakedOutputStructOutput[]] & {
        _staked: IStakingFacet.PoolStakedOutputStructOutput[];
      }
    >;

    "stakedInCurrentEpoch(address)"(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [IStakingFacet.PoolStakedOutputStructOutput[]] & {
        _staked: IStakingFacet.PoolStakedOutputStructOutput[];
      }
    >;

    stakedInEpoch(
      _account: PromiseOrValue<string>,
      _epoch: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [IStakingFacet.PoolStakedOutputStructOutput[]] & {
        _staked: IStakingFacet.PoolStakedOutputStructOutput[];
      }
    >;

    "stakedInEpoch(address,uint256)"(
      _account: PromiseOrValue<string>,
      _epoch: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [IStakingFacet.PoolStakedOutputStructOutput[]] & {
        _staked: IStakingFacet.PoolStakedOutputStructOutput[];
      }
    >;

    ticketCost(
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { _frensCost: BigNumber }>;

    "ticketCost(uint256)"(
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { _frensCost: BigNumber }>;

    updateRates(
      _currentEpoch: PromiseOrValue<BigNumberish>,
      _newPools: IStakingFacet.PoolInputStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "updateRates(uint256,(address,address,uint256,string,string)[])"(
      _currentEpoch: PromiseOrValue<BigNumberish>,
      _newPools: IStakingFacet.PoolInputStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    userEpoch(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "userEpoch(address)"(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    withdrawFromPool(
      _poolContractAddress: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "withdrawFromPool(address,uint256)"(
      _poolContractAddress: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    withdrawFromPoolForUser(
      _poolContractAddress: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      _sender: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "withdrawFromPoolForUser(address,uint256,address)"(
      _poolContractAddress: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      _sender: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    withdrawGhstStake(
      _ghstValue: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "withdrawGhstStake(uint256)"(
      _ghstValue: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    withdrawGhstUsdcPoolStake(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "withdrawGhstUsdcPoolStake(uint256)"(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    withdrawGhstWethPoolStake(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "withdrawGhstWethPoolStake(uint256)"(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    withdrawPoolStake(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "withdrawPoolStake(uint256)"(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  addRateManagers(
    rateManagers_: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "addRateManagers(address[])"(
    rateManagers_: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  bulkFrens(
    _accounts: PromiseOrValue<string>[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  "bulkFrens(address[])"(
    _accounts: PromiseOrValue<string>[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  bumpEpoch(
    _account: PromiseOrValue<string>,
    _epoch: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "bumpEpoch(address,uint256)"(
    _account: PromiseOrValue<string>,
    _epoch: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  claimTickets(
    _ids: PromiseOrValue<BigNumberish>[],
    _values: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "claimTickets(uint256[],uint256[])"(
    _ids: PromiseOrValue<BigNumberish>[],
    _values: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  convertTickets(
    _ids: PromiseOrValue<BigNumberish>[],
    _values: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "convertTickets(uint256[],uint256[])"(
    _ids: PromiseOrValue<BigNumberish>[],
    _values: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  currentEpoch(overrides?: CallOverrides): Promise<BigNumber>;

  "currentEpoch()"(overrides?: CallOverrides): Promise<BigNumber>;

  frens(
    _account: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "frens(address)"(
    _account: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getGhstUsdcPoolToken(overrides?: CallOverrides): Promise<string>;

  "getGhstUsdcPoolToken()"(overrides?: CallOverrides): Promise<string>;

  getGhstWethPoolToken(overrides?: CallOverrides): Promise<string>;

  "getGhstWethPoolToken()"(overrides?: CallOverrides): Promise<string>;

  getPoolInfo(
    _poolAddress: PromiseOrValue<string>,
    _epoch: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<IStakingFacet.PoolInputStructOutput>;

  "getPoolInfo(address,uint256)"(
    _poolAddress: PromiseOrValue<string>,
    _epoch: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<IStakingFacet.PoolInputStructOutput>;

  getStkGhstUsdcToken(overrides?: CallOverrides): Promise<string>;

  "getStkGhstUsdcToken()"(overrides?: CallOverrides): Promise<string>;

  getStkGhstWethToken(overrides?: CallOverrides): Promise<string>;

  "getStkGhstWethToken()"(overrides?: CallOverrides): Promise<string>;

  hasMigrated(
    _account: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "hasMigrated(address)"(
    _account: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  initiateEpoch(
    _pools: IStakingFacet.PoolInputStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "initiateEpoch((address,address,uint256,string,string)[])"(
    _pools: IStakingFacet.PoolInputStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  isRateManager(
    account: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isRateManager(address)"(
    account: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  migrateToV2(
    _accounts: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "migrateToV2(address[])"(
    _accounts: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  poolRatesInEpoch(
    _epoch: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<IStakingFacet.PoolStakedOutputStructOutput[]>;

  "poolRatesInEpoch(uint256)"(
    _epoch: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<IStakingFacet.PoolStakedOutputStructOutput[]>;

  removeRateManagers(
    rateManagers_: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "removeRateManagers(address[])"(
    rateManagers_: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  stakeGhst(
    _ghstValue: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "stakeGhst(uint256)"(
    _ghstValue: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  stakeGhstUsdcPoolTokens(
    _poolTokens: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "stakeGhstUsdcPoolTokens(uint256)"(
    _poolTokens: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  stakeGhstWethPoolTokens(
    _poolTokens: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "stakeGhstWethPoolTokens(uint256)"(
    _poolTokens: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  stakeIntoPool(
    _poolContractAddress: PromiseOrValue<string>,
    _amount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "stakeIntoPool(address,uint256)"(
    _poolContractAddress: PromiseOrValue<string>,
    _amount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  stakeIntoPoolForUser(
    _poolContractAddress: PromiseOrValue<string>,
    _amount: PromiseOrValue<BigNumberish>,
    _sender: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "stakeIntoPoolForUser(address,uint256,address)"(
    _poolContractAddress: PromiseOrValue<string>,
    _amount: PromiseOrValue<BigNumberish>,
    _sender: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  stakePoolTokens(
    _poolTokens: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "stakePoolTokens(uint256)"(
    _poolTokens: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  staked(
    _account: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber, BigNumber, BigNumber] & {
      ghst_: BigNumber;
      poolTokens_: BigNumber;
      ghstUsdcPoolToken_: BigNumber;
      ghstWethPoolToken_: BigNumber;
    }
  >;

  "staked(address)"(
    _account: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber, BigNumber, BigNumber] & {
      ghst_: BigNumber;
      poolTokens_: BigNumber;
      ghstUsdcPoolToken_: BigNumber;
      ghstWethPoolToken_: BigNumber;
    }
  >;

  stakedInCurrentEpoch(
    _account: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<IStakingFacet.PoolStakedOutputStructOutput[]>;

  "stakedInCurrentEpoch(address)"(
    _account: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<IStakingFacet.PoolStakedOutputStructOutput[]>;

  stakedInEpoch(
    _account: PromiseOrValue<string>,
    _epoch: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<IStakingFacet.PoolStakedOutputStructOutput[]>;

  "stakedInEpoch(address,uint256)"(
    _account: PromiseOrValue<string>,
    _epoch: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<IStakingFacet.PoolStakedOutputStructOutput[]>;

  ticketCost(
    _id: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "ticketCost(uint256)"(
    _id: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  updateRates(
    _currentEpoch: PromiseOrValue<BigNumberish>,
    _newPools: IStakingFacet.PoolInputStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "updateRates(uint256,(address,address,uint256,string,string)[])"(
    _currentEpoch: PromiseOrValue<BigNumberish>,
    _newPools: IStakingFacet.PoolInputStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  userEpoch(
    _account: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "userEpoch(address)"(
    _account: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  withdrawFromPool(
    _poolContractAddress: PromiseOrValue<string>,
    _amount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "withdrawFromPool(address,uint256)"(
    _poolContractAddress: PromiseOrValue<string>,
    _amount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  withdrawFromPoolForUser(
    _poolContractAddress: PromiseOrValue<string>,
    _amount: PromiseOrValue<BigNumberish>,
    _sender: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "withdrawFromPoolForUser(address,uint256,address)"(
    _poolContractAddress: PromiseOrValue<string>,
    _amount: PromiseOrValue<BigNumberish>,
    _sender: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  withdrawGhstStake(
    _ghstValue: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "withdrawGhstStake(uint256)"(
    _ghstValue: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  withdrawGhstUsdcPoolStake(
    _poolTokens: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "withdrawGhstUsdcPoolStake(uint256)"(
    _poolTokens: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  withdrawGhstWethPoolStake(
    _poolTokens: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "withdrawGhstWethPoolStake(uint256)"(
    _poolTokens: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  withdrawPoolStake(
    _poolTokens: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "withdrawPoolStake(uint256)"(
    _poolTokens: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    addRateManagers(
      rateManagers_: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<void>;

    "addRateManagers(address[])"(
      rateManagers_: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<void>;

    bulkFrens(
      _accounts: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    "bulkFrens(address[])"(
      _accounts: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    bumpEpoch(
      _account: PromiseOrValue<string>,
      _epoch: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "bumpEpoch(address,uint256)"(
      _account: PromiseOrValue<string>,
      _epoch: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    claimTickets(
      _ids: PromiseOrValue<BigNumberish>[],
      _values: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    "claimTickets(uint256[],uint256[])"(
      _ids: PromiseOrValue<BigNumberish>[],
      _values: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    convertTickets(
      _ids: PromiseOrValue<BigNumberish>[],
      _values: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    "convertTickets(uint256[],uint256[])"(
      _ids: PromiseOrValue<BigNumberish>[],
      _values: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    currentEpoch(overrides?: CallOverrides): Promise<BigNumber>;

    "currentEpoch()"(overrides?: CallOverrides): Promise<BigNumber>;

    frens(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "frens(address)"(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getGhstUsdcPoolToken(overrides?: CallOverrides): Promise<string>;

    "getGhstUsdcPoolToken()"(overrides?: CallOverrides): Promise<string>;

    getGhstWethPoolToken(overrides?: CallOverrides): Promise<string>;

    "getGhstWethPoolToken()"(overrides?: CallOverrides): Promise<string>;

    getPoolInfo(
      _poolAddress: PromiseOrValue<string>,
      _epoch: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<IStakingFacet.PoolInputStructOutput>;

    "getPoolInfo(address,uint256)"(
      _poolAddress: PromiseOrValue<string>,
      _epoch: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<IStakingFacet.PoolInputStructOutput>;

    getStkGhstUsdcToken(overrides?: CallOverrides): Promise<string>;

    "getStkGhstUsdcToken()"(overrides?: CallOverrides): Promise<string>;

    getStkGhstWethToken(overrides?: CallOverrides): Promise<string>;

    "getStkGhstWethToken()"(overrides?: CallOverrides): Promise<string>;

    hasMigrated(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "hasMigrated(address)"(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    initiateEpoch(
      _pools: IStakingFacet.PoolInputStruct[],
      overrides?: CallOverrides
    ): Promise<void>;

    "initiateEpoch((address,address,uint256,string,string)[])"(
      _pools: IStakingFacet.PoolInputStruct[],
      overrides?: CallOverrides
    ): Promise<void>;

    isRateManager(
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isRateManager(address)"(
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    migrateToV2(
      _accounts: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<void>;

    "migrateToV2(address[])"(
      _accounts: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<void>;

    poolRatesInEpoch(
      _epoch: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<IStakingFacet.PoolStakedOutputStructOutput[]>;

    "poolRatesInEpoch(uint256)"(
      _epoch: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<IStakingFacet.PoolStakedOutputStructOutput[]>;

    removeRateManagers(
      rateManagers_: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<void>;

    "removeRateManagers(address[])"(
      rateManagers_: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<void>;

    stakeGhst(
      _ghstValue: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "stakeGhst(uint256)"(
      _ghstValue: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    stakeGhstUsdcPoolTokens(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "stakeGhstUsdcPoolTokens(uint256)"(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    stakeGhstWethPoolTokens(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "stakeGhstWethPoolTokens(uint256)"(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    stakeIntoPool(
      _poolContractAddress: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "stakeIntoPool(address,uint256)"(
      _poolContractAddress: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    stakeIntoPoolForUser(
      _poolContractAddress: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      _sender: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    "stakeIntoPoolForUser(address,uint256,address)"(
      _poolContractAddress: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      _sender: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    stakePoolTokens(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "stakePoolTokens(uint256)"(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    staked(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber, BigNumber] & {
        ghst_: BigNumber;
        poolTokens_: BigNumber;
        ghstUsdcPoolToken_: BigNumber;
        ghstWethPoolToken_: BigNumber;
      }
    >;

    "staked(address)"(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber, BigNumber] & {
        ghst_: BigNumber;
        poolTokens_: BigNumber;
        ghstUsdcPoolToken_: BigNumber;
        ghstWethPoolToken_: BigNumber;
      }
    >;

    stakedInCurrentEpoch(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<IStakingFacet.PoolStakedOutputStructOutput[]>;

    "stakedInCurrentEpoch(address)"(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<IStakingFacet.PoolStakedOutputStructOutput[]>;

    stakedInEpoch(
      _account: PromiseOrValue<string>,
      _epoch: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<IStakingFacet.PoolStakedOutputStructOutput[]>;

    "stakedInEpoch(address,uint256)"(
      _account: PromiseOrValue<string>,
      _epoch: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<IStakingFacet.PoolStakedOutputStructOutput[]>;

    ticketCost(
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "ticketCost(uint256)"(
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    updateRates(
      _currentEpoch: PromiseOrValue<BigNumberish>,
      _newPools: IStakingFacet.PoolInputStruct[],
      overrides?: CallOverrides
    ): Promise<void>;

    "updateRates(uint256,(address,address,uint256,string,string)[])"(
      _currentEpoch: PromiseOrValue<BigNumberish>,
      _newPools: IStakingFacet.PoolInputStruct[],
      overrides?: CallOverrides
    ): Promise<void>;

    userEpoch(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "userEpoch(address)"(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    withdrawFromPool(
      _poolContractAddress: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "withdrawFromPool(address,uint256)"(
      _poolContractAddress: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    withdrawFromPoolForUser(
      _poolContractAddress: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      _sender: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    "withdrawFromPoolForUser(address,uint256,address)"(
      _poolContractAddress: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      _sender: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    withdrawGhstStake(
      _ghstValue: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "withdrawGhstStake(uint256)"(
      _ghstValue: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    withdrawGhstUsdcPoolStake(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "withdrawGhstUsdcPoolStake(uint256)"(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    withdrawGhstWethPoolStake(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "withdrawGhstWethPoolStake(uint256)"(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    withdrawPoolStake(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "withdrawPoolStake(uint256)"(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    addRateManagers(
      rateManagers_: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "addRateManagers(address[])"(
      rateManagers_: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    bulkFrens(
      _accounts: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "bulkFrens(address[])"(
      _accounts: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    bumpEpoch(
      _account: PromiseOrValue<string>,
      _epoch: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "bumpEpoch(address,uint256)"(
      _account: PromiseOrValue<string>,
      _epoch: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    claimTickets(
      _ids: PromiseOrValue<BigNumberish>[],
      _values: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "claimTickets(uint256[],uint256[])"(
      _ids: PromiseOrValue<BigNumberish>[],
      _values: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    convertTickets(
      _ids: PromiseOrValue<BigNumberish>[],
      _values: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "convertTickets(uint256[],uint256[])"(
      _ids: PromiseOrValue<BigNumberish>[],
      _values: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    currentEpoch(overrides?: CallOverrides): Promise<BigNumber>;

    "currentEpoch()"(overrides?: CallOverrides): Promise<BigNumber>;

    frens(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "frens(address)"(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getGhstUsdcPoolToken(overrides?: CallOverrides): Promise<BigNumber>;

    "getGhstUsdcPoolToken()"(overrides?: CallOverrides): Promise<BigNumber>;

    getGhstWethPoolToken(overrides?: CallOverrides): Promise<BigNumber>;

    "getGhstWethPoolToken()"(overrides?: CallOverrides): Promise<BigNumber>;

    getPoolInfo(
      _poolAddress: PromiseOrValue<string>,
      _epoch: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getPoolInfo(address,uint256)"(
      _poolAddress: PromiseOrValue<string>,
      _epoch: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getStkGhstUsdcToken(overrides?: CallOverrides): Promise<BigNumber>;

    "getStkGhstUsdcToken()"(overrides?: CallOverrides): Promise<BigNumber>;

    getStkGhstWethToken(overrides?: CallOverrides): Promise<BigNumber>;

    "getStkGhstWethToken()"(overrides?: CallOverrides): Promise<BigNumber>;

    hasMigrated(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "hasMigrated(address)"(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    initiateEpoch(
      _pools: IStakingFacet.PoolInputStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "initiateEpoch((address,address,uint256,string,string)[])"(
      _pools: IStakingFacet.PoolInputStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    isRateManager(
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isRateManager(address)"(
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    migrateToV2(
      _accounts: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "migrateToV2(address[])"(
      _accounts: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    poolRatesInEpoch(
      _epoch: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "poolRatesInEpoch(uint256)"(
      _epoch: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    removeRateManagers(
      rateManagers_: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "removeRateManagers(address[])"(
      rateManagers_: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    stakeGhst(
      _ghstValue: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "stakeGhst(uint256)"(
      _ghstValue: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    stakeGhstUsdcPoolTokens(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "stakeGhstUsdcPoolTokens(uint256)"(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    stakeGhstWethPoolTokens(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "stakeGhstWethPoolTokens(uint256)"(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    stakeIntoPool(
      _poolContractAddress: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "stakeIntoPool(address,uint256)"(
      _poolContractAddress: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    stakeIntoPoolForUser(
      _poolContractAddress: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      _sender: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "stakeIntoPoolForUser(address,uint256,address)"(
      _poolContractAddress: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      _sender: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    stakePoolTokens(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "stakePoolTokens(uint256)"(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    staked(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "staked(address)"(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    stakedInCurrentEpoch(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "stakedInCurrentEpoch(address)"(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    stakedInEpoch(
      _account: PromiseOrValue<string>,
      _epoch: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "stakedInEpoch(address,uint256)"(
      _account: PromiseOrValue<string>,
      _epoch: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    ticketCost(
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "ticketCost(uint256)"(
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    updateRates(
      _currentEpoch: PromiseOrValue<BigNumberish>,
      _newPools: IStakingFacet.PoolInputStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "updateRates(uint256,(address,address,uint256,string,string)[])"(
      _currentEpoch: PromiseOrValue<BigNumberish>,
      _newPools: IStakingFacet.PoolInputStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    userEpoch(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "userEpoch(address)"(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    withdrawFromPool(
      _poolContractAddress: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "withdrawFromPool(address,uint256)"(
      _poolContractAddress: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    withdrawFromPoolForUser(
      _poolContractAddress: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      _sender: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "withdrawFromPoolForUser(address,uint256,address)"(
      _poolContractAddress: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      _sender: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    withdrawGhstStake(
      _ghstValue: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "withdrawGhstStake(uint256)"(
      _ghstValue: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    withdrawGhstUsdcPoolStake(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "withdrawGhstUsdcPoolStake(uint256)"(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    withdrawGhstWethPoolStake(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "withdrawGhstWethPoolStake(uint256)"(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    withdrawPoolStake(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "withdrawPoolStake(uint256)"(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addRateManagers(
      rateManagers_: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "addRateManagers(address[])"(
      rateManagers_: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    bulkFrens(
      _accounts: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "bulkFrens(address[])"(
      _accounts: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    bumpEpoch(
      _account: PromiseOrValue<string>,
      _epoch: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "bumpEpoch(address,uint256)"(
      _account: PromiseOrValue<string>,
      _epoch: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    claimTickets(
      _ids: PromiseOrValue<BigNumberish>[],
      _values: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "claimTickets(uint256[],uint256[])"(
      _ids: PromiseOrValue<BigNumberish>[],
      _values: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    convertTickets(
      _ids: PromiseOrValue<BigNumberish>[],
      _values: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "convertTickets(uint256[],uint256[])"(
      _ids: PromiseOrValue<BigNumberish>[],
      _values: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    currentEpoch(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "currentEpoch()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    frens(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "frens(address)"(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getGhstUsdcPoolToken(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getGhstUsdcPoolToken()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getGhstWethPoolToken(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getGhstWethPoolToken()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getPoolInfo(
      _poolAddress: PromiseOrValue<string>,
      _epoch: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getPoolInfo(address,uint256)"(
      _poolAddress: PromiseOrValue<string>,
      _epoch: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getStkGhstUsdcToken(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getStkGhstUsdcToken()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getStkGhstWethToken(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getStkGhstWethToken()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    hasMigrated(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "hasMigrated(address)"(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    initiateEpoch(
      _pools: IStakingFacet.PoolInputStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "initiateEpoch((address,address,uint256,string,string)[])"(
      _pools: IStakingFacet.PoolInputStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    isRateManager(
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isRateManager(address)"(
      account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    migrateToV2(
      _accounts: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "migrateToV2(address[])"(
      _accounts: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    poolRatesInEpoch(
      _epoch: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "poolRatesInEpoch(uint256)"(
      _epoch: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    removeRateManagers(
      rateManagers_: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "removeRateManagers(address[])"(
      rateManagers_: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    stakeGhst(
      _ghstValue: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "stakeGhst(uint256)"(
      _ghstValue: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    stakeGhstUsdcPoolTokens(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "stakeGhstUsdcPoolTokens(uint256)"(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    stakeGhstWethPoolTokens(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "stakeGhstWethPoolTokens(uint256)"(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    stakeIntoPool(
      _poolContractAddress: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "stakeIntoPool(address,uint256)"(
      _poolContractAddress: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    stakeIntoPoolForUser(
      _poolContractAddress: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      _sender: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "stakeIntoPoolForUser(address,uint256,address)"(
      _poolContractAddress: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      _sender: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    stakePoolTokens(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "stakePoolTokens(uint256)"(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    staked(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "staked(address)"(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    stakedInCurrentEpoch(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "stakedInCurrentEpoch(address)"(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    stakedInEpoch(
      _account: PromiseOrValue<string>,
      _epoch: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "stakedInEpoch(address,uint256)"(
      _account: PromiseOrValue<string>,
      _epoch: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    ticketCost(
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "ticketCost(uint256)"(
      _id: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    updateRates(
      _currentEpoch: PromiseOrValue<BigNumberish>,
      _newPools: IStakingFacet.PoolInputStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "updateRates(uint256,(address,address,uint256,string,string)[])"(
      _currentEpoch: PromiseOrValue<BigNumberish>,
      _newPools: IStakingFacet.PoolInputStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    userEpoch(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "userEpoch(address)"(
      _account: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    withdrawFromPool(
      _poolContractAddress: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "withdrawFromPool(address,uint256)"(
      _poolContractAddress: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    withdrawFromPoolForUser(
      _poolContractAddress: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      _sender: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "withdrawFromPoolForUser(address,uint256,address)"(
      _poolContractAddress: PromiseOrValue<string>,
      _amount: PromiseOrValue<BigNumberish>,
      _sender: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    withdrawGhstStake(
      _ghstValue: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "withdrawGhstStake(uint256)"(
      _ghstValue: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    withdrawGhstUsdcPoolStake(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "withdrawGhstUsdcPoolStake(uint256)"(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    withdrawGhstWethPoolStake(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "withdrawGhstWethPoolStake(uint256)"(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    withdrawPoolStake(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "withdrawPoolStake(uint256)"(
      _poolTokens: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
