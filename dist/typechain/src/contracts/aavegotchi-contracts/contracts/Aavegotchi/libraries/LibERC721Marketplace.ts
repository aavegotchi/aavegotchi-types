/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  Signer,
  utils,
} from "ethers";
import type { EventFragment } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../../../../common";

export interface LibERC721MarketplaceInterface extends utils.Interface {
  functions: {};

  events: {
    "ERC721ListingCancelled(uint256,uint256,uint256)": EventFragment;
    "ERC721ListingRemoved(uint256,uint256,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "ERC721ListingCancelled"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ERC721ListingCancelled(uint256,uint256,uint256)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ERC721ListingRemoved"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ERC721ListingRemoved(uint256,uint256,uint256)"
  ): EventFragment;
}

export interface ERC721ListingCancelledEventObject {
  listingId: BigNumber;
  category: BigNumber;
  time: BigNumber;
}
export type ERC721ListingCancelledEvent = TypedEvent<
  [BigNumber, BigNumber, BigNumber],
  ERC721ListingCancelledEventObject
>;

export type ERC721ListingCancelledEventFilter =
  TypedEventFilter<ERC721ListingCancelledEvent>;

export interface ERC721ListingRemovedEventObject {
  listingId: BigNumber;
  category: BigNumber;
  time: BigNumber;
}
export type ERC721ListingRemovedEvent = TypedEvent<
  [BigNumber, BigNumber, BigNumber],
  ERC721ListingRemovedEventObject
>;

export type ERC721ListingRemovedEventFilter =
  TypedEventFilter<ERC721ListingRemovedEvent>;

export interface LibERC721Marketplace extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: LibERC721MarketplaceInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {};

  callStatic: {};

  filters: {
    "ERC721ListingCancelled(uint256,uint256,uint256)"(
      listingId?: PromiseOrValue<BigNumberish> | null,
      category?: null,
      time?: null
    ): ERC721ListingCancelledEventFilter;
    ERC721ListingCancelled(
      listingId?: PromiseOrValue<BigNumberish> | null,
      category?: null,
      time?: null
    ): ERC721ListingCancelledEventFilter;

    "ERC721ListingRemoved(uint256,uint256,uint256)"(
      listingId?: PromiseOrValue<BigNumberish> | null,
      category?: null,
      time?: null
    ): ERC721ListingRemovedEventFilter;
    ERC721ListingRemoved(
      listingId?: PromiseOrValue<BigNumberish> | null,
      category?: null,
      time?: null
    ): ERC721ListingRemovedEventFilter;
  };

  estimateGas: {};

  populateTransaction: {};
}
