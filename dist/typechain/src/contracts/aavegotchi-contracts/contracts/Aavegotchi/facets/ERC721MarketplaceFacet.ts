/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../../../../common";

export type ERC721ListingStruct = {
  listingId: PromiseOrValue<BigNumberish>;
  seller: PromiseOrValue<string>;
  erc721TokenAddress: PromiseOrValue<string>;
  erc721TokenId: PromiseOrValue<BigNumberish>;
  category: PromiseOrValue<BigNumberish>;
  priceInWei: PromiseOrValue<BigNumberish>;
  timeCreated: PromiseOrValue<BigNumberish>;
  timePurchased: PromiseOrValue<BigNumberish>;
  cancelled: PromiseOrValue<boolean>;
  principalSplit: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>];
  affiliate: PromiseOrValue<string>;
};

export type ERC721ListingStructOutput = [
  BigNumber,
  string,
  string,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  boolean,
  [number, number],
  string
] & {
  listingId: BigNumber;
  seller: string;
  erc721TokenAddress: string;
  erc721TokenId: BigNumber;
  category: BigNumber;
  priceInWei: BigNumber;
  timeCreated: BigNumber;
  timePurchased: BigNumber;
  cancelled: boolean;
  principalSplit: [number, number];
  affiliate: string;
};

export type DimensionsStruct = {
  x: PromiseOrValue<BigNumberish>;
  y: PromiseOrValue<BigNumberish>;
  width: PromiseOrValue<BigNumberish>;
  height: PromiseOrValue<BigNumberish>;
};

export type DimensionsStructOutput = [number, number, number, number] & {
  x: number;
  y: number;
  width: number;
  height: number;
};

export type ItemTypeStruct = {
  name: PromiseOrValue<string>;
  description: PromiseOrValue<string>;
  author: PromiseOrValue<string>;
  traitModifiers: PromiseOrValue<BigNumberish>[];
  slotPositions: PromiseOrValue<boolean>[];
  allowedCollaterals: PromiseOrValue<BigNumberish>[];
  dimensions: DimensionsStruct;
  ghstPrice: PromiseOrValue<BigNumberish>;
  maxQuantity: PromiseOrValue<BigNumberish>;
  totalQuantity: PromiseOrValue<BigNumberish>;
  svgId: PromiseOrValue<BigNumberish>;
  rarityScoreModifier: PromiseOrValue<BigNumberish>;
  canPurchaseWithGhst: PromiseOrValue<boolean>;
  minLevel: PromiseOrValue<BigNumberish>;
  canBeTransferred: PromiseOrValue<boolean>;
  category: PromiseOrValue<BigNumberish>;
  kinshipBonus: PromiseOrValue<BigNumberish>;
  experienceBonus: PromiseOrValue<BigNumberish>;
};

export type ItemTypeStructOutput = [
  string,
  string,
  string,
  number[],
  boolean[],
  number[],
  DimensionsStructOutput,
  BigNumber,
  BigNumber,
  BigNumber,
  number,
  number,
  boolean,
  number,
  boolean,
  number,
  number,
  number
] & {
  name: string;
  description: string;
  author: string;
  traitModifiers: number[];
  slotPositions: boolean[];
  allowedCollaterals: number[];
  dimensions: DimensionsStructOutput;
  ghstPrice: BigNumber;
  maxQuantity: BigNumber;
  totalQuantity: BigNumber;
  svgId: number;
  rarityScoreModifier: number;
  canPurchaseWithGhst: boolean;
  minLevel: number;
  canBeTransferred: boolean;
  category: number;
  kinshipBonus: number;
  experienceBonus: number;
};

export type ItemTypeIOStruct = {
  balance: PromiseOrValue<BigNumberish>;
  itemId: PromiseOrValue<BigNumberish>;
  itemType: ItemTypeStruct;
};

export type ItemTypeIOStructOutput = [
  BigNumber,
  BigNumber,
  ItemTypeStructOutput
] & { balance: BigNumber; itemId: BigNumber; itemType: ItemTypeStructOutput };

export type AavegotchiInfoStruct = {
  tokenId: PromiseOrValue<BigNumberish>;
  name: PromiseOrValue<string>;
  owner: PromiseOrValue<string>;
  randomNumber: PromiseOrValue<BigNumberish>;
  status: PromiseOrValue<BigNumberish>;
  numericTraits: PromiseOrValue<BigNumberish>[];
  modifiedNumericTraits: PromiseOrValue<BigNumberish>[];
  equippedWearables: PromiseOrValue<BigNumberish>[];
  collateral: PromiseOrValue<string>;
  escrow: PromiseOrValue<string>;
  stakedAmount: PromiseOrValue<BigNumberish>;
  minimumStake: PromiseOrValue<BigNumberish>;
  kinship: PromiseOrValue<BigNumberish>;
  lastInteracted: PromiseOrValue<BigNumberish>;
  experience: PromiseOrValue<BigNumberish>;
  toNextLevel: PromiseOrValue<BigNumberish>;
  usedSkillPoints: PromiseOrValue<BigNumberish>;
  level: PromiseOrValue<BigNumberish>;
  hauntId: PromiseOrValue<BigNumberish>;
  baseRarityScore: PromiseOrValue<BigNumberish>;
  modifiedRarityScore: PromiseOrValue<BigNumberish>;
  locked: PromiseOrValue<boolean>;
  items: ItemTypeIOStruct[];
};

export type AavegotchiInfoStructOutput = [
  BigNumber,
  string,
  string,
  BigNumber,
  BigNumber,
  number[],
  number[],
  number[],
  string,
  string,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  boolean,
  ItemTypeIOStructOutput[]
] & {
  tokenId: BigNumber;
  name: string;
  owner: string;
  randomNumber: BigNumber;
  status: BigNumber;
  numericTraits: number[];
  modifiedNumericTraits: number[];
  equippedWearables: number[];
  collateral: string;
  escrow: string;
  stakedAmount: BigNumber;
  minimumStake: BigNumber;
  kinship: BigNumber;
  lastInteracted: BigNumber;
  experience: BigNumber;
  toNextLevel: BigNumber;
  usedSkillPoints: BigNumber;
  level: BigNumber;
  hauntId: BigNumber;
  baseRarityScore: BigNumber;
  modifiedRarityScore: BigNumber;
  locked: boolean;
  items: ItemTypeIOStructOutput[];
};

export declare namespace ERC721MarketplaceFacet {
  export type AavegotchiListingStruct = {
    listing_: ERC721ListingStruct;
    aavegotchiInfo_: AavegotchiInfoStruct;
  };

  export type AavegotchiListingStructOutput = [
    ERC721ListingStructOutput,
    AavegotchiInfoStructOutput
  ] & {
    listing_: ERC721ListingStructOutput;
    aavegotchiInfo_: AavegotchiInfoStructOutput;
  };

  export type CategoryStruct = {
    erc721TokenAddress: PromiseOrValue<string>;
    category: PromiseOrValue<BigNumberish>;
  };

  export type CategoryStructOutput = [string, BigNumber] & {
    erc721TokenAddress: string;
    category: BigNumber;
  };
}

export interface ERC721MarketplaceFacetInterface extends utils.Interface {
  functions: {
    "addERC721Listing(address,uint256,uint256)": FunctionFragment;
    "addERC721ListingWithSplit(address,uint256,uint256,uint16[2],address)": FunctionFragment;
    "cancelERC721Listing(uint256)": FunctionFragment;
    "cancelERC721ListingByToken(address,uint256)": FunctionFragment;
    "cancelERC721Listings(uint256[])": FunctionFragment;
    "executeERC721Listing(uint256)": FunctionFragment;
    "executeERC721ListingToRecipient(uint256,address,uint256,uint256,address)": FunctionFragment;
    "getAavegotchiListing(uint256)": FunctionFragment;
    "getAavegotchiListings(uint256,string,uint256)": FunctionFragment;
    "getERC721Category(address,uint256)": FunctionFragment;
    "getERC721Listing(uint256)": FunctionFragment;
    "getERC721ListingFromToken(address,uint256,address)": FunctionFragment;
    "getERC721Listings(uint256,string,uint256)": FunctionFragment;
    "getOwnerAavegotchiListings(address,uint256,string,uint256)": FunctionFragment;
    "getOwnerERC721Listings(address,uint256,string,uint256)": FunctionFragment;
    "setERC721Categories((address,uint256)[])": FunctionFragment;
    "updateERC721Listing(address,uint256,address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "addERC721Listing"
      | "addERC721Listing(address,uint256,uint256)"
      | "addERC721ListingWithSplit"
      | "addERC721ListingWithSplit(address,uint256,uint256,uint16[2],address)"
      | "cancelERC721Listing"
      | "cancelERC721Listing(uint256)"
      | "cancelERC721ListingByToken"
      | "cancelERC721ListingByToken(address,uint256)"
      | "cancelERC721Listings"
      | "cancelERC721Listings(uint256[])"
      | "executeERC721Listing"
      | "executeERC721Listing(uint256)"
      | "executeERC721ListingToRecipient"
      | "executeERC721ListingToRecipient(uint256,address,uint256,uint256,address)"
      | "getAavegotchiListing"
      | "getAavegotchiListing(uint256)"
      | "getAavegotchiListings"
      | "getAavegotchiListings(uint256,string,uint256)"
      | "getERC721Category"
      | "getERC721Category(address,uint256)"
      | "getERC721Listing"
      | "getERC721Listing(uint256)"
      | "getERC721ListingFromToken"
      | "getERC721ListingFromToken(address,uint256,address)"
      | "getERC721Listings"
      | "getERC721Listings(uint256,string,uint256)"
      | "getOwnerAavegotchiListings"
      | "getOwnerAavegotchiListings(address,uint256,string,uint256)"
      | "getOwnerERC721Listings"
      | "getOwnerERC721Listings(address,uint256,string,uint256)"
      | "setERC721Categories"
      | "setERC721Categories((address,uint256)[])"
      | "updateERC721Listing"
      | "updateERC721Listing(address,uint256,address)"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "addERC721Listing",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "addERC721Listing(address,uint256,uint256)",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "addERC721ListingWithSplit",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>],
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "addERC721ListingWithSplit(address,uint256,uint256,uint16[2],address)",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>],
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "cancelERC721Listing",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "cancelERC721Listing(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "cancelERC721ListingByToken",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "cancelERC721ListingByToken(address,uint256)",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "cancelERC721Listings",
    values: [PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "cancelERC721Listings(uint256[])",
    values: [PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "executeERC721Listing",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "executeERC721Listing(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "executeERC721ListingToRecipient",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "executeERC721ListingToRecipient(uint256,address,uint256,uint256,address)",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getAavegotchiListing",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getAavegotchiListing(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getAavegotchiListings",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getAavegotchiListings(uint256,string,uint256)",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getERC721Category",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getERC721Category(address,uint256)",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getERC721Listing",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getERC721Listing(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getERC721ListingFromToken",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getERC721ListingFromToken(address,uint256,address)",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getERC721Listings",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getERC721Listings(uint256,string,uint256)",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getOwnerAavegotchiListings",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getOwnerAavegotchiListings(address,uint256,string,uint256)",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getOwnerERC721Listings",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getOwnerERC721Listings(address,uint256,string,uint256)",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "setERC721Categories",
    values: [ERC721MarketplaceFacet.CategoryStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "setERC721Categories((address,uint256)[])",
    values: [ERC721MarketplaceFacet.CategoryStruct[]]
  ): string;
  encodeFunctionData(
    functionFragment: "updateERC721Listing",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "updateERC721Listing(address,uint256,address)",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "addERC721Listing",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addERC721Listing(address,uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addERC721ListingWithSplit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addERC721ListingWithSplit(address,uint256,uint256,uint16[2],address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "cancelERC721Listing",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "cancelERC721Listing(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "cancelERC721ListingByToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "cancelERC721ListingByToken(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "cancelERC721Listings",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "cancelERC721Listings(uint256[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "executeERC721Listing",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "executeERC721Listing(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "executeERC721ListingToRecipient",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "executeERC721ListingToRecipient(uint256,address,uint256,uint256,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAavegotchiListing",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAavegotchiListing(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAavegotchiListings",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAavegotchiListings(uint256,string,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getERC721Category",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getERC721Category(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getERC721Listing",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getERC721Listing(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getERC721ListingFromToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getERC721ListingFromToken(address,uint256,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getERC721Listings",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getERC721Listings(uint256,string,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getOwnerAavegotchiListings",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getOwnerAavegotchiListings(address,uint256,string,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getOwnerERC721Listings",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getOwnerERC721Listings(address,uint256,string,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setERC721Categories",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setERC721Categories((address,uint256)[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateERC721Listing",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateERC721Listing(address,uint256,address)",
    data: BytesLike
  ): Result;

  events: {
    "ERC721ExecutedListing(uint256,address,address,address,uint256,uint256,uint256,uint256)": EventFragment;
    "ERC721ExecutedToRecipient(uint256,address,address)": EventFragment;
    "ERC721ListingAdd(uint256,address,address,uint256,uint256,uint256)": EventFragment;
    "ERC721ListingSplit(uint256,uint16[2],address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "ERC721ExecutedListing"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ERC721ExecutedListing(uint256,address,address,address,uint256,uint256,uint256,uint256)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ERC721ExecutedToRecipient"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ERC721ExecutedToRecipient(uint256,address,address)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ERC721ListingAdd"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ERC721ListingAdd(uint256,address,address,uint256,uint256,uint256)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ERC721ListingSplit"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ERC721ListingSplit(uint256,uint16[2],address)"
  ): EventFragment;
}

export interface ERC721ExecutedListingEventObject {
  listingId: BigNumber;
  seller: string;
  buyer: string;
  erc721TokenAddress: string;
  erc721TokenId: BigNumber;
  category: BigNumber;
  priceInWei: BigNumber;
  time: BigNumber;
}
export type ERC721ExecutedListingEvent = TypedEvent<
  [
    BigNumber,
    string,
    string,
    string,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber
  ],
  ERC721ExecutedListingEventObject
>;

export type ERC721ExecutedListingEventFilter =
  TypedEventFilter<ERC721ExecutedListingEvent>;

export interface ERC721ExecutedToRecipientEventObject {
  listingId: BigNumber;
  buyer: string;
  recipient: string;
}
export type ERC721ExecutedToRecipientEvent = TypedEvent<
  [BigNumber, string, string],
  ERC721ExecutedToRecipientEventObject
>;

export type ERC721ExecutedToRecipientEventFilter =
  TypedEventFilter<ERC721ExecutedToRecipientEvent>;

export interface ERC721ListingAddEventObject {
  listingId: BigNumber;
  seller: string;
  erc721TokenAddress: string;
  erc721TokenId: BigNumber;
  category: BigNumber;
  time: BigNumber;
}
export type ERC721ListingAddEvent = TypedEvent<
  [BigNumber, string, string, BigNumber, BigNumber, BigNumber],
  ERC721ListingAddEventObject
>;

export type ERC721ListingAddEventFilter =
  TypedEventFilter<ERC721ListingAddEvent>;

export interface ERC721ListingSplitEventObject {
  listingId: BigNumber;
  principalSplit: [number, number];
  affiliate: string;
}
export type ERC721ListingSplitEvent = TypedEvent<
  [BigNumber, [number, number], string],
  ERC721ListingSplitEventObject
>;

export type ERC721ListingSplitEventFilter =
  TypedEventFilter<ERC721ListingSplitEvent>;

export interface ERC721MarketplaceFacet extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: ERC721MarketplaceFacetInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    addERC721Listing(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _priceInWei: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "addERC721Listing(address,uint256,uint256)"(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _priceInWei: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    addERC721ListingWithSplit(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _priceInWei: PromiseOrValue<BigNumberish>,
      _principalSplit: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      _affiliate: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "addERC721ListingWithSplit(address,uint256,uint256,uint16[2],address)"(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _priceInWei: PromiseOrValue<BigNumberish>,
      _principalSplit: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      _affiliate: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    cancelERC721Listing(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "cancelERC721Listing(uint256)"(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    cancelERC721ListingByToken(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "cancelERC721ListingByToken(address,uint256)"(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    cancelERC721Listings(
      _listingIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "cancelERC721Listings(uint256[])"(
      _listingIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    executeERC721Listing(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "executeERC721Listing(uint256)"(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    executeERC721ListingToRecipient(
      _listingId: PromiseOrValue<BigNumberish>,
      _contractAddress: PromiseOrValue<string>,
      _priceInWei: PromiseOrValue<BigNumberish>,
      _tokenId: PromiseOrValue<BigNumberish>,
      _recipient: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "executeERC721ListingToRecipient(uint256,address,uint256,uint256,address)"(
      _listingId: PromiseOrValue<BigNumberish>,
      _contractAddress: PromiseOrValue<string>,
      _priceInWei: PromiseOrValue<BigNumberish>,
      _tokenId: PromiseOrValue<BigNumberish>,
      _recipient: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    getAavegotchiListing(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [ERC721ListingStructOutput, AavegotchiInfoStructOutput] & {
        listing_: ERC721ListingStructOutput;
        aavegotchiInfo_: AavegotchiInfoStructOutput;
      }
    >;

    "getAavegotchiListing(uint256)"(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [ERC721ListingStructOutput, AavegotchiInfoStructOutput] & {
        listing_: ERC721ListingStructOutput;
        aavegotchiInfo_: AavegotchiInfoStructOutput;
      }
    >;

    getAavegotchiListings(
      _category: PromiseOrValue<BigNumberish>,
      _sort: PromiseOrValue<string>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [ERC721MarketplaceFacet.AavegotchiListingStructOutput[]] & {
        listings_: ERC721MarketplaceFacet.AavegotchiListingStructOutput[];
      }
    >;

    "getAavegotchiListings(uint256,string,uint256)"(
      _category: PromiseOrValue<BigNumberish>,
      _sort: PromiseOrValue<string>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [ERC721MarketplaceFacet.AavegotchiListingStructOutput[]] & {
        listings_: ERC721MarketplaceFacet.AavegotchiListingStructOutput[];
      }
    >;

    getERC721Category(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { category_: BigNumber }>;

    "getERC721Category(address,uint256)"(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { category_: BigNumber }>;

    getERC721Listing(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [ERC721ListingStructOutput] & { listing_: ERC721ListingStructOutput }
    >;

    "getERC721Listing(uint256)"(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [ERC721ListingStructOutput] & { listing_: ERC721ListingStructOutput }
    >;

    getERC721ListingFromToken(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _owner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [ERC721ListingStructOutput] & { listing_: ERC721ListingStructOutput }
    >;

    "getERC721ListingFromToken(address,uint256,address)"(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _owner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<
      [ERC721ListingStructOutput] & { listing_: ERC721ListingStructOutput }
    >;

    getERC721Listings(
      _category: PromiseOrValue<BigNumberish>,
      _sort: PromiseOrValue<string>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [ERC721ListingStructOutput[]] & { listings_: ERC721ListingStructOutput[] }
    >;

    "getERC721Listings(uint256,string,uint256)"(
      _category: PromiseOrValue<BigNumberish>,
      _sort: PromiseOrValue<string>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [ERC721ListingStructOutput[]] & { listings_: ERC721ListingStructOutput[] }
    >;

    getOwnerAavegotchiListings(
      _owner: PromiseOrValue<string>,
      _category: PromiseOrValue<BigNumberish>,
      _sort: PromiseOrValue<string>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [ERC721MarketplaceFacet.AavegotchiListingStructOutput[]] & {
        listings_: ERC721MarketplaceFacet.AavegotchiListingStructOutput[];
      }
    >;

    "getOwnerAavegotchiListings(address,uint256,string,uint256)"(
      _owner: PromiseOrValue<string>,
      _category: PromiseOrValue<BigNumberish>,
      _sort: PromiseOrValue<string>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [ERC721MarketplaceFacet.AavegotchiListingStructOutput[]] & {
        listings_: ERC721MarketplaceFacet.AavegotchiListingStructOutput[];
      }
    >;

    getOwnerERC721Listings(
      _owner: PromiseOrValue<string>,
      _category: PromiseOrValue<BigNumberish>,
      _sort: PromiseOrValue<string>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [ERC721ListingStructOutput[]] & { listings_: ERC721ListingStructOutput[] }
    >;

    "getOwnerERC721Listings(address,uint256,string,uint256)"(
      _owner: PromiseOrValue<string>,
      _category: PromiseOrValue<BigNumberish>,
      _sort: PromiseOrValue<string>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [ERC721ListingStructOutput[]] & { listings_: ERC721ListingStructOutput[] }
    >;

    setERC721Categories(
      _categories: ERC721MarketplaceFacet.CategoryStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "setERC721Categories((address,uint256)[])"(
      _categories: ERC721MarketplaceFacet.CategoryStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    updateERC721Listing(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _owner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "updateERC721Listing(address,uint256,address)"(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _owner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  addERC721Listing(
    _erc721TokenAddress: PromiseOrValue<string>,
    _erc721TokenId: PromiseOrValue<BigNumberish>,
    _priceInWei: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "addERC721Listing(address,uint256,uint256)"(
    _erc721TokenAddress: PromiseOrValue<string>,
    _erc721TokenId: PromiseOrValue<BigNumberish>,
    _priceInWei: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  addERC721ListingWithSplit(
    _erc721TokenAddress: PromiseOrValue<string>,
    _erc721TokenId: PromiseOrValue<BigNumberish>,
    _priceInWei: PromiseOrValue<BigNumberish>,
    _principalSplit: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ],
    _affiliate: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "addERC721ListingWithSplit(address,uint256,uint256,uint16[2],address)"(
    _erc721TokenAddress: PromiseOrValue<string>,
    _erc721TokenId: PromiseOrValue<BigNumberish>,
    _priceInWei: PromiseOrValue<BigNumberish>,
    _principalSplit: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ],
    _affiliate: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  cancelERC721Listing(
    _listingId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "cancelERC721Listing(uint256)"(
    _listingId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  cancelERC721ListingByToken(
    _erc721TokenAddress: PromiseOrValue<string>,
    _erc721TokenId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "cancelERC721ListingByToken(address,uint256)"(
    _erc721TokenAddress: PromiseOrValue<string>,
    _erc721TokenId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  cancelERC721Listings(
    _listingIds: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "cancelERC721Listings(uint256[])"(
    _listingIds: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  executeERC721Listing(
    _listingId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "executeERC721Listing(uint256)"(
    _listingId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  executeERC721ListingToRecipient(
    _listingId: PromiseOrValue<BigNumberish>,
    _contractAddress: PromiseOrValue<string>,
    _priceInWei: PromiseOrValue<BigNumberish>,
    _tokenId: PromiseOrValue<BigNumberish>,
    _recipient: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "executeERC721ListingToRecipient(uint256,address,uint256,uint256,address)"(
    _listingId: PromiseOrValue<BigNumberish>,
    _contractAddress: PromiseOrValue<string>,
    _priceInWei: PromiseOrValue<BigNumberish>,
    _tokenId: PromiseOrValue<BigNumberish>,
    _recipient: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  getAavegotchiListing(
    _listingId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<
    [ERC721ListingStructOutput, AavegotchiInfoStructOutput] & {
      listing_: ERC721ListingStructOutput;
      aavegotchiInfo_: AavegotchiInfoStructOutput;
    }
  >;

  "getAavegotchiListing(uint256)"(
    _listingId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<
    [ERC721ListingStructOutput, AavegotchiInfoStructOutput] & {
      listing_: ERC721ListingStructOutput;
      aavegotchiInfo_: AavegotchiInfoStructOutput;
    }
  >;

  getAavegotchiListings(
    _category: PromiseOrValue<BigNumberish>,
    _sort: PromiseOrValue<string>,
    _length: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<ERC721MarketplaceFacet.AavegotchiListingStructOutput[]>;

  "getAavegotchiListings(uint256,string,uint256)"(
    _category: PromiseOrValue<BigNumberish>,
    _sort: PromiseOrValue<string>,
    _length: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<ERC721MarketplaceFacet.AavegotchiListingStructOutput[]>;

  getERC721Category(
    _erc721TokenAddress: PromiseOrValue<string>,
    _erc721TokenId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getERC721Category(address,uint256)"(
    _erc721TokenAddress: PromiseOrValue<string>,
    _erc721TokenId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getERC721Listing(
    _listingId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<ERC721ListingStructOutput>;

  "getERC721Listing(uint256)"(
    _listingId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<ERC721ListingStructOutput>;

  getERC721ListingFromToken(
    _erc721TokenAddress: PromiseOrValue<string>,
    _erc721TokenId: PromiseOrValue<BigNumberish>,
    _owner: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<ERC721ListingStructOutput>;

  "getERC721ListingFromToken(address,uint256,address)"(
    _erc721TokenAddress: PromiseOrValue<string>,
    _erc721TokenId: PromiseOrValue<BigNumberish>,
    _owner: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<ERC721ListingStructOutput>;

  getERC721Listings(
    _category: PromiseOrValue<BigNumberish>,
    _sort: PromiseOrValue<string>,
    _length: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<ERC721ListingStructOutput[]>;

  "getERC721Listings(uint256,string,uint256)"(
    _category: PromiseOrValue<BigNumberish>,
    _sort: PromiseOrValue<string>,
    _length: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<ERC721ListingStructOutput[]>;

  getOwnerAavegotchiListings(
    _owner: PromiseOrValue<string>,
    _category: PromiseOrValue<BigNumberish>,
    _sort: PromiseOrValue<string>,
    _length: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<ERC721MarketplaceFacet.AavegotchiListingStructOutput[]>;

  "getOwnerAavegotchiListings(address,uint256,string,uint256)"(
    _owner: PromiseOrValue<string>,
    _category: PromiseOrValue<BigNumberish>,
    _sort: PromiseOrValue<string>,
    _length: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<ERC721MarketplaceFacet.AavegotchiListingStructOutput[]>;

  getOwnerERC721Listings(
    _owner: PromiseOrValue<string>,
    _category: PromiseOrValue<BigNumberish>,
    _sort: PromiseOrValue<string>,
    _length: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<ERC721ListingStructOutput[]>;

  "getOwnerERC721Listings(address,uint256,string,uint256)"(
    _owner: PromiseOrValue<string>,
    _category: PromiseOrValue<BigNumberish>,
    _sort: PromiseOrValue<string>,
    _length: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<ERC721ListingStructOutput[]>;

  setERC721Categories(
    _categories: ERC721MarketplaceFacet.CategoryStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "setERC721Categories((address,uint256)[])"(
    _categories: ERC721MarketplaceFacet.CategoryStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  updateERC721Listing(
    _erc721TokenAddress: PromiseOrValue<string>,
    _erc721TokenId: PromiseOrValue<BigNumberish>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "updateERC721Listing(address,uint256,address)"(
    _erc721TokenAddress: PromiseOrValue<string>,
    _erc721TokenId: PromiseOrValue<BigNumberish>,
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    addERC721Listing(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _priceInWei: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "addERC721Listing(address,uint256,uint256)"(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _priceInWei: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    addERC721ListingWithSplit(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _priceInWei: PromiseOrValue<BigNumberish>,
      _principalSplit: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      _affiliate: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    "addERC721ListingWithSplit(address,uint256,uint256,uint16[2],address)"(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _priceInWei: PromiseOrValue<BigNumberish>,
      _principalSplit: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      _affiliate: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    cancelERC721Listing(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "cancelERC721Listing(uint256)"(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    cancelERC721ListingByToken(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "cancelERC721ListingByToken(address,uint256)"(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    cancelERC721Listings(
      _listingIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    "cancelERC721Listings(uint256[])"(
      _listingIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    executeERC721Listing(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "executeERC721Listing(uint256)"(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    executeERC721ListingToRecipient(
      _listingId: PromiseOrValue<BigNumberish>,
      _contractAddress: PromiseOrValue<string>,
      _priceInWei: PromiseOrValue<BigNumberish>,
      _tokenId: PromiseOrValue<BigNumberish>,
      _recipient: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    "executeERC721ListingToRecipient(uint256,address,uint256,uint256,address)"(
      _listingId: PromiseOrValue<BigNumberish>,
      _contractAddress: PromiseOrValue<string>,
      _priceInWei: PromiseOrValue<BigNumberish>,
      _tokenId: PromiseOrValue<BigNumberish>,
      _recipient: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    getAavegotchiListing(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [ERC721ListingStructOutput, AavegotchiInfoStructOutput] & {
        listing_: ERC721ListingStructOutput;
        aavegotchiInfo_: AavegotchiInfoStructOutput;
      }
    >;

    "getAavegotchiListing(uint256)"(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [ERC721ListingStructOutput, AavegotchiInfoStructOutput] & {
        listing_: ERC721ListingStructOutput;
        aavegotchiInfo_: AavegotchiInfoStructOutput;
      }
    >;

    getAavegotchiListings(
      _category: PromiseOrValue<BigNumberish>,
      _sort: PromiseOrValue<string>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<ERC721MarketplaceFacet.AavegotchiListingStructOutput[]>;

    "getAavegotchiListings(uint256,string,uint256)"(
      _category: PromiseOrValue<BigNumberish>,
      _sort: PromiseOrValue<string>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<ERC721MarketplaceFacet.AavegotchiListingStructOutput[]>;

    getERC721Category(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getERC721Category(address,uint256)"(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getERC721Listing(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<ERC721ListingStructOutput>;

    "getERC721Listing(uint256)"(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<ERC721ListingStructOutput>;

    getERC721ListingFromToken(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _owner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<ERC721ListingStructOutput>;

    "getERC721ListingFromToken(address,uint256,address)"(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _owner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<ERC721ListingStructOutput>;

    getERC721Listings(
      _category: PromiseOrValue<BigNumberish>,
      _sort: PromiseOrValue<string>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<ERC721ListingStructOutput[]>;

    "getERC721Listings(uint256,string,uint256)"(
      _category: PromiseOrValue<BigNumberish>,
      _sort: PromiseOrValue<string>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<ERC721ListingStructOutput[]>;

    getOwnerAavegotchiListings(
      _owner: PromiseOrValue<string>,
      _category: PromiseOrValue<BigNumberish>,
      _sort: PromiseOrValue<string>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<ERC721MarketplaceFacet.AavegotchiListingStructOutput[]>;

    "getOwnerAavegotchiListings(address,uint256,string,uint256)"(
      _owner: PromiseOrValue<string>,
      _category: PromiseOrValue<BigNumberish>,
      _sort: PromiseOrValue<string>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<ERC721MarketplaceFacet.AavegotchiListingStructOutput[]>;

    getOwnerERC721Listings(
      _owner: PromiseOrValue<string>,
      _category: PromiseOrValue<BigNumberish>,
      _sort: PromiseOrValue<string>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<ERC721ListingStructOutput[]>;

    "getOwnerERC721Listings(address,uint256,string,uint256)"(
      _owner: PromiseOrValue<string>,
      _category: PromiseOrValue<BigNumberish>,
      _sort: PromiseOrValue<string>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<ERC721ListingStructOutput[]>;

    setERC721Categories(
      _categories: ERC721MarketplaceFacet.CategoryStruct[],
      overrides?: CallOverrides
    ): Promise<void>;

    "setERC721Categories((address,uint256)[])"(
      _categories: ERC721MarketplaceFacet.CategoryStruct[],
      overrides?: CallOverrides
    ): Promise<void>;

    updateERC721Listing(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _owner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    "updateERC721Listing(address,uint256,address)"(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _owner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "ERC721ExecutedListing(uint256,address,address,address,uint256,uint256,uint256,uint256)"(
      listingId?: PromiseOrValue<BigNumberish> | null,
      seller?: PromiseOrValue<string> | null,
      buyer?: null,
      erc721TokenAddress?: null,
      erc721TokenId?: null,
      category?: PromiseOrValue<BigNumberish> | null,
      priceInWei?: null,
      time?: null
    ): ERC721ExecutedListingEventFilter;
    ERC721ExecutedListing(
      listingId?: PromiseOrValue<BigNumberish> | null,
      seller?: PromiseOrValue<string> | null,
      buyer?: null,
      erc721TokenAddress?: null,
      erc721TokenId?: null,
      category?: PromiseOrValue<BigNumberish> | null,
      priceInWei?: null,
      time?: null
    ): ERC721ExecutedListingEventFilter;

    "ERC721ExecutedToRecipient(uint256,address,address)"(
      listingId?: PromiseOrValue<BigNumberish> | null,
      buyer?: PromiseOrValue<string> | null,
      recipient?: PromiseOrValue<string> | null
    ): ERC721ExecutedToRecipientEventFilter;
    ERC721ExecutedToRecipient(
      listingId?: PromiseOrValue<BigNumberish> | null,
      buyer?: PromiseOrValue<string> | null,
      recipient?: PromiseOrValue<string> | null
    ): ERC721ExecutedToRecipientEventFilter;

    "ERC721ListingAdd(uint256,address,address,uint256,uint256,uint256)"(
      listingId?: PromiseOrValue<BigNumberish> | null,
      seller?: PromiseOrValue<string> | null,
      erc721TokenAddress?: null,
      erc721TokenId?: null,
      category?: PromiseOrValue<BigNumberish> | null,
      time?: null
    ): ERC721ListingAddEventFilter;
    ERC721ListingAdd(
      listingId?: PromiseOrValue<BigNumberish> | null,
      seller?: PromiseOrValue<string> | null,
      erc721TokenAddress?: null,
      erc721TokenId?: null,
      category?: PromiseOrValue<BigNumberish> | null,
      time?: null
    ): ERC721ListingAddEventFilter;

    "ERC721ListingSplit(uint256,uint16[2],address)"(
      listingId?: PromiseOrValue<BigNumberish> | null,
      principalSplit?: null,
      affiliate?: null
    ): ERC721ListingSplitEventFilter;
    ERC721ListingSplit(
      listingId?: PromiseOrValue<BigNumberish> | null,
      principalSplit?: null,
      affiliate?: null
    ): ERC721ListingSplitEventFilter;
  };

  estimateGas: {
    addERC721Listing(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _priceInWei: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "addERC721Listing(address,uint256,uint256)"(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _priceInWei: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    addERC721ListingWithSplit(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _priceInWei: PromiseOrValue<BigNumberish>,
      _principalSplit: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      _affiliate: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "addERC721ListingWithSplit(address,uint256,uint256,uint16[2],address)"(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _priceInWei: PromiseOrValue<BigNumberish>,
      _principalSplit: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      _affiliate: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    cancelERC721Listing(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "cancelERC721Listing(uint256)"(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    cancelERC721ListingByToken(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "cancelERC721ListingByToken(address,uint256)"(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    cancelERC721Listings(
      _listingIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "cancelERC721Listings(uint256[])"(
      _listingIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    executeERC721Listing(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "executeERC721Listing(uint256)"(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    executeERC721ListingToRecipient(
      _listingId: PromiseOrValue<BigNumberish>,
      _contractAddress: PromiseOrValue<string>,
      _priceInWei: PromiseOrValue<BigNumberish>,
      _tokenId: PromiseOrValue<BigNumberish>,
      _recipient: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "executeERC721ListingToRecipient(uint256,address,uint256,uint256,address)"(
      _listingId: PromiseOrValue<BigNumberish>,
      _contractAddress: PromiseOrValue<string>,
      _priceInWei: PromiseOrValue<BigNumberish>,
      _tokenId: PromiseOrValue<BigNumberish>,
      _recipient: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    getAavegotchiListing(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAavegotchiListing(uint256)"(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAavegotchiListings(
      _category: PromiseOrValue<BigNumberish>,
      _sort: PromiseOrValue<string>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAavegotchiListings(uint256,string,uint256)"(
      _category: PromiseOrValue<BigNumberish>,
      _sort: PromiseOrValue<string>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getERC721Category(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getERC721Category(address,uint256)"(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getERC721Listing(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getERC721Listing(uint256)"(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getERC721ListingFromToken(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _owner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getERC721ListingFromToken(address,uint256,address)"(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _owner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getERC721Listings(
      _category: PromiseOrValue<BigNumberish>,
      _sort: PromiseOrValue<string>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getERC721Listings(uint256,string,uint256)"(
      _category: PromiseOrValue<BigNumberish>,
      _sort: PromiseOrValue<string>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getOwnerAavegotchiListings(
      _owner: PromiseOrValue<string>,
      _category: PromiseOrValue<BigNumberish>,
      _sort: PromiseOrValue<string>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getOwnerAavegotchiListings(address,uint256,string,uint256)"(
      _owner: PromiseOrValue<string>,
      _category: PromiseOrValue<BigNumberish>,
      _sort: PromiseOrValue<string>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getOwnerERC721Listings(
      _owner: PromiseOrValue<string>,
      _category: PromiseOrValue<BigNumberish>,
      _sort: PromiseOrValue<string>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getOwnerERC721Listings(address,uint256,string,uint256)"(
      _owner: PromiseOrValue<string>,
      _category: PromiseOrValue<BigNumberish>,
      _sort: PromiseOrValue<string>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setERC721Categories(
      _categories: ERC721MarketplaceFacet.CategoryStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "setERC721Categories((address,uint256)[])"(
      _categories: ERC721MarketplaceFacet.CategoryStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    updateERC721Listing(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _owner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "updateERC721Listing(address,uint256,address)"(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _owner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addERC721Listing(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _priceInWei: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "addERC721Listing(address,uint256,uint256)"(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _priceInWei: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    addERC721ListingWithSplit(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _priceInWei: PromiseOrValue<BigNumberish>,
      _principalSplit: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      _affiliate: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "addERC721ListingWithSplit(address,uint256,uint256,uint16[2],address)"(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _priceInWei: PromiseOrValue<BigNumberish>,
      _principalSplit: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      _affiliate: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    cancelERC721Listing(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "cancelERC721Listing(uint256)"(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    cancelERC721ListingByToken(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "cancelERC721ListingByToken(address,uint256)"(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    cancelERC721Listings(
      _listingIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "cancelERC721Listings(uint256[])"(
      _listingIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    executeERC721Listing(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "executeERC721Listing(uint256)"(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    executeERC721ListingToRecipient(
      _listingId: PromiseOrValue<BigNumberish>,
      _contractAddress: PromiseOrValue<string>,
      _priceInWei: PromiseOrValue<BigNumberish>,
      _tokenId: PromiseOrValue<BigNumberish>,
      _recipient: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "executeERC721ListingToRecipient(uint256,address,uint256,uint256,address)"(
      _listingId: PromiseOrValue<BigNumberish>,
      _contractAddress: PromiseOrValue<string>,
      _priceInWei: PromiseOrValue<BigNumberish>,
      _tokenId: PromiseOrValue<BigNumberish>,
      _recipient: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    getAavegotchiListing(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAavegotchiListing(uint256)"(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAavegotchiListings(
      _category: PromiseOrValue<BigNumberish>,
      _sort: PromiseOrValue<string>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAavegotchiListings(uint256,string,uint256)"(
      _category: PromiseOrValue<BigNumberish>,
      _sort: PromiseOrValue<string>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getERC721Category(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getERC721Category(address,uint256)"(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getERC721Listing(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getERC721Listing(uint256)"(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getERC721ListingFromToken(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _owner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getERC721ListingFromToken(address,uint256,address)"(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _owner: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getERC721Listings(
      _category: PromiseOrValue<BigNumberish>,
      _sort: PromiseOrValue<string>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getERC721Listings(uint256,string,uint256)"(
      _category: PromiseOrValue<BigNumberish>,
      _sort: PromiseOrValue<string>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getOwnerAavegotchiListings(
      _owner: PromiseOrValue<string>,
      _category: PromiseOrValue<BigNumberish>,
      _sort: PromiseOrValue<string>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getOwnerAavegotchiListings(address,uint256,string,uint256)"(
      _owner: PromiseOrValue<string>,
      _category: PromiseOrValue<BigNumberish>,
      _sort: PromiseOrValue<string>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getOwnerERC721Listings(
      _owner: PromiseOrValue<string>,
      _category: PromiseOrValue<BigNumberish>,
      _sort: PromiseOrValue<string>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getOwnerERC721Listings(address,uint256,string,uint256)"(
      _owner: PromiseOrValue<string>,
      _category: PromiseOrValue<BigNumberish>,
      _sort: PromiseOrValue<string>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setERC721Categories(
      _categories: ERC721MarketplaceFacet.CategoryStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "setERC721Categories((address,uint256)[])"(
      _categories: ERC721MarketplaceFacet.CategoryStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    updateERC721Listing(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _owner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "updateERC721Listing(address,uint256,address)"(
      _erc721TokenAddress: PromiseOrValue<string>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _owner: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
