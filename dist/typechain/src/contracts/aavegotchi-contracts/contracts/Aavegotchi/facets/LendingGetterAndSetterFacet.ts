/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../../../../common";

export type GotchiLendingStruct = {
  lender: PromiseOrValue<string>;
  initialCost: PromiseOrValue<BigNumberish>;
  borrower: PromiseOrValue<string>;
  listingId: PromiseOrValue<BigNumberish>;
  erc721TokenId: PromiseOrValue<BigNumberish>;
  whitelistId: PromiseOrValue<BigNumberish>;
  originalOwner: PromiseOrValue<string>;
  timeCreated: PromiseOrValue<BigNumberish>;
  timeAgreed: PromiseOrValue<BigNumberish>;
  canceled: PromiseOrValue<boolean>;
  completed: PromiseOrValue<boolean>;
  thirdParty: PromiseOrValue<string>;
  revenueSplit: [
    PromiseOrValue<BigNumberish>,
    PromiseOrValue<BigNumberish>,
    PromiseOrValue<BigNumberish>
  ];
  lastClaimed: PromiseOrValue<BigNumberish>;
  period: PromiseOrValue<BigNumberish>;
  revenueTokens: PromiseOrValue<string>[];
};

export type GotchiLendingStructOutput = [
  string,
  BigNumber,
  string,
  number,
  number,
  number,
  string,
  number,
  number,
  boolean,
  boolean,
  string,
  [number, number, number],
  number,
  number,
  string[]
] & {
  lender: string;
  initialCost: BigNumber;
  borrower: string;
  listingId: number;
  erc721TokenId: number;
  whitelistId: number;
  originalOwner: string;
  timeCreated: number;
  timeAgreed: number;
  canceled: boolean;
  completed: boolean;
  thirdParty: string;
  revenueSplit: [number, number, number];
  lastClaimed: number;
  period: number;
  revenueTokens: string[];
};

export type DimensionsStruct = {
  x: PromiseOrValue<BigNumberish>;
  y: PromiseOrValue<BigNumberish>;
  width: PromiseOrValue<BigNumberish>;
  height: PromiseOrValue<BigNumberish>;
};

export type DimensionsStructOutput = [number, number, number, number] & {
  x: number;
  y: number;
  width: number;
  height: number;
};

export type ItemTypeStruct = {
  name: PromiseOrValue<string>;
  description: PromiseOrValue<string>;
  author: PromiseOrValue<string>;
  traitModifiers: PromiseOrValue<BigNumberish>[];
  slotPositions: PromiseOrValue<boolean>[];
  allowedCollaterals: PromiseOrValue<BigNumberish>[];
  dimensions: DimensionsStruct;
  ghstPrice: PromiseOrValue<BigNumberish>;
  maxQuantity: PromiseOrValue<BigNumberish>;
  totalQuantity: PromiseOrValue<BigNumberish>;
  svgId: PromiseOrValue<BigNumberish>;
  rarityScoreModifier: PromiseOrValue<BigNumberish>;
  canPurchaseWithGhst: PromiseOrValue<boolean>;
  minLevel: PromiseOrValue<BigNumberish>;
  canBeTransferred: PromiseOrValue<boolean>;
  category: PromiseOrValue<BigNumberish>;
  kinshipBonus: PromiseOrValue<BigNumberish>;
  experienceBonus: PromiseOrValue<BigNumberish>;
};

export type ItemTypeStructOutput = [
  string,
  string,
  string,
  number[],
  boolean[],
  number[],
  DimensionsStructOutput,
  BigNumber,
  BigNumber,
  BigNumber,
  number,
  number,
  boolean,
  number,
  boolean,
  number,
  number,
  number
] & {
  name: string;
  description: string;
  author: string;
  traitModifiers: number[];
  slotPositions: boolean[];
  allowedCollaterals: number[];
  dimensions: DimensionsStructOutput;
  ghstPrice: BigNumber;
  maxQuantity: BigNumber;
  totalQuantity: BigNumber;
  svgId: number;
  rarityScoreModifier: number;
  canPurchaseWithGhst: boolean;
  minLevel: number;
  canBeTransferred: boolean;
  category: number;
  kinshipBonus: number;
  experienceBonus: number;
};

export type ItemTypeIOStruct = {
  balance: PromiseOrValue<BigNumberish>;
  itemId: PromiseOrValue<BigNumberish>;
  itemType: ItemTypeStruct;
};

export type ItemTypeIOStructOutput = [
  BigNumber,
  BigNumber,
  ItemTypeStructOutput
] & { balance: BigNumber; itemId: BigNumber; itemType: ItemTypeStructOutput };

export type AavegotchiInfoStruct = {
  tokenId: PromiseOrValue<BigNumberish>;
  name: PromiseOrValue<string>;
  owner: PromiseOrValue<string>;
  randomNumber: PromiseOrValue<BigNumberish>;
  status: PromiseOrValue<BigNumberish>;
  numericTraits: PromiseOrValue<BigNumberish>[];
  modifiedNumericTraits: PromiseOrValue<BigNumberish>[];
  equippedWearables: PromiseOrValue<BigNumberish>[];
  collateral: PromiseOrValue<string>;
  escrow: PromiseOrValue<string>;
  stakedAmount: PromiseOrValue<BigNumberish>;
  minimumStake: PromiseOrValue<BigNumberish>;
  kinship: PromiseOrValue<BigNumberish>;
  lastInteracted: PromiseOrValue<BigNumberish>;
  experience: PromiseOrValue<BigNumberish>;
  toNextLevel: PromiseOrValue<BigNumberish>;
  usedSkillPoints: PromiseOrValue<BigNumberish>;
  level: PromiseOrValue<BigNumberish>;
  hauntId: PromiseOrValue<BigNumberish>;
  baseRarityScore: PromiseOrValue<BigNumberish>;
  modifiedRarityScore: PromiseOrValue<BigNumberish>;
  locked: PromiseOrValue<boolean>;
  items: ItemTypeIOStruct[];
};

export type AavegotchiInfoStructOutput = [
  BigNumber,
  string,
  string,
  BigNumber,
  BigNumber,
  number[],
  number[],
  number[],
  string,
  string,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  boolean,
  ItemTypeIOStructOutput[]
] & {
  tokenId: BigNumber;
  name: string;
  owner: string;
  randomNumber: BigNumber;
  status: BigNumber;
  numericTraits: number[];
  modifiedNumericTraits: number[];
  equippedWearables: number[];
  collateral: string;
  escrow: string;
  stakedAmount: BigNumber;
  minimumStake: BigNumber;
  kinship: BigNumber;
  lastInteracted: BigNumber;
  experience: BigNumber;
  toNextLevel: BigNumber;
  usedSkillPoints: BigNumber;
  level: BigNumber;
  hauntId: BigNumber;
  baseRarityScore: BigNumber;
  modifiedRarityScore: BigNumber;
  locked: boolean;
  items: ItemTypeIOStructOutput[];
};

export declare namespace LendingGetterAndSetterFacet {
  export type LendingOperatorInputsStruct = {
    _tokenId: PromiseOrValue<BigNumberish>;
    _isLendingOperator: PromiseOrValue<boolean>;
  };

  export type LendingOperatorInputsStructOutput = [number, boolean] & {
    _tokenId: number;
    _isLendingOperator: boolean;
  };
}

export interface LendingGetterAndSetterFacetInterface extends utils.Interface {
  functions: {
    "allowRevenueTokens(address[])": FunctionFragment;
    "balanceOfLentGotchis(address)": FunctionFragment;
    "batchSetLendingOperator(address,(uint32,bool)[])": FunctionFragment;
    "disallowRevenueTokens(address[])": FunctionFragment;
    "getGotchiLendingFromToken(uint32)": FunctionFragment;
    "getGotchiLendingIdByToken(uint32)": FunctionFragment;
    "getGotchiLendingListingInfo(uint32)": FunctionFragment;
    "getGotchiLendings(bytes32,uint256)": FunctionFragment;
    "getGotchiLendingsLength()": FunctionFragment;
    "getLendingListingInfo(uint32)": FunctionFragment;
    "getLentTokenIdsOfLender(address)": FunctionFragment;
    "getOwnerGotchiLendings(address,bytes32,uint256)": FunctionFragment;
    "getOwnerGotchiLendingsLength(address,bytes32)": FunctionFragment;
    "getTokenBalancesInEscrow(uint32,address[])": FunctionFragment;
    "isAavegotchiLent(uint32)": FunctionFragment;
    "isAavegotchiListed(uint32)": FunctionFragment;
    "isLendingOperator(address,address,uint32)": FunctionFragment;
    "revenueTokenAllowed(address)": FunctionFragment;
    "setLendingOperator(address,uint32,bool)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "allowRevenueTokens"
      | "allowRevenueTokens(address[])"
      | "balanceOfLentGotchis"
      | "balanceOfLentGotchis(address)"
      | "batchSetLendingOperator"
      | "batchSetLendingOperator(address,(uint32,bool)[])"
      | "disallowRevenueTokens"
      | "disallowRevenueTokens(address[])"
      | "getGotchiLendingFromToken"
      | "getGotchiLendingFromToken(uint32)"
      | "getGotchiLendingIdByToken"
      | "getGotchiLendingIdByToken(uint32)"
      | "getGotchiLendingListingInfo"
      | "getGotchiLendingListingInfo(uint32)"
      | "getGotchiLendings"
      | "getGotchiLendings(bytes32,uint256)"
      | "getGotchiLendingsLength"
      | "getGotchiLendingsLength()"
      | "getLendingListingInfo"
      | "getLendingListingInfo(uint32)"
      | "getLentTokenIdsOfLender"
      | "getLentTokenIdsOfLender(address)"
      | "getOwnerGotchiLendings"
      | "getOwnerGotchiLendings(address,bytes32,uint256)"
      | "getOwnerGotchiLendingsLength"
      | "getOwnerGotchiLendingsLength(address,bytes32)"
      | "getTokenBalancesInEscrow"
      | "getTokenBalancesInEscrow(uint32,address[])"
      | "isAavegotchiLent"
      | "isAavegotchiLent(uint32)"
      | "isAavegotchiListed"
      | "isAavegotchiListed(uint32)"
      | "isLendingOperator"
      | "isLendingOperator(address,address,uint32)"
      | "revenueTokenAllowed"
      | "revenueTokenAllowed(address)"
      | "setLendingOperator"
      | "setLendingOperator(address,uint32,bool)"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "allowRevenueTokens",
    values: [PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "allowRevenueTokens(address[])",
    values: [PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOfLentGotchis",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOfLentGotchis(address)",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "batchSetLendingOperator",
    values: [
      PromiseOrValue<string>,
      LendingGetterAndSetterFacet.LendingOperatorInputsStruct[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "batchSetLendingOperator(address,(uint32,bool)[])",
    values: [
      PromiseOrValue<string>,
      LendingGetterAndSetterFacet.LendingOperatorInputsStruct[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "disallowRevenueTokens",
    values: [PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "disallowRevenueTokens(address[])",
    values: [PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getGotchiLendingFromToken",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getGotchiLendingFromToken(uint32)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getGotchiLendingIdByToken",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getGotchiLendingIdByToken(uint32)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getGotchiLendingListingInfo",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getGotchiLendingListingInfo(uint32)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getGotchiLendings",
    values: [PromiseOrValue<BytesLike>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getGotchiLendings(bytes32,uint256)",
    values: [PromiseOrValue<BytesLike>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getGotchiLendingsLength",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getGotchiLendingsLength()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getLendingListingInfo",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getLendingListingInfo(uint32)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getLentTokenIdsOfLender",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getLentTokenIdsOfLender(address)",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "getOwnerGotchiLendings",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BytesLike>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getOwnerGotchiLendings(address,bytes32,uint256)",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BytesLike>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getOwnerGotchiLendingsLength",
    values: [PromiseOrValue<string>, PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "getOwnerGotchiLendingsLength(address,bytes32)",
    values: [PromiseOrValue<string>, PromiseOrValue<BytesLike>]
  ): string;
  encodeFunctionData(
    functionFragment: "getTokenBalancesInEscrow",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getTokenBalancesInEscrow(uint32,address[])",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "isAavegotchiLent",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "isAavegotchiLent(uint32)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "isAavegotchiListed",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "isAavegotchiListed(uint32)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "isLendingOperator",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "isLendingOperator(address,address,uint32)",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "revenueTokenAllowed",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "revenueTokenAllowed(address)",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setLendingOperator",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<boolean>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "setLendingOperator(address,uint32,bool)",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<boolean>
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "allowRevenueTokens",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "allowRevenueTokens(address[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "balanceOfLentGotchis",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "balanceOfLentGotchis(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchSetLendingOperator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchSetLendingOperator(address,(uint32,bool)[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "disallowRevenueTokens",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "disallowRevenueTokens(address[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGotchiLendingFromToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGotchiLendingFromToken(uint32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGotchiLendingIdByToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGotchiLendingIdByToken(uint32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGotchiLendingListingInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGotchiLendingListingInfo(uint32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGotchiLendings",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGotchiLendings(bytes32,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGotchiLendingsLength",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGotchiLendingsLength()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLendingListingInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLendingListingInfo(uint32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLentTokenIdsOfLender",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLentTokenIdsOfLender(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getOwnerGotchiLendings",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getOwnerGotchiLendings(address,bytes32,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getOwnerGotchiLendingsLength",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getOwnerGotchiLendingsLength(address,bytes32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTokenBalancesInEscrow",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTokenBalancesInEscrow(uint32,address[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isAavegotchiLent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isAavegotchiLent(uint32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isAavegotchiListed",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isAavegotchiListed(uint32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isLendingOperator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isLendingOperator(address,address,uint32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revenueTokenAllowed",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "revenueTokenAllowed(address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setLendingOperator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setLendingOperator(address,uint32,bool)",
    data: BytesLike
  ): Result;

  events: {
    "LendingOperatorSet(address,address,uint32,bool)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "LendingOperatorSet"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "LendingOperatorSet(address,address,uint32,bool)"
  ): EventFragment;
}

export interface LendingOperatorSetEventObject {
  lender: string;
  lendingOperator: string;
  tokenId: number;
  isLendingOperator: boolean;
}
export type LendingOperatorSetEvent = TypedEvent<
  [string, string, number, boolean],
  LendingOperatorSetEventObject
>;

export type LendingOperatorSetEventFilter =
  TypedEventFilter<LendingOperatorSetEvent>;

export interface LendingGetterAndSetterFacet extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: LendingGetterAndSetterFacetInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    allowRevenueTokens(
      tokens: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "allowRevenueTokens(address[])"(
      tokens: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    balanceOfLentGotchis(
      _lender: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { balance_: BigNumber }>;

    "balanceOfLentGotchis(address)"(
      _lender: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { balance_: BigNumber }>;

    batchSetLendingOperator(
      _lendingOperator: PromiseOrValue<string>,
      _inputs: LendingGetterAndSetterFacet.LendingOperatorInputsStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "batchSetLendingOperator(address,(uint32,bool)[])"(
      _lendingOperator: PromiseOrValue<string>,
      _inputs: LendingGetterAndSetterFacet.LendingOperatorInputsStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    disallowRevenueTokens(
      tokens: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "disallowRevenueTokens(address[])"(
      tokens: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    getGotchiLendingFromToken(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [GotchiLendingStructOutput] & { listing_: GotchiLendingStructOutput }
    >;

    "getGotchiLendingFromToken(uint32)"(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [GotchiLendingStructOutput] & { listing_: GotchiLendingStructOutput }
    >;

    getGotchiLendingIdByToken(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[number]>;

    "getGotchiLendingIdByToken(uint32)"(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[number]>;

    getGotchiLendingListingInfo(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [GotchiLendingStructOutput, AavegotchiInfoStructOutput] & {
        listing_: GotchiLendingStructOutput;
        aavegotchiInfo_: AavegotchiInfoStructOutput;
      }
    >;

    "getGotchiLendingListingInfo(uint32)"(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [GotchiLendingStructOutput, AavegotchiInfoStructOutput] & {
        listing_: GotchiLendingStructOutput;
        aavegotchiInfo_: AavegotchiInfoStructOutput;
      }
    >;

    getGotchiLendings(
      _status: PromiseOrValue<BytesLike>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [GotchiLendingStructOutput[]] & { listings_: GotchiLendingStructOutput[] }
    >;

    "getGotchiLendings(bytes32,uint256)"(
      _status: PromiseOrValue<BytesLike>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [GotchiLendingStructOutput[]] & { listings_: GotchiLendingStructOutput[] }
    >;

    getGotchiLendingsLength(overrides?: CallOverrides): Promise<[BigNumber]>;

    "getGotchiLendingsLength()"(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getLendingListingInfo(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [GotchiLendingStructOutput] & { listing_: GotchiLendingStructOutput }
    >;

    "getLendingListingInfo(uint32)"(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [GotchiLendingStructOutput] & { listing_: GotchiLendingStructOutput }
    >;

    getLentTokenIdsOfLender(
      _lender: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[number[]] & { tokenIds_: number[] }>;

    "getLentTokenIdsOfLender(address)"(
      _lender: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[number[]] & { tokenIds_: number[] }>;

    getOwnerGotchiLendings(
      _lender: PromiseOrValue<string>,
      _status: PromiseOrValue<BytesLike>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [GotchiLendingStructOutput[]] & { listings_: GotchiLendingStructOutput[] }
    >;

    "getOwnerGotchiLendings(address,bytes32,uint256)"(
      _lender: PromiseOrValue<string>,
      _status: PromiseOrValue<BytesLike>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [GotchiLendingStructOutput[]] & { listings_: GotchiLendingStructOutput[] }
    >;

    getOwnerGotchiLendingsLength(
      _lender: PromiseOrValue<string>,
      _status: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getOwnerGotchiLendingsLength(address,bytes32)"(
      _lender: PromiseOrValue<string>,
      _status: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getTokenBalancesInEscrow(
      _tokenId: PromiseOrValue<BigNumberish>,
      _revenueTokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[]] & { revenueBalances: BigNumber[] }>;

    "getTokenBalancesInEscrow(uint32,address[])"(
      _tokenId: PromiseOrValue<BigNumberish>,
      _revenueTokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[]] & { revenueBalances: BigNumber[] }>;

    isAavegotchiLent(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "isAavegotchiLent(uint32)"(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isAavegotchiListed(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "isAavegotchiListed(uint32)"(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isLendingOperator(
      _lender: PromiseOrValue<string>,
      _lendingOperator: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "isLendingOperator(address,address,uint32)"(
      _lender: PromiseOrValue<string>,
      _lendingOperator: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    revenueTokenAllowed(
      token: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "revenueTokenAllowed(address)"(
      token: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    setLendingOperator(
      _lendingOperator: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      _isLendingOperator: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "setLendingOperator(address,uint32,bool)"(
      _lendingOperator: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      _isLendingOperator: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  allowRevenueTokens(
    tokens: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "allowRevenueTokens(address[])"(
    tokens: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  balanceOfLentGotchis(
    _lender: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "balanceOfLentGotchis(address)"(
    _lender: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  batchSetLendingOperator(
    _lendingOperator: PromiseOrValue<string>,
    _inputs: LendingGetterAndSetterFacet.LendingOperatorInputsStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "batchSetLendingOperator(address,(uint32,bool)[])"(
    _lendingOperator: PromiseOrValue<string>,
    _inputs: LendingGetterAndSetterFacet.LendingOperatorInputsStruct[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  disallowRevenueTokens(
    tokens: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "disallowRevenueTokens(address[])"(
    tokens: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  getGotchiLendingFromToken(
    _erc721TokenId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<GotchiLendingStructOutput>;

  "getGotchiLendingFromToken(uint32)"(
    _erc721TokenId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<GotchiLendingStructOutput>;

  getGotchiLendingIdByToken(
    _erc721TokenId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<number>;

  "getGotchiLendingIdByToken(uint32)"(
    _erc721TokenId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<number>;

  getGotchiLendingListingInfo(
    _listingId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<
    [GotchiLendingStructOutput, AavegotchiInfoStructOutput] & {
      listing_: GotchiLendingStructOutput;
      aavegotchiInfo_: AavegotchiInfoStructOutput;
    }
  >;

  "getGotchiLendingListingInfo(uint32)"(
    _listingId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<
    [GotchiLendingStructOutput, AavegotchiInfoStructOutput] & {
      listing_: GotchiLendingStructOutput;
      aavegotchiInfo_: AavegotchiInfoStructOutput;
    }
  >;

  getGotchiLendings(
    _status: PromiseOrValue<BytesLike>,
    _length: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<GotchiLendingStructOutput[]>;

  "getGotchiLendings(bytes32,uint256)"(
    _status: PromiseOrValue<BytesLike>,
    _length: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<GotchiLendingStructOutput[]>;

  getGotchiLendingsLength(overrides?: CallOverrides): Promise<BigNumber>;

  "getGotchiLendingsLength()"(overrides?: CallOverrides): Promise<BigNumber>;

  getLendingListingInfo(
    _listingId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<GotchiLendingStructOutput>;

  "getLendingListingInfo(uint32)"(
    _listingId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<GotchiLendingStructOutput>;

  getLentTokenIdsOfLender(
    _lender: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<number[]>;

  "getLentTokenIdsOfLender(address)"(
    _lender: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<number[]>;

  getOwnerGotchiLendings(
    _lender: PromiseOrValue<string>,
    _status: PromiseOrValue<BytesLike>,
    _length: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<GotchiLendingStructOutput[]>;

  "getOwnerGotchiLendings(address,bytes32,uint256)"(
    _lender: PromiseOrValue<string>,
    _status: PromiseOrValue<BytesLike>,
    _length: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<GotchiLendingStructOutput[]>;

  getOwnerGotchiLendingsLength(
    _lender: PromiseOrValue<string>,
    _status: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getOwnerGotchiLendingsLength(address,bytes32)"(
    _lender: PromiseOrValue<string>,
    _status: PromiseOrValue<BytesLike>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getTokenBalancesInEscrow(
    _tokenId: PromiseOrValue<BigNumberish>,
    _revenueTokens: PromiseOrValue<string>[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  "getTokenBalancesInEscrow(uint32,address[])"(
    _tokenId: PromiseOrValue<BigNumberish>,
    _revenueTokens: PromiseOrValue<string>[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  isAavegotchiLent(
    _erc721TokenId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isAavegotchiLent(uint32)"(
    _erc721TokenId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isAavegotchiListed(
    _erc721TokenId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isAavegotchiListed(uint32)"(
    _erc721TokenId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isLendingOperator(
    _lender: PromiseOrValue<string>,
    _lendingOperator: PromiseOrValue<string>,
    _tokenId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isLendingOperator(address,address,uint32)"(
    _lender: PromiseOrValue<string>,
    _lendingOperator: PromiseOrValue<string>,
    _tokenId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  revenueTokenAllowed(
    token: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "revenueTokenAllowed(address)"(
    token: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  setLendingOperator(
    _lendingOperator: PromiseOrValue<string>,
    _tokenId: PromiseOrValue<BigNumberish>,
    _isLendingOperator: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "setLendingOperator(address,uint32,bool)"(
    _lendingOperator: PromiseOrValue<string>,
    _tokenId: PromiseOrValue<BigNumberish>,
    _isLendingOperator: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    allowRevenueTokens(
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<void>;

    "allowRevenueTokens(address[])"(
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<void>;

    balanceOfLentGotchis(
      _lender: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "balanceOfLentGotchis(address)"(
      _lender: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    batchSetLendingOperator(
      _lendingOperator: PromiseOrValue<string>,
      _inputs: LendingGetterAndSetterFacet.LendingOperatorInputsStruct[],
      overrides?: CallOverrides
    ): Promise<void>;

    "batchSetLendingOperator(address,(uint32,bool)[])"(
      _lendingOperator: PromiseOrValue<string>,
      _inputs: LendingGetterAndSetterFacet.LendingOperatorInputsStruct[],
      overrides?: CallOverrides
    ): Promise<void>;

    disallowRevenueTokens(
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<void>;

    "disallowRevenueTokens(address[])"(
      tokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<void>;

    getGotchiLendingFromToken(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<GotchiLendingStructOutput>;

    "getGotchiLendingFromToken(uint32)"(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<GotchiLendingStructOutput>;

    getGotchiLendingIdByToken(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<number>;

    "getGotchiLendingIdByToken(uint32)"(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<number>;

    getGotchiLendingListingInfo(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [GotchiLendingStructOutput, AavegotchiInfoStructOutput] & {
        listing_: GotchiLendingStructOutput;
        aavegotchiInfo_: AavegotchiInfoStructOutput;
      }
    >;

    "getGotchiLendingListingInfo(uint32)"(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [GotchiLendingStructOutput, AavegotchiInfoStructOutput] & {
        listing_: GotchiLendingStructOutput;
        aavegotchiInfo_: AavegotchiInfoStructOutput;
      }
    >;

    getGotchiLendings(
      _status: PromiseOrValue<BytesLike>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<GotchiLendingStructOutput[]>;

    "getGotchiLendings(bytes32,uint256)"(
      _status: PromiseOrValue<BytesLike>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<GotchiLendingStructOutput[]>;

    getGotchiLendingsLength(overrides?: CallOverrides): Promise<BigNumber>;

    "getGotchiLendingsLength()"(overrides?: CallOverrides): Promise<BigNumber>;

    getLendingListingInfo(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<GotchiLendingStructOutput>;

    "getLendingListingInfo(uint32)"(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<GotchiLendingStructOutput>;

    getLentTokenIdsOfLender(
      _lender: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<number[]>;

    "getLentTokenIdsOfLender(address)"(
      _lender: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<number[]>;

    getOwnerGotchiLendings(
      _lender: PromiseOrValue<string>,
      _status: PromiseOrValue<BytesLike>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<GotchiLendingStructOutput[]>;

    "getOwnerGotchiLendings(address,bytes32,uint256)"(
      _lender: PromiseOrValue<string>,
      _status: PromiseOrValue<BytesLike>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<GotchiLendingStructOutput[]>;

    getOwnerGotchiLendingsLength(
      _lender: PromiseOrValue<string>,
      _status: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getOwnerGotchiLendingsLength(address,bytes32)"(
      _lender: PromiseOrValue<string>,
      _status: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTokenBalancesInEscrow(
      _tokenId: PromiseOrValue<BigNumberish>,
      _revenueTokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    "getTokenBalancesInEscrow(uint32,address[])"(
      _tokenId: PromiseOrValue<BigNumberish>,
      _revenueTokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    isAavegotchiLent(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isAavegotchiLent(uint32)"(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isAavegotchiListed(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isAavegotchiListed(uint32)"(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isLendingOperator(
      _lender: PromiseOrValue<string>,
      _lendingOperator: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isLendingOperator(address,address,uint32)"(
      _lender: PromiseOrValue<string>,
      _lendingOperator: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    revenueTokenAllowed(
      token: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "revenueTokenAllowed(address)"(
      token: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    setLendingOperator(
      _lendingOperator: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      _isLendingOperator: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<void>;

    "setLendingOperator(address,uint32,bool)"(
      _lendingOperator: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      _isLendingOperator: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "LendingOperatorSet(address,address,uint32,bool)"(
      lender?: PromiseOrValue<string> | null,
      lendingOperator?: PromiseOrValue<string> | null,
      tokenId?: PromiseOrValue<BigNumberish> | null,
      isLendingOperator?: null
    ): LendingOperatorSetEventFilter;
    LendingOperatorSet(
      lender?: PromiseOrValue<string> | null,
      lendingOperator?: PromiseOrValue<string> | null,
      tokenId?: PromiseOrValue<BigNumberish> | null,
      isLendingOperator?: null
    ): LendingOperatorSetEventFilter;
  };

  estimateGas: {
    allowRevenueTokens(
      tokens: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "allowRevenueTokens(address[])"(
      tokens: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    balanceOfLentGotchis(
      _lender: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "balanceOfLentGotchis(address)"(
      _lender: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    batchSetLendingOperator(
      _lendingOperator: PromiseOrValue<string>,
      _inputs: LendingGetterAndSetterFacet.LendingOperatorInputsStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "batchSetLendingOperator(address,(uint32,bool)[])"(
      _lendingOperator: PromiseOrValue<string>,
      _inputs: LendingGetterAndSetterFacet.LendingOperatorInputsStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    disallowRevenueTokens(
      tokens: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "disallowRevenueTokens(address[])"(
      tokens: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    getGotchiLendingFromToken(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getGotchiLendingFromToken(uint32)"(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getGotchiLendingIdByToken(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getGotchiLendingIdByToken(uint32)"(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getGotchiLendingListingInfo(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getGotchiLendingListingInfo(uint32)"(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getGotchiLendings(
      _status: PromiseOrValue<BytesLike>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getGotchiLendings(bytes32,uint256)"(
      _status: PromiseOrValue<BytesLike>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getGotchiLendingsLength(overrides?: CallOverrides): Promise<BigNumber>;

    "getGotchiLendingsLength()"(overrides?: CallOverrides): Promise<BigNumber>;

    getLendingListingInfo(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getLendingListingInfo(uint32)"(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getLentTokenIdsOfLender(
      _lender: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getLentTokenIdsOfLender(address)"(
      _lender: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getOwnerGotchiLendings(
      _lender: PromiseOrValue<string>,
      _status: PromiseOrValue<BytesLike>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getOwnerGotchiLendings(address,bytes32,uint256)"(
      _lender: PromiseOrValue<string>,
      _status: PromiseOrValue<BytesLike>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getOwnerGotchiLendingsLength(
      _lender: PromiseOrValue<string>,
      _status: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getOwnerGotchiLendingsLength(address,bytes32)"(
      _lender: PromiseOrValue<string>,
      _status: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTokenBalancesInEscrow(
      _tokenId: PromiseOrValue<BigNumberish>,
      _revenueTokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTokenBalancesInEscrow(uint32,address[])"(
      _tokenId: PromiseOrValue<BigNumberish>,
      _revenueTokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isAavegotchiLent(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isAavegotchiLent(uint32)"(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isAavegotchiListed(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isAavegotchiListed(uint32)"(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isLendingOperator(
      _lender: PromiseOrValue<string>,
      _lendingOperator: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isLendingOperator(address,address,uint32)"(
      _lender: PromiseOrValue<string>,
      _lendingOperator: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    revenueTokenAllowed(
      token: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "revenueTokenAllowed(address)"(
      token: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setLendingOperator(
      _lendingOperator: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      _isLendingOperator: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "setLendingOperator(address,uint32,bool)"(
      _lendingOperator: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      _isLendingOperator: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    allowRevenueTokens(
      tokens: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "allowRevenueTokens(address[])"(
      tokens: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    balanceOfLentGotchis(
      _lender: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "balanceOfLentGotchis(address)"(
      _lender: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    batchSetLendingOperator(
      _lendingOperator: PromiseOrValue<string>,
      _inputs: LendingGetterAndSetterFacet.LendingOperatorInputsStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "batchSetLendingOperator(address,(uint32,bool)[])"(
      _lendingOperator: PromiseOrValue<string>,
      _inputs: LendingGetterAndSetterFacet.LendingOperatorInputsStruct[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    disallowRevenueTokens(
      tokens: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "disallowRevenueTokens(address[])"(
      tokens: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    getGotchiLendingFromToken(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getGotchiLendingFromToken(uint32)"(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getGotchiLendingIdByToken(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getGotchiLendingIdByToken(uint32)"(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getGotchiLendingListingInfo(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getGotchiLendingListingInfo(uint32)"(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getGotchiLendings(
      _status: PromiseOrValue<BytesLike>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getGotchiLendings(bytes32,uint256)"(
      _status: PromiseOrValue<BytesLike>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getGotchiLendingsLength(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getGotchiLendingsLength()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getLendingListingInfo(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getLendingListingInfo(uint32)"(
      _listingId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getLentTokenIdsOfLender(
      _lender: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getLentTokenIdsOfLender(address)"(
      _lender: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getOwnerGotchiLendings(
      _lender: PromiseOrValue<string>,
      _status: PromiseOrValue<BytesLike>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getOwnerGotchiLendings(address,bytes32,uint256)"(
      _lender: PromiseOrValue<string>,
      _status: PromiseOrValue<BytesLike>,
      _length: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getOwnerGotchiLendingsLength(
      _lender: PromiseOrValue<string>,
      _status: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getOwnerGotchiLendingsLength(address,bytes32)"(
      _lender: PromiseOrValue<string>,
      _status: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTokenBalancesInEscrow(
      _tokenId: PromiseOrValue<BigNumberish>,
      _revenueTokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getTokenBalancesInEscrow(uint32,address[])"(
      _tokenId: PromiseOrValue<BigNumberish>,
      _revenueTokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isAavegotchiLent(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isAavegotchiLent(uint32)"(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isAavegotchiListed(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isAavegotchiListed(uint32)"(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isLendingOperator(
      _lender: PromiseOrValue<string>,
      _lendingOperator: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isLendingOperator(address,address,uint32)"(
      _lender: PromiseOrValue<string>,
      _lendingOperator: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    revenueTokenAllowed(
      token: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "revenueTokenAllowed(address)"(
      token: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setLendingOperator(
      _lendingOperator: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      _isLendingOperator: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "setLendingOperator(address,uint32,bool)"(
      _lendingOperator: PromiseOrValue<string>,
      _tokenId: PromiseOrValue<BigNumberish>,
      _isLendingOperator: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
