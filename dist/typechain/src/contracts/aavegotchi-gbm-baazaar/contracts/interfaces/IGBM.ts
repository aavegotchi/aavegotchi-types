/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  Signer,
  utils,
} from "ethers";
import type { EventFragment } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../../../common";

export interface IGBMInterface extends utils.Interface {
  functions: {};

  events: {
    "AuctionCancelled(uint256,uint256)": EventFragment;
    "Auction_BidPlaced(uint256,address,uint256)": EventFragment;
    "Auction_BidRemoved(uint256,address,uint256)": EventFragment;
    "Auction_EndTimeUpdated(uint256,uint256)": EventFragment;
    "Auction_IncentivePaid(uint256,address,uint256)": EventFragment;
    "Auction_Initialized(uint256,uint256,uint256,address,bytes4,uint256)": EventFragment;
    "Auction_ItemClaimed(uint256)": EventFragment;
    "Auction_Modified(uint256,uint64,uint80)": EventFragment;
    "Auction_StartTimeUpdated(uint256,uint256,uint256)": EventFragment;
    "Contract_BiddingAllowed(address,bool)": EventFragment;
    "RoyaltyPaid(uint256,address,address,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "AuctionCancelled"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "AuctionCancelled(uint256,uint256)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Auction_BidPlaced"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "Auction_BidPlaced(uint256,address,uint256)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Auction_BidRemoved"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "Auction_BidRemoved(uint256,address,uint256)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Auction_EndTimeUpdated"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "Auction_EndTimeUpdated(uint256,uint256)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Auction_IncentivePaid"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "Auction_IncentivePaid(uint256,address,uint256)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Auction_Initialized"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "Auction_Initialized(uint256,uint256,uint256,address,bytes4,uint256)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Auction_ItemClaimed"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "Auction_ItemClaimed(uint256)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Auction_Modified"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "Auction_Modified(uint256,uint64,uint80)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Auction_StartTimeUpdated"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "Auction_StartTimeUpdated(uint256,uint256,uint256)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Contract_BiddingAllowed"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "Contract_BiddingAllowed(address,bool)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "RoyaltyPaid"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "RoyaltyPaid(uint256,address,address,uint256)"
  ): EventFragment;
}

export interface AuctionCancelledEventObject {
  _auctionId: BigNumber;
  _tokenId: BigNumber;
}
export type AuctionCancelledEvent = TypedEvent<
  [BigNumber, BigNumber],
  AuctionCancelledEventObject
>;

export type AuctionCancelledEventFilter =
  TypedEventFilter<AuctionCancelledEvent>;

export interface Auction_BidPlacedEventObject {
  _auctionID: BigNumber;
  _bidder: string;
  _bidAmount: BigNumber;
}
export type Auction_BidPlacedEvent = TypedEvent<
  [BigNumber, string, BigNumber],
  Auction_BidPlacedEventObject
>;

export type Auction_BidPlacedEventFilter =
  TypedEventFilter<Auction_BidPlacedEvent>;

export interface Auction_BidRemovedEventObject {
  _auctionID: BigNumber;
  _bidder: string;
  _bidAmount: BigNumber;
}
export type Auction_BidRemovedEvent = TypedEvent<
  [BigNumber, string, BigNumber],
  Auction_BidRemovedEventObject
>;

export type Auction_BidRemovedEventFilter =
  TypedEventFilter<Auction_BidRemovedEvent>;

export interface Auction_EndTimeUpdatedEventObject {
  _auctionID: BigNumber;
  _endTime: BigNumber;
}
export type Auction_EndTimeUpdatedEvent = TypedEvent<
  [BigNumber, BigNumber],
  Auction_EndTimeUpdatedEventObject
>;

export type Auction_EndTimeUpdatedEventFilter =
  TypedEventFilter<Auction_EndTimeUpdatedEvent>;

export interface Auction_IncentivePaidEventObject {
  _auctionID: BigNumber;
  _earner: string;
  _incentiveAmount: BigNumber;
}
export type Auction_IncentivePaidEvent = TypedEvent<
  [BigNumber, string, BigNumber],
  Auction_IncentivePaidEventObject
>;

export type Auction_IncentivePaidEventFilter =
  TypedEventFilter<Auction_IncentivePaidEvent>;

export interface Auction_InitializedEventObject {
  _auctionID: BigNumber;
  _tokenID: BigNumber;
  _tokenAmount: BigNumber;
  _contractAddress: string;
  _tokenKind: string;
  _presetID: BigNumber;
}
export type Auction_InitializedEvent = TypedEvent<
  [BigNumber, BigNumber, BigNumber, string, string, BigNumber],
  Auction_InitializedEventObject
>;

export type Auction_InitializedEventFilter =
  TypedEventFilter<Auction_InitializedEvent>;

export interface Auction_ItemClaimedEventObject {
  _auctionID: BigNumber;
}
export type Auction_ItemClaimedEvent = TypedEvent<
  [BigNumber],
  Auction_ItemClaimedEventObject
>;

export type Auction_ItemClaimedEventFilter =
  TypedEventFilter<Auction_ItemClaimedEvent>;

export interface Auction_ModifiedEventObject {
  _auctionID: BigNumber;
  _newTokenAmount: BigNumber;
  _newEndTime: BigNumber;
}
export type Auction_ModifiedEvent = TypedEvent<
  [BigNumber, BigNumber, BigNumber],
  Auction_ModifiedEventObject
>;

export type Auction_ModifiedEventFilter =
  TypedEventFilter<Auction_ModifiedEvent>;

export interface Auction_StartTimeUpdatedEventObject {
  _auctionID: BigNumber;
  _startTime: BigNumber;
  _endTime: BigNumber;
}
export type Auction_StartTimeUpdatedEvent = TypedEvent<
  [BigNumber, BigNumber, BigNumber],
  Auction_StartTimeUpdatedEventObject
>;

export type Auction_StartTimeUpdatedEventFilter =
  TypedEventFilter<Auction_StartTimeUpdatedEvent>;

export interface Contract_BiddingAllowedEventObject {
  _contract: string;
  _biddingAllowed: boolean;
}
export type Contract_BiddingAllowedEvent = TypedEvent<
  [string, boolean],
  Contract_BiddingAllowedEventObject
>;

export type Contract_BiddingAllowedEventFilter =
  TypedEventFilter<Contract_BiddingAllowedEvent>;

export interface RoyaltyPaidEventObject {
  _auctionId: BigNumber;
  _tokenContractAddress: string;
  _beneficiary: string;
  _amount: BigNumber;
}
export type RoyaltyPaidEvent = TypedEvent<
  [BigNumber, string, string, BigNumber],
  RoyaltyPaidEventObject
>;

export type RoyaltyPaidEventFilter = TypedEventFilter<RoyaltyPaidEvent>;

export interface IGBM extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IGBMInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {};

  callStatic: {};

  filters: {
    "AuctionCancelled(uint256,uint256)"(
      _auctionId?: PromiseOrValue<BigNumberish> | null,
      _tokenId?: null
    ): AuctionCancelledEventFilter;
    AuctionCancelled(
      _auctionId?: PromiseOrValue<BigNumberish> | null,
      _tokenId?: null
    ): AuctionCancelledEventFilter;

    "Auction_BidPlaced(uint256,address,uint256)"(
      _auctionID?: PromiseOrValue<BigNumberish> | null,
      _bidder?: PromiseOrValue<string> | null,
      _bidAmount?: null
    ): Auction_BidPlacedEventFilter;
    Auction_BidPlaced(
      _auctionID?: PromiseOrValue<BigNumberish> | null,
      _bidder?: PromiseOrValue<string> | null,
      _bidAmount?: null
    ): Auction_BidPlacedEventFilter;

    "Auction_BidRemoved(uint256,address,uint256)"(
      _auctionID?: PromiseOrValue<BigNumberish> | null,
      _bidder?: PromiseOrValue<string> | null,
      _bidAmount?: null
    ): Auction_BidRemovedEventFilter;
    Auction_BidRemoved(
      _auctionID?: PromiseOrValue<BigNumberish> | null,
      _bidder?: PromiseOrValue<string> | null,
      _bidAmount?: null
    ): Auction_BidRemovedEventFilter;

    "Auction_EndTimeUpdated(uint256,uint256)"(
      _auctionID?: PromiseOrValue<BigNumberish> | null,
      _endTime?: null
    ): Auction_EndTimeUpdatedEventFilter;
    Auction_EndTimeUpdated(
      _auctionID?: PromiseOrValue<BigNumberish> | null,
      _endTime?: null
    ): Auction_EndTimeUpdatedEventFilter;

    "Auction_IncentivePaid(uint256,address,uint256)"(
      _auctionID?: PromiseOrValue<BigNumberish> | null,
      _earner?: PromiseOrValue<string> | null,
      _incentiveAmount?: null
    ): Auction_IncentivePaidEventFilter;
    Auction_IncentivePaid(
      _auctionID?: PromiseOrValue<BigNumberish> | null,
      _earner?: PromiseOrValue<string> | null,
      _incentiveAmount?: null
    ): Auction_IncentivePaidEventFilter;

    "Auction_Initialized(uint256,uint256,uint256,address,bytes4,uint256)"(
      _auctionID?: PromiseOrValue<BigNumberish> | null,
      _tokenID?: PromiseOrValue<BigNumberish> | null,
      _tokenAmount?: PromiseOrValue<BigNumberish> | null,
      _contractAddress?: null,
      _tokenKind?: null,
      _presetID?: null
    ): Auction_InitializedEventFilter;
    Auction_Initialized(
      _auctionID?: PromiseOrValue<BigNumberish> | null,
      _tokenID?: PromiseOrValue<BigNumberish> | null,
      _tokenAmount?: PromiseOrValue<BigNumberish> | null,
      _contractAddress?: null,
      _tokenKind?: null,
      _presetID?: null
    ): Auction_InitializedEventFilter;

    "Auction_ItemClaimed(uint256)"(
      _auctionID?: PromiseOrValue<BigNumberish> | null
    ): Auction_ItemClaimedEventFilter;
    Auction_ItemClaimed(
      _auctionID?: PromiseOrValue<BigNumberish> | null
    ): Auction_ItemClaimedEventFilter;

    "Auction_Modified(uint256,uint64,uint80)"(
      _auctionID?: PromiseOrValue<BigNumberish> | null,
      _newTokenAmount?: PromiseOrValue<BigNumberish> | null,
      _newEndTime?: PromiseOrValue<BigNumberish> | null
    ): Auction_ModifiedEventFilter;
    Auction_Modified(
      _auctionID?: PromiseOrValue<BigNumberish> | null,
      _newTokenAmount?: PromiseOrValue<BigNumberish> | null,
      _newEndTime?: PromiseOrValue<BigNumberish> | null
    ): Auction_ModifiedEventFilter;

    "Auction_StartTimeUpdated(uint256,uint256,uint256)"(
      _auctionID?: PromiseOrValue<BigNumberish> | null,
      _startTime?: null,
      _endTime?: null
    ): Auction_StartTimeUpdatedEventFilter;
    Auction_StartTimeUpdated(
      _auctionID?: PromiseOrValue<BigNumberish> | null,
      _startTime?: null,
      _endTime?: null
    ): Auction_StartTimeUpdatedEventFilter;

    "Contract_BiddingAllowed(address,bool)"(
      _contract?: PromiseOrValue<string> | null,
      _biddingAllowed?: null
    ): Contract_BiddingAllowedEventFilter;
    Contract_BiddingAllowed(
      _contract?: PromiseOrValue<string> | null,
      _biddingAllowed?: null
    ): Contract_BiddingAllowedEventFilter;

    "RoyaltyPaid(uint256,address,address,uint256)"(
      _auctionId?: PromiseOrValue<BigNumberish> | null,
      _tokenContractAddress?: PromiseOrValue<string> | null,
      _beneficiary?: null,
      _amount?: null
    ): RoyaltyPaidEventFilter;
    RoyaltyPaid(
      _auctionId?: PromiseOrValue<BigNumberish> | null,
      _tokenContractAddress?: PromiseOrValue<string> | null,
      _beneficiary?: null,
      _amount?: null
    ): RoyaltyPaidEventFilter;
  };

  estimateGas: {};

  populateTransaction: {};
}
