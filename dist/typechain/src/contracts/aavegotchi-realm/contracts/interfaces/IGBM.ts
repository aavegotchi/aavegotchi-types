/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../../../common";

export interface IGBMInterface extends utils.Interface {
  functions: {
    "batchClaim(uint256[])": FunctionFragment;
    "claim(uint256)": FunctionFragment;
    "erc20Currency()": FunctionFragment;
    "getAuctionBidDecimals(uint256)": FunctionFragment;
    "getAuctionBidMultiplier(uint256)": FunctionFragment;
    "getAuctionDebt(uint256)": FunctionFragment;
    "getAuctionDueIncentives(uint256)": FunctionFragment;
    "getAuctionEndTime(uint256)": FunctionFragment;
    "getAuctionHammerTimeDuration(uint256)": FunctionFragment;
    "getAuctionHighestBid(uint256)": FunctionFragment;
    "getAuctionHighestBidder(uint256)": FunctionFragment;
    "getAuctionID(address,uint256)": FunctionFragment;
    "getAuctionID(address,uint256,uint256)": FunctionFragment;
    "getAuctionIncMax(uint256)": FunctionFragment;
    "getAuctionIncMin(uint256)": FunctionFragment;
    "getAuctionStartTime(uint256)": FunctionFragment;
    "getAuctionStepMin(uint256)": FunctionFragment;
    "getContractAddress(uint256)": FunctionFragment;
    "getTokenId(uint256)": FunctionFragment;
    "getTokenKind(uint256)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "batchClaim"
      | "batchClaim(uint256[])"
      | "claim"
      | "claim(uint256)"
      | "erc20Currency"
      | "erc20Currency()"
      | "getAuctionBidDecimals"
      | "getAuctionBidDecimals(uint256)"
      | "getAuctionBidMultiplier"
      | "getAuctionBidMultiplier(uint256)"
      | "getAuctionDebt"
      | "getAuctionDebt(uint256)"
      | "getAuctionDueIncentives"
      | "getAuctionDueIncentives(uint256)"
      | "getAuctionEndTime"
      | "getAuctionEndTime(uint256)"
      | "getAuctionHammerTimeDuration"
      | "getAuctionHammerTimeDuration(uint256)"
      | "getAuctionHighestBid"
      | "getAuctionHighestBid(uint256)"
      | "getAuctionHighestBidder"
      | "getAuctionHighestBidder(uint256)"
      | "getAuctionID(address,uint256)"
      | "getAuctionID(address,uint256,uint256)"
      | "getAuctionIncMax"
      | "getAuctionIncMax(uint256)"
      | "getAuctionIncMin"
      | "getAuctionIncMin(uint256)"
      | "getAuctionStartTime"
      | "getAuctionStartTime(uint256)"
      | "getAuctionStepMin"
      | "getAuctionStepMin(uint256)"
      | "getContractAddress"
      | "getContractAddress(uint256)"
      | "getTokenId"
      | "getTokenId(uint256)"
      | "getTokenKind"
      | "getTokenKind(uint256)"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "batchClaim",
    values: [PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "batchClaim(uint256[])",
    values: [PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "claim",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "claim(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "erc20Currency",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "erc20Currency()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getAuctionBidDecimals",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getAuctionBidDecimals(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getAuctionBidMultiplier",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getAuctionBidMultiplier(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getAuctionDebt",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getAuctionDebt(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getAuctionDueIncentives",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getAuctionDueIncentives(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getAuctionEndTime",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getAuctionEndTime(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getAuctionHammerTimeDuration",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getAuctionHammerTimeDuration(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getAuctionHighestBid",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getAuctionHighestBid(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getAuctionHighestBidder",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getAuctionHighestBidder(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getAuctionID(address,uint256)",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getAuctionID(address,uint256,uint256)",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getAuctionIncMax",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getAuctionIncMax(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getAuctionIncMin",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getAuctionIncMin(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getAuctionStartTime",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getAuctionStartTime(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getAuctionStepMin",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getAuctionStepMin(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getContractAddress",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getContractAddress(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getTokenId",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getTokenId(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getTokenKind",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getTokenKind(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;

  decodeFunctionResult(functionFragment: "batchClaim", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "batchClaim(uint256[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "claim", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "claim(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "erc20Currency",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "erc20Currency()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAuctionBidDecimals",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAuctionBidDecimals(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAuctionBidMultiplier",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAuctionBidMultiplier(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAuctionDebt",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAuctionDebt(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAuctionDueIncentives",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAuctionDueIncentives(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAuctionEndTime",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAuctionEndTime(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAuctionHammerTimeDuration",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAuctionHammerTimeDuration(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAuctionHighestBid",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAuctionHighestBid(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAuctionHighestBidder",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAuctionHighestBidder(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAuctionID(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAuctionID(address,uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAuctionIncMax",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAuctionIncMax(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAuctionIncMin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAuctionIncMin(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAuctionStartTime",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAuctionStartTime(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAuctionStepMin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAuctionStepMin(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getContractAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getContractAddress(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getTokenId", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getTokenId(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTokenKind",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTokenKind(uint256)",
    data: BytesLike
  ): Result;

  events: {
    "Auction_BidPlaced(uint256,address,uint256)": EventFragment;
    "Auction_BidRemoved(uint256,address,uint256)": EventFragment;
    "Auction_EndTimeUpdated(uint256,uint256)": EventFragment;
    "Auction_IncentivePaid(uint256,address,uint256)": EventFragment;
    "Auction_Initialized(uint256,uint256,uint256,address,bytes4)": EventFragment;
    "Auction_ItemClaimed(uint256)": EventFragment;
    "Auction_StartTimeUpdated(uint256,uint256)": EventFragment;
    "Contract_BiddingAllowed(address,bool)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Auction_BidPlaced"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "Auction_BidPlaced(uint256,address,uint256)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Auction_BidRemoved"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "Auction_BidRemoved(uint256,address,uint256)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Auction_EndTimeUpdated"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "Auction_EndTimeUpdated(uint256,uint256)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Auction_IncentivePaid"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "Auction_IncentivePaid(uint256,address,uint256)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Auction_Initialized"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "Auction_Initialized(uint256,uint256,uint256,address,bytes4)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Auction_ItemClaimed"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "Auction_ItemClaimed(uint256)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Auction_StartTimeUpdated"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "Auction_StartTimeUpdated(uint256,uint256)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "Contract_BiddingAllowed"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "Contract_BiddingAllowed(address,bool)"
  ): EventFragment;
}

export interface Auction_BidPlacedEventObject {
  _auctionID: BigNumber;
  _bidder: string;
  _bidAmount: BigNumber;
}
export type Auction_BidPlacedEvent = TypedEvent<
  [BigNumber, string, BigNumber],
  Auction_BidPlacedEventObject
>;

export type Auction_BidPlacedEventFilter =
  TypedEventFilter<Auction_BidPlacedEvent>;

export interface Auction_BidRemovedEventObject {
  _auctionID: BigNumber;
  _bidder: string;
  _bidAmount: BigNumber;
}
export type Auction_BidRemovedEvent = TypedEvent<
  [BigNumber, string, BigNumber],
  Auction_BidRemovedEventObject
>;

export type Auction_BidRemovedEventFilter =
  TypedEventFilter<Auction_BidRemovedEvent>;

export interface Auction_EndTimeUpdatedEventObject {
  _auctionID: BigNumber;
  _endTime: BigNumber;
}
export type Auction_EndTimeUpdatedEvent = TypedEvent<
  [BigNumber, BigNumber],
  Auction_EndTimeUpdatedEventObject
>;

export type Auction_EndTimeUpdatedEventFilter =
  TypedEventFilter<Auction_EndTimeUpdatedEvent>;

export interface Auction_IncentivePaidEventObject {
  _auctionID: BigNumber;
  _earner: string;
  _incentiveAmount: BigNumber;
}
export type Auction_IncentivePaidEvent = TypedEvent<
  [BigNumber, string, BigNumber],
  Auction_IncentivePaidEventObject
>;

export type Auction_IncentivePaidEventFilter =
  TypedEventFilter<Auction_IncentivePaidEvent>;

export interface Auction_InitializedEventObject {
  _auctionID: BigNumber;
  _tokenID: BigNumber;
  _tokenIndex: BigNumber;
  _contractAddress: string;
  _tokenKind: string;
}
export type Auction_InitializedEvent = TypedEvent<
  [BigNumber, BigNumber, BigNumber, string, string],
  Auction_InitializedEventObject
>;

export type Auction_InitializedEventFilter =
  TypedEventFilter<Auction_InitializedEvent>;

export interface Auction_ItemClaimedEventObject {
  _auctionID: BigNumber;
}
export type Auction_ItemClaimedEvent = TypedEvent<
  [BigNumber],
  Auction_ItemClaimedEventObject
>;

export type Auction_ItemClaimedEventFilter =
  TypedEventFilter<Auction_ItemClaimedEvent>;

export interface Auction_StartTimeUpdatedEventObject {
  _auctionID: BigNumber;
  _startTime: BigNumber;
}
export type Auction_StartTimeUpdatedEvent = TypedEvent<
  [BigNumber, BigNumber],
  Auction_StartTimeUpdatedEventObject
>;

export type Auction_StartTimeUpdatedEventFilter =
  TypedEventFilter<Auction_StartTimeUpdatedEvent>;

export interface Contract_BiddingAllowedEventObject {
  _contract: string;
  _biddingAllowed: boolean;
}
export type Contract_BiddingAllowedEvent = TypedEvent<
  [string, boolean],
  Contract_BiddingAllowedEventObject
>;

export type Contract_BiddingAllowedEventFilter =
  TypedEventFilter<Contract_BiddingAllowedEvent>;

export interface IGBM extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IGBMInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    batchClaim(
      _auctionIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "batchClaim(uint256[])"(
      _auctionIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    claim(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "claim(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    erc20Currency(overrides?: CallOverrides): Promise<[string]>;

    "erc20Currency()"(overrides?: CallOverrides): Promise<[string]>;

    getAuctionBidDecimals(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getAuctionBidDecimals(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getAuctionBidMultiplier(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getAuctionBidMultiplier(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getAuctionDebt(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getAuctionDebt(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getAuctionDueIncentives(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getAuctionDueIncentives(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getAuctionEndTime(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getAuctionEndTime(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getAuctionHammerTimeDuration(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getAuctionHammerTimeDuration(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getAuctionHighestBid(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getAuctionHighestBid(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getAuctionHighestBidder(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "getAuctionHighestBidder(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "getAuctionID(address,uint256)"(
      _contract: PromiseOrValue<string>,
      _tokenID: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getAuctionID(address,uint256,uint256)"(
      _contract: PromiseOrValue<string>,
      _tokenID: PromiseOrValue<BigNumberish>,
      _tokenIndex: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getAuctionIncMax(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getAuctionIncMax(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getAuctionIncMin(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getAuctionIncMin(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getAuctionStartTime(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getAuctionStartTime(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getAuctionStepMin(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getAuctionStepMin(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getContractAddress(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "getContractAddress(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getTokenId(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getTokenId(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getTokenKind(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "getTokenKind(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;
  };

  batchClaim(
    _auctionIds: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "batchClaim(uint256[])"(
    _auctionIds: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  claim(
    _auctionId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "claim(uint256)"(
    _auctionId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  erc20Currency(overrides?: CallOverrides): Promise<string>;

  "erc20Currency()"(overrides?: CallOverrides): Promise<string>;

  getAuctionBidDecimals(
    _auctionId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getAuctionBidDecimals(uint256)"(
    _auctionId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getAuctionBidMultiplier(
    _auctionId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getAuctionBidMultiplier(uint256)"(
    _auctionId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getAuctionDebt(
    _auctionId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getAuctionDebt(uint256)"(
    _auctionId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getAuctionDueIncentives(
    _auctionId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getAuctionDueIncentives(uint256)"(
    _auctionId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getAuctionEndTime(
    _auctionId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getAuctionEndTime(uint256)"(
    _auctionId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getAuctionHammerTimeDuration(
    _auctionId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getAuctionHammerTimeDuration(uint256)"(
    _auctionId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getAuctionHighestBid(
    _auctionId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getAuctionHighestBid(uint256)"(
    _auctionId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getAuctionHighestBidder(
    _auctionId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  "getAuctionHighestBidder(uint256)"(
    _auctionId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  "getAuctionID(address,uint256)"(
    _contract: PromiseOrValue<string>,
    _tokenID: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getAuctionID(address,uint256,uint256)"(
    _contract: PromiseOrValue<string>,
    _tokenID: PromiseOrValue<BigNumberish>,
    _tokenIndex: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getAuctionIncMax(
    _auctionId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getAuctionIncMax(uint256)"(
    _auctionId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getAuctionIncMin(
    _auctionId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getAuctionIncMin(uint256)"(
    _auctionId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getAuctionStartTime(
    _auctionId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getAuctionStartTime(uint256)"(
    _auctionId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getAuctionStepMin(
    _auctionId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getAuctionStepMin(uint256)"(
    _auctionId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getContractAddress(
    _auctionId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  "getContractAddress(uint256)"(
    _auctionId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  getTokenId(
    _auctionId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getTokenId(uint256)"(
    _auctionId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getTokenKind(
    _auctionId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  "getTokenKind(uint256)"(
    _auctionId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  callStatic: {
    batchClaim(
      _auctionIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    "batchClaim(uint256[])"(
      _auctionIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    claim(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "claim(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    erc20Currency(overrides?: CallOverrides): Promise<string>;

    "erc20Currency()"(overrides?: CallOverrides): Promise<string>;

    getAuctionBidDecimals(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAuctionBidDecimals(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAuctionBidMultiplier(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAuctionBidMultiplier(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAuctionDebt(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAuctionDebt(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAuctionDueIncentives(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAuctionDueIncentives(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAuctionEndTime(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAuctionEndTime(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAuctionHammerTimeDuration(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAuctionHammerTimeDuration(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAuctionHighestBid(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAuctionHighestBid(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAuctionHighestBidder(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    "getAuctionHighestBidder(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    "getAuctionID(address,uint256)"(
      _contract: PromiseOrValue<string>,
      _tokenID: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAuctionID(address,uint256,uint256)"(
      _contract: PromiseOrValue<string>,
      _tokenID: PromiseOrValue<BigNumberish>,
      _tokenIndex: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAuctionIncMax(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAuctionIncMax(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAuctionIncMin(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAuctionIncMin(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAuctionStartTime(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAuctionStartTime(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAuctionStepMin(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAuctionStepMin(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getContractAddress(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    "getContractAddress(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    getTokenId(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTokenId(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTokenKind(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    "getTokenKind(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;
  };

  filters: {
    "Auction_BidPlaced(uint256,address,uint256)"(
      _auctionID?: PromiseOrValue<BigNumberish> | null,
      _bidder?: PromiseOrValue<string> | null,
      _bidAmount?: null
    ): Auction_BidPlacedEventFilter;
    Auction_BidPlaced(
      _auctionID?: PromiseOrValue<BigNumberish> | null,
      _bidder?: PromiseOrValue<string> | null,
      _bidAmount?: null
    ): Auction_BidPlacedEventFilter;

    "Auction_BidRemoved(uint256,address,uint256)"(
      _auctionID?: PromiseOrValue<BigNumberish> | null,
      _bidder?: PromiseOrValue<string> | null,
      _bidAmount?: null
    ): Auction_BidRemovedEventFilter;
    Auction_BidRemoved(
      _auctionID?: PromiseOrValue<BigNumberish> | null,
      _bidder?: PromiseOrValue<string> | null,
      _bidAmount?: null
    ): Auction_BidRemovedEventFilter;

    "Auction_EndTimeUpdated(uint256,uint256)"(
      _auctionID?: PromiseOrValue<BigNumberish> | null,
      _endTime?: null
    ): Auction_EndTimeUpdatedEventFilter;
    Auction_EndTimeUpdated(
      _auctionID?: PromiseOrValue<BigNumberish> | null,
      _endTime?: null
    ): Auction_EndTimeUpdatedEventFilter;

    "Auction_IncentivePaid(uint256,address,uint256)"(
      _auctionID?: PromiseOrValue<BigNumberish> | null,
      _earner?: PromiseOrValue<string> | null,
      _incentiveAmount?: null
    ): Auction_IncentivePaidEventFilter;
    Auction_IncentivePaid(
      _auctionID?: PromiseOrValue<BigNumberish> | null,
      _earner?: PromiseOrValue<string> | null,
      _incentiveAmount?: null
    ): Auction_IncentivePaidEventFilter;

    "Auction_Initialized(uint256,uint256,uint256,address,bytes4)"(
      _auctionID?: PromiseOrValue<BigNumberish> | null,
      _tokenID?: PromiseOrValue<BigNumberish> | null,
      _tokenIndex?: PromiseOrValue<BigNumberish> | null,
      _contractAddress?: null,
      _tokenKind?: null
    ): Auction_InitializedEventFilter;
    Auction_Initialized(
      _auctionID?: PromiseOrValue<BigNumberish> | null,
      _tokenID?: PromiseOrValue<BigNumberish> | null,
      _tokenIndex?: PromiseOrValue<BigNumberish> | null,
      _contractAddress?: null,
      _tokenKind?: null
    ): Auction_InitializedEventFilter;

    "Auction_ItemClaimed(uint256)"(
      _auctionID?: PromiseOrValue<BigNumberish> | null
    ): Auction_ItemClaimedEventFilter;
    Auction_ItemClaimed(
      _auctionID?: PromiseOrValue<BigNumberish> | null
    ): Auction_ItemClaimedEventFilter;

    "Auction_StartTimeUpdated(uint256,uint256)"(
      _auctionID?: PromiseOrValue<BigNumberish> | null,
      _startTime?: null
    ): Auction_StartTimeUpdatedEventFilter;
    Auction_StartTimeUpdated(
      _auctionID?: PromiseOrValue<BigNumberish> | null,
      _startTime?: null
    ): Auction_StartTimeUpdatedEventFilter;

    "Contract_BiddingAllowed(address,bool)"(
      _contract?: PromiseOrValue<string> | null,
      _biddingAllowed?: null
    ): Contract_BiddingAllowedEventFilter;
    Contract_BiddingAllowed(
      _contract?: PromiseOrValue<string> | null,
      _biddingAllowed?: null
    ): Contract_BiddingAllowedEventFilter;
  };

  estimateGas: {
    batchClaim(
      _auctionIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "batchClaim(uint256[])"(
      _auctionIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    claim(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "claim(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    erc20Currency(overrides?: CallOverrides): Promise<BigNumber>;

    "erc20Currency()"(overrides?: CallOverrides): Promise<BigNumber>;

    getAuctionBidDecimals(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAuctionBidDecimals(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAuctionBidMultiplier(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAuctionBidMultiplier(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAuctionDebt(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAuctionDebt(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAuctionDueIncentives(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAuctionDueIncentives(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAuctionEndTime(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAuctionEndTime(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAuctionHammerTimeDuration(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAuctionHammerTimeDuration(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAuctionHighestBid(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAuctionHighestBid(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAuctionHighestBidder(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAuctionHighestBidder(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAuctionID(address,uint256)"(
      _contract: PromiseOrValue<string>,
      _tokenID: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAuctionID(address,uint256,uint256)"(
      _contract: PromiseOrValue<string>,
      _tokenID: PromiseOrValue<BigNumberish>,
      _tokenIndex: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAuctionIncMax(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAuctionIncMax(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAuctionIncMin(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAuctionIncMin(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAuctionStartTime(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAuctionStartTime(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAuctionStepMin(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAuctionStepMin(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getContractAddress(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getContractAddress(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTokenId(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTokenId(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTokenKind(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTokenKind(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    batchClaim(
      _auctionIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "batchClaim(uint256[])"(
      _auctionIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    claim(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "claim(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    erc20Currency(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "erc20Currency()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getAuctionBidDecimals(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAuctionBidDecimals(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAuctionBidMultiplier(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAuctionBidMultiplier(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAuctionDebt(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAuctionDebt(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAuctionDueIncentives(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAuctionDueIncentives(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAuctionEndTime(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAuctionEndTime(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAuctionHammerTimeDuration(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAuctionHammerTimeDuration(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAuctionHighestBid(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAuctionHighestBid(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAuctionHighestBidder(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAuctionHighestBidder(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAuctionID(address,uint256)"(
      _contract: PromiseOrValue<string>,
      _tokenID: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAuctionID(address,uint256,uint256)"(
      _contract: PromiseOrValue<string>,
      _tokenID: PromiseOrValue<BigNumberish>,
      _tokenIndex: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAuctionIncMax(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAuctionIncMax(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAuctionIncMin(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAuctionIncMin(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAuctionStartTime(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAuctionStartTime(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAuctionStepMin(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAuctionStepMin(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getContractAddress(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getContractAddress(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTokenId(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getTokenId(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTokenKind(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getTokenKind(uint256)"(
      _auctionId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
