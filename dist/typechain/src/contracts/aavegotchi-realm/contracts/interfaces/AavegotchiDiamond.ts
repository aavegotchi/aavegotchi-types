/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../../../common";

export declare namespace AavegotchiDiamond {
  export type GotchiLendingStruct = {
    lender: PromiseOrValue<string>;
    initialCost: PromiseOrValue<BigNumberish>;
    borrower: PromiseOrValue<string>;
    listingId: PromiseOrValue<BigNumberish>;
    erc721TokenId: PromiseOrValue<BigNumberish>;
    whitelistId: PromiseOrValue<BigNumberish>;
    originalOwner: PromiseOrValue<string>;
    timeCreated: PromiseOrValue<BigNumberish>;
    timeAgreed: PromiseOrValue<BigNumberish>;
    canceled: PromiseOrValue<boolean>;
    completed: PromiseOrValue<boolean>;
    thirdParty: PromiseOrValue<string>;
    revenueSplit: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ];
    lastClaimed: PromiseOrValue<BigNumberish>;
    period: PromiseOrValue<BigNumberish>;
    revenueTokens: PromiseOrValue<string>[];
  };

  export type GotchiLendingStructOutput = [
    string,
    BigNumber,
    string,
    number,
    number,
    number,
    string,
    number,
    number,
    boolean,
    boolean,
    string,
    [number, number, number],
    number,
    number,
    string[]
  ] & {
    lender: string;
    initialCost: BigNumber;
    borrower: string;
    listingId: number;
    erc721TokenId: number;
    whitelistId: number;
    originalOwner: string;
    timeCreated: number;
    timeAgreed: number;
    canceled: boolean;
    completed: boolean;
    thirdParty: string;
    revenueSplit: [number, number, number];
    lastClaimed: number;
    period: number;
    revenueTokens: string[];
  };
}

export interface AavegotchiDiamondInterface extends utils.Interface {
  functions: {
    "addGotchiLending(uint32,uint96,uint32,uint8[3],address,address,uint32,address[])": FunctionFragment;
    "agreeGotchiLending(uint32,uint32,uint96,uint32,uint8[3])": FunctionFragment;
    "createWhitelist(string,address[])": FunctionFragment;
    "getGotchiLendingFromToken(uint32)": FunctionFragment;
    "getGotchiLendingsLength()": FunctionFragment;
    "getWhitelistsLength()": FunctionFragment;
    "gotchiEscrow(uint256)": FunctionFragment;
    "isAavegotchiLent(uint32)": FunctionFragment;
    "isAavegotchiListed(uint32)": FunctionFragment;
    "isWhitelisted(uint32,address)": FunctionFragment;
    "kinship(uint256)": FunctionFragment;
    "ownerOf(uint256)": FunctionFragment;
    "realmInteract(uint256)": FunctionFragment;
    "whitelistOwner(uint32)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "addGotchiLending"
      | "addGotchiLending(uint32,uint96,uint32,uint8[3],address,address,uint32,address[])"
      | "agreeGotchiLending"
      | "agreeGotchiLending(uint32,uint32,uint96,uint32,uint8[3])"
      | "createWhitelist"
      | "createWhitelist(string,address[])"
      | "getGotchiLendingFromToken"
      | "getGotchiLendingFromToken(uint32)"
      | "getGotchiLendingsLength"
      | "getGotchiLendingsLength()"
      | "getWhitelistsLength"
      | "getWhitelistsLength()"
      | "gotchiEscrow"
      | "gotchiEscrow(uint256)"
      | "isAavegotchiLent"
      | "isAavegotchiLent(uint32)"
      | "isAavegotchiListed"
      | "isAavegotchiListed(uint32)"
      | "isWhitelisted"
      | "isWhitelisted(uint32,address)"
      | "kinship"
      | "kinship(uint256)"
      | "ownerOf"
      | "ownerOf(uint256)"
      | "realmInteract"
      | "realmInteract(uint256)"
      | "whitelistOwner"
      | "whitelistOwner(uint32)"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "addGotchiLending",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "addGotchiLending(uint32,uint96,uint32,uint8[3],address,address,uint32,address[])",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "agreeGotchiLending",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "agreeGotchiLending(uint32,uint32,uint96,uint32,uint8[3])",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "createWhitelist",
    values: [PromiseOrValue<string>, PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "createWhitelist(string,address[])",
    values: [PromiseOrValue<string>, PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getGotchiLendingFromToken",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getGotchiLendingFromToken(uint32)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getGotchiLendingsLength",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getGotchiLendingsLength()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getWhitelistsLength",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getWhitelistsLength()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "gotchiEscrow",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "gotchiEscrow(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "isAavegotchiLent",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "isAavegotchiLent(uint32)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "isAavegotchiListed",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "isAavegotchiListed(uint32)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "isWhitelisted",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "isWhitelisted(uint32,address)",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "kinship",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "kinship(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "ownerOf",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "ownerOf(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "realmInteract",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "realmInteract(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "whitelistOwner",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "whitelistOwner(uint32)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;

  decodeFunctionResult(
    functionFragment: "addGotchiLending",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addGotchiLending(uint32,uint96,uint32,uint8[3],address,address,uint32,address[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "agreeGotchiLending",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "agreeGotchiLending(uint32,uint32,uint96,uint32,uint8[3])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createWhitelist",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createWhitelist(string,address[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGotchiLendingFromToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGotchiLendingFromToken(uint32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGotchiLendingsLength",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGotchiLendingsLength()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getWhitelistsLength",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getWhitelistsLength()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "gotchiEscrow",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "gotchiEscrow(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isAavegotchiLent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isAavegotchiLent(uint32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isAavegotchiListed",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isAavegotchiListed(uint32)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isWhitelisted",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isWhitelisted(uint32,address)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "kinship", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "kinship(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "ownerOf", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "ownerOf(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "realmInteract",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "realmInteract(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "whitelistOwner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "whitelistOwner(uint32)",
    data: BytesLike
  ): Result;

  events: {};
}

export interface AavegotchiDiamond extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: AavegotchiDiamondInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    addGotchiLending(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _initialCost: PromiseOrValue<BigNumberish>,
      _period: PromiseOrValue<BigNumberish>,
      _revenueSplit: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      _originalOwner: PromiseOrValue<string>,
      _thirdParty: PromiseOrValue<string>,
      _whitelistId: PromiseOrValue<BigNumberish>,
      _revenueTokens: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "addGotchiLending(uint32,uint96,uint32,uint8[3],address,address,uint32,address[])"(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _initialCost: PromiseOrValue<BigNumberish>,
      _period: PromiseOrValue<BigNumberish>,
      _revenueSplit: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      _originalOwner: PromiseOrValue<string>,
      _thirdParty: PromiseOrValue<string>,
      _whitelistId: PromiseOrValue<BigNumberish>,
      _revenueTokens: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    agreeGotchiLending(
      _listingId: PromiseOrValue<BigNumberish>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _initialCost: PromiseOrValue<BigNumberish>,
      _period: PromiseOrValue<BigNumberish>,
      _revenueSplit: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "agreeGotchiLending(uint32,uint32,uint96,uint32,uint8[3])"(
      _listingId: PromiseOrValue<BigNumberish>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _initialCost: PromiseOrValue<BigNumberish>,
      _period: PromiseOrValue<BigNumberish>,
      _revenueSplit: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    createWhitelist(
      _name: PromiseOrValue<string>,
      _whitelistAddresses: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "createWhitelist(string,address[])"(
      _name: PromiseOrValue<string>,
      _whitelistAddresses: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    getGotchiLendingFromToken(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [AavegotchiDiamond.GotchiLendingStructOutput] & {
        listing_: AavegotchiDiamond.GotchiLendingStructOutput;
      }
    >;

    "getGotchiLendingFromToken(uint32)"(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [AavegotchiDiamond.GotchiLendingStructOutput] & {
        listing_: AavegotchiDiamond.GotchiLendingStructOutput;
      }
    >;

    getGotchiLendingsLength(overrides?: CallOverrides): Promise<[BigNumber]>;

    "getGotchiLendingsLength()"(
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getWhitelistsLength(overrides?: CallOverrides): Promise<[BigNumber]>;

    "getWhitelistsLength()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    gotchiEscrow(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "gotchiEscrow(uint256)"(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    isAavegotchiLent(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "isAavegotchiLent(uint32)"(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isAavegotchiListed(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "isAavegotchiListed(uint32)"(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    isWhitelisted(
      _whitelistId: PromiseOrValue<BigNumberish>,
      _whitelistAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "isWhitelisted(uint32,address)"(
      _whitelistId: PromiseOrValue<BigNumberish>,
      _whitelistAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    kinship(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { score_: BigNumber }>;

    "kinship(uint256)"(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { score_: BigNumber }>;

    ownerOf(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string] & { owner_: string }>;

    "ownerOf(uint256)"(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string] & { owner_: string }>;

    realmInteract(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "realmInteract(uint256)"(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    whitelistOwner(
      _whitelistId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "whitelistOwner(uint32)"(
      _whitelistId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;
  };

  addGotchiLending(
    _erc721TokenId: PromiseOrValue<BigNumberish>,
    _initialCost: PromiseOrValue<BigNumberish>,
    _period: PromiseOrValue<BigNumberish>,
    _revenueSplit: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ],
    _originalOwner: PromiseOrValue<string>,
    _thirdParty: PromiseOrValue<string>,
    _whitelistId: PromiseOrValue<BigNumberish>,
    _revenueTokens: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "addGotchiLending(uint32,uint96,uint32,uint8[3],address,address,uint32,address[])"(
    _erc721TokenId: PromiseOrValue<BigNumberish>,
    _initialCost: PromiseOrValue<BigNumberish>,
    _period: PromiseOrValue<BigNumberish>,
    _revenueSplit: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ],
    _originalOwner: PromiseOrValue<string>,
    _thirdParty: PromiseOrValue<string>,
    _whitelistId: PromiseOrValue<BigNumberish>,
    _revenueTokens: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  agreeGotchiLending(
    _listingId: PromiseOrValue<BigNumberish>,
    _erc721TokenId: PromiseOrValue<BigNumberish>,
    _initialCost: PromiseOrValue<BigNumberish>,
    _period: PromiseOrValue<BigNumberish>,
    _revenueSplit: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "agreeGotchiLending(uint32,uint32,uint96,uint32,uint8[3])"(
    _listingId: PromiseOrValue<BigNumberish>,
    _erc721TokenId: PromiseOrValue<BigNumberish>,
    _initialCost: PromiseOrValue<BigNumberish>,
    _period: PromiseOrValue<BigNumberish>,
    _revenueSplit: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  createWhitelist(
    _name: PromiseOrValue<string>,
    _whitelistAddresses: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "createWhitelist(string,address[])"(
    _name: PromiseOrValue<string>,
    _whitelistAddresses: PromiseOrValue<string>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  getGotchiLendingFromToken(
    _erc721TokenId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<AavegotchiDiamond.GotchiLendingStructOutput>;

  "getGotchiLendingFromToken(uint32)"(
    _erc721TokenId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<AavegotchiDiamond.GotchiLendingStructOutput>;

  getGotchiLendingsLength(overrides?: CallOverrides): Promise<BigNumber>;

  "getGotchiLendingsLength()"(overrides?: CallOverrides): Promise<BigNumber>;

  getWhitelistsLength(overrides?: CallOverrides): Promise<BigNumber>;

  "getWhitelistsLength()"(overrides?: CallOverrides): Promise<BigNumber>;

  gotchiEscrow(
    _tokenId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  "gotchiEscrow(uint256)"(
    _tokenId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  isAavegotchiLent(
    _erc721TokenId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isAavegotchiLent(uint32)"(
    _erc721TokenId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isAavegotchiListed(
    _erc721TokenId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "isAavegotchiListed(uint32)"(
    _erc721TokenId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  isWhitelisted(
    _whitelistId: PromiseOrValue<BigNumberish>,
    _whitelistAddress: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "isWhitelisted(uint32,address)"(
    _whitelistId: PromiseOrValue<BigNumberish>,
    _whitelistAddress: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  kinship(
    _tokenId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "kinship(uint256)"(
    _tokenId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  ownerOf(
    _tokenId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  "ownerOf(uint256)"(
    _tokenId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  realmInteract(
    _tokenId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "realmInteract(uint256)"(
    _tokenId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  whitelistOwner(
    _whitelistId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  "whitelistOwner(uint32)"(
    _whitelistId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  callStatic: {
    addGotchiLending(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _initialCost: PromiseOrValue<BigNumberish>,
      _period: PromiseOrValue<BigNumberish>,
      _revenueSplit: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      _originalOwner: PromiseOrValue<string>,
      _thirdParty: PromiseOrValue<string>,
      _whitelistId: PromiseOrValue<BigNumberish>,
      _revenueTokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<void>;

    "addGotchiLending(uint32,uint96,uint32,uint8[3],address,address,uint32,address[])"(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _initialCost: PromiseOrValue<BigNumberish>,
      _period: PromiseOrValue<BigNumberish>,
      _revenueSplit: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      _originalOwner: PromiseOrValue<string>,
      _thirdParty: PromiseOrValue<string>,
      _whitelistId: PromiseOrValue<BigNumberish>,
      _revenueTokens: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<void>;

    agreeGotchiLending(
      _listingId: PromiseOrValue<BigNumberish>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _initialCost: PromiseOrValue<BigNumberish>,
      _period: PromiseOrValue<BigNumberish>,
      _revenueSplit: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      overrides?: CallOverrides
    ): Promise<void>;

    "agreeGotchiLending(uint32,uint32,uint96,uint32,uint8[3])"(
      _listingId: PromiseOrValue<BigNumberish>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _initialCost: PromiseOrValue<BigNumberish>,
      _period: PromiseOrValue<BigNumberish>,
      _revenueSplit: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      overrides?: CallOverrides
    ): Promise<void>;

    createWhitelist(
      _name: PromiseOrValue<string>,
      _whitelistAddresses: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<void>;

    "createWhitelist(string,address[])"(
      _name: PromiseOrValue<string>,
      _whitelistAddresses: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<void>;

    getGotchiLendingFromToken(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<AavegotchiDiamond.GotchiLendingStructOutput>;

    "getGotchiLendingFromToken(uint32)"(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<AavegotchiDiamond.GotchiLendingStructOutput>;

    getGotchiLendingsLength(overrides?: CallOverrides): Promise<BigNumber>;

    "getGotchiLendingsLength()"(overrides?: CallOverrides): Promise<BigNumber>;

    getWhitelistsLength(overrides?: CallOverrides): Promise<BigNumber>;

    "getWhitelistsLength()"(overrides?: CallOverrides): Promise<BigNumber>;

    gotchiEscrow(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    "gotchiEscrow(uint256)"(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    isAavegotchiLent(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isAavegotchiLent(uint32)"(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isAavegotchiListed(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "isAavegotchiListed(uint32)"(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    isWhitelisted(
      _whitelistId: PromiseOrValue<BigNumberish>,
      _whitelistAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isWhitelisted(uint32,address)"(
      _whitelistId: PromiseOrValue<BigNumberish>,
      _whitelistAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    kinship(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "kinship(uint256)"(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    ownerOf(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    "ownerOf(uint256)"(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    realmInteract(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "realmInteract(uint256)"(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    whitelistOwner(
      _whitelistId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    "whitelistOwner(uint32)"(
      _whitelistId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;
  };

  filters: {};

  estimateGas: {
    addGotchiLending(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _initialCost: PromiseOrValue<BigNumberish>,
      _period: PromiseOrValue<BigNumberish>,
      _revenueSplit: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      _originalOwner: PromiseOrValue<string>,
      _thirdParty: PromiseOrValue<string>,
      _whitelistId: PromiseOrValue<BigNumberish>,
      _revenueTokens: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "addGotchiLending(uint32,uint96,uint32,uint8[3],address,address,uint32,address[])"(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _initialCost: PromiseOrValue<BigNumberish>,
      _period: PromiseOrValue<BigNumberish>,
      _revenueSplit: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      _originalOwner: PromiseOrValue<string>,
      _thirdParty: PromiseOrValue<string>,
      _whitelistId: PromiseOrValue<BigNumberish>,
      _revenueTokens: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    agreeGotchiLending(
      _listingId: PromiseOrValue<BigNumberish>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _initialCost: PromiseOrValue<BigNumberish>,
      _period: PromiseOrValue<BigNumberish>,
      _revenueSplit: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "agreeGotchiLending(uint32,uint32,uint96,uint32,uint8[3])"(
      _listingId: PromiseOrValue<BigNumberish>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _initialCost: PromiseOrValue<BigNumberish>,
      _period: PromiseOrValue<BigNumberish>,
      _revenueSplit: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    createWhitelist(
      _name: PromiseOrValue<string>,
      _whitelistAddresses: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "createWhitelist(string,address[])"(
      _name: PromiseOrValue<string>,
      _whitelistAddresses: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    getGotchiLendingFromToken(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getGotchiLendingFromToken(uint32)"(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getGotchiLendingsLength(overrides?: CallOverrides): Promise<BigNumber>;

    "getGotchiLendingsLength()"(overrides?: CallOverrides): Promise<BigNumber>;

    getWhitelistsLength(overrides?: CallOverrides): Promise<BigNumber>;

    "getWhitelistsLength()"(overrides?: CallOverrides): Promise<BigNumber>;

    gotchiEscrow(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "gotchiEscrow(uint256)"(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isAavegotchiLent(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isAavegotchiLent(uint32)"(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isAavegotchiListed(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isAavegotchiListed(uint32)"(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    isWhitelisted(
      _whitelistId: PromiseOrValue<BigNumberish>,
      _whitelistAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "isWhitelisted(uint32,address)"(
      _whitelistId: PromiseOrValue<BigNumberish>,
      _whitelistAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    kinship(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "kinship(uint256)"(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    ownerOf(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "ownerOf(uint256)"(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    realmInteract(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "realmInteract(uint256)"(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    whitelistOwner(
      _whitelistId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "whitelistOwner(uint32)"(
      _whitelistId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addGotchiLending(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _initialCost: PromiseOrValue<BigNumberish>,
      _period: PromiseOrValue<BigNumberish>,
      _revenueSplit: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      _originalOwner: PromiseOrValue<string>,
      _thirdParty: PromiseOrValue<string>,
      _whitelistId: PromiseOrValue<BigNumberish>,
      _revenueTokens: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "addGotchiLending(uint32,uint96,uint32,uint8[3],address,address,uint32,address[])"(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _initialCost: PromiseOrValue<BigNumberish>,
      _period: PromiseOrValue<BigNumberish>,
      _revenueSplit: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      _originalOwner: PromiseOrValue<string>,
      _thirdParty: PromiseOrValue<string>,
      _whitelistId: PromiseOrValue<BigNumberish>,
      _revenueTokens: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    agreeGotchiLending(
      _listingId: PromiseOrValue<BigNumberish>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _initialCost: PromiseOrValue<BigNumberish>,
      _period: PromiseOrValue<BigNumberish>,
      _revenueSplit: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "agreeGotchiLending(uint32,uint32,uint96,uint32,uint8[3])"(
      _listingId: PromiseOrValue<BigNumberish>,
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      _initialCost: PromiseOrValue<BigNumberish>,
      _period: PromiseOrValue<BigNumberish>,
      _revenueSplit: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    createWhitelist(
      _name: PromiseOrValue<string>,
      _whitelistAddresses: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "createWhitelist(string,address[])"(
      _name: PromiseOrValue<string>,
      _whitelistAddresses: PromiseOrValue<string>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    getGotchiLendingFromToken(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getGotchiLendingFromToken(uint32)"(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getGotchiLendingsLength(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getGotchiLendingsLength()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getWhitelistsLength(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getWhitelistsLength()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    gotchiEscrow(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "gotchiEscrow(uint256)"(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isAavegotchiLent(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isAavegotchiLent(uint32)"(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isAavegotchiListed(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isAavegotchiListed(uint32)"(
      _erc721TokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    isWhitelisted(
      _whitelistId: PromiseOrValue<BigNumberish>,
      _whitelistAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isWhitelisted(uint32,address)"(
      _whitelistId: PromiseOrValue<BigNumberish>,
      _whitelistAddress: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    kinship(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "kinship(uint256)"(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    ownerOf(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "ownerOf(uint256)"(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    realmInteract(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "realmInteract(uint256)"(
      _tokenId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    whitelistOwner(
      _whitelistId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "whitelistOwner(uint32)"(
      _whitelistId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
