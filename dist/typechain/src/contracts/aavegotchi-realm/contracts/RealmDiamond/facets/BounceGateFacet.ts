/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../../../../common";

export type BounceGateStruct = {
  title: PromiseOrValue<string>;
  startTime: PromiseOrValue<BigNumberish>;
  endTime: PromiseOrValue<BigNumberish>;
  priority: PromiseOrValue<BigNumberish>;
  equipped: PromiseOrValue<boolean>;
  lastTimeUpdated: PromiseOrValue<BigNumberish>;
};

export type BounceGateStructOutput = [
  string,
  BigNumber,
  BigNumber,
  BigNumber,
  boolean,
  BigNumber
] & {
  title: string;
  startTime: BigNumber;
  endTime: BigNumber;
  priority: BigNumber;
  equipped: boolean;
  lastTimeUpdated: BigNumber;
};

export interface BounceGateFacetInterface extends utils.Interface {
  functions: {
    "cancelEvent(uint256)": FunctionFragment;
    "createEvent(string,uint64,uint64,uint256[4],uint256)": FunctionFragment;
    "recreateEvent(uint256,uint64,uint64,uint256[4])": FunctionFragment;
    "updateEvent(uint256,uint256[4],uint40)": FunctionFragment;
    "viewEvent(uint256)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "cancelEvent"
      | "cancelEvent(uint256)"
      | "createEvent"
      | "createEvent(string,uint64,uint64,uint256[4],uint256)"
      | "recreateEvent"
      | "recreateEvent(uint256,uint64,uint64,uint256[4])"
      | "updateEvent"
      | "updateEvent(uint256,uint256[4],uint40)"
      | "viewEvent"
      | "viewEvent(uint256)"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "cancelEvent",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "cancelEvent(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "createEvent",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "createEvent(string,uint64,uint64,uint256[4],uint256)",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "recreateEvent",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "recreateEvent(uint256,uint64,uint64,uint256[4])",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "updateEvent",
    values: [
      PromiseOrValue<BigNumberish>,
      [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "updateEvent(uint256,uint256[4],uint40)",
    values: [
      PromiseOrValue<BigNumberish>,
      [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "viewEvent",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "viewEvent(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;

  decodeFunctionResult(
    functionFragment: "cancelEvent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "cancelEvent(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createEvent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createEvent(string,uint64,uint64,uint256[4],uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "recreateEvent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "recreateEvent(uint256,uint64,uint64,uint256[4])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateEvent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateEvent(uint256,uint256[4],uint40)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "viewEvent", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "viewEvent(uint256)",
    data: BytesLike
  ): Result;

  events: {};
}

export interface BounceGateFacet extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: BounceGateFacetInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    cancelEvent(
      _realmId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "cancelEvent(uint256)"(
      _realmId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    createEvent(
      _title: PromiseOrValue<string>,
      _startTime: PromiseOrValue<BigNumberish>,
      _durationInMinutes: PromiseOrValue<BigNumberish>,
      _alchemicaSpent: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      _realmId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "createEvent(string,uint64,uint64,uint256[4],uint256)"(
      _title: PromiseOrValue<string>,
      _startTime: PromiseOrValue<BigNumberish>,
      _durationInMinutes: PromiseOrValue<BigNumberish>,
      _alchemicaSpent: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      _realmId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    recreateEvent(
      _realmId: PromiseOrValue<BigNumberish>,
      _startTime: PromiseOrValue<BigNumberish>,
      _durationInMinutes: PromiseOrValue<BigNumberish>,
      _alchemicaSpent: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "recreateEvent(uint256,uint64,uint64,uint256[4])"(
      _realmId: PromiseOrValue<BigNumberish>,
      _startTime: PromiseOrValue<BigNumberish>,
      _durationInMinutes: PromiseOrValue<BigNumberish>,
      _alchemicaSpent: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    updateEvent(
      _realmId: PromiseOrValue<BigNumberish>,
      _alchemicaSpent: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      _durationExtensionInMinutes: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "updateEvent(uint256,uint256[4],uint40)"(
      _realmId: PromiseOrValue<BigNumberish>,
      _alchemicaSpent: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      _durationExtensionInMinutes: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    viewEvent(
      _realmId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BounceGateStructOutput] & { b_: BounceGateStructOutput }>;

    "viewEvent(uint256)"(
      _realmId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BounceGateStructOutput] & { b_: BounceGateStructOutput }>;
  };

  cancelEvent(
    _realmId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "cancelEvent(uint256)"(
    _realmId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  createEvent(
    _title: PromiseOrValue<string>,
    _startTime: PromiseOrValue<BigNumberish>,
    _durationInMinutes: PromiseOrValue<BigNumberish>,
    _alchemicaSpent: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ],
    _realmId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "createEvent(string,uint64,uint64,uint256[4],uint256)"(
    _title: PromiseOrValue<string>,
    _startTime: PromiseOrValue<BigNumberish>,
    _durationInMinutes: PromiseOrValue<BigNumberish>,
    _alchemicaSpent: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ],
    _realmId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  recreateEvent(
    _realmId: PromiseOrValue<BigNumberish>,
    _startTime: PromiseOrValue<BigNumberish>,
    _durationInMinutes: PromiseOrValue<BigNumberish>,
    _alchemicaSpent: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "recreateEvent(uint256,uint64,uint64,uint256[4])"(
    _realmId: PromiseOrValue<BigNumberish>,
    _startTime: PromiseOrValue<BigNumberish>,
    _durationInMinutes: PromiseOrValue<BigNumberish>,
    _alchemicaSpent: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  updateEvent(
    _realmId: PromiseOrValue<BigNumberish>,
    _alchemicaSpent: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ],
    _durationExtensionInMinutes: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "updateEvent(uint256,uint256[4],uint40)"(
    _realmId: PromiseOrValue<BigNumberish>,
    _alchemicaSpent: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ],
    _durationExtensionInMinutes: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  viewEvent(
    _realmId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BounceGateStructOutput>;

  "viewEvent(uint256)"(
    _realmId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BounceGateStructOutput>;

  callStatic: {
    cancelEvent(
      _realmId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "cancelEvent(uint256)"(
      _realmId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    createEvent(
      _title: PromiseOrValue<string>,
      _startTime: PromiseOrValue<BigNumberish>,
      _durationInMinutes: PromiseOrValue<BigNumberish>,
      _alchemicaSpent: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      _realmId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "createEvent(string,uint64,uint64,uint256[4],uint256)"(
      _title: PromiseOrValue<string>,
      _startTime: PromiseOrValue<BigNumberish>,
      _durationInMinutes: PromiseOrValue<BigNumberish>,
      _alchemicaSpent: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      _realmId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    recreateEvent(
      _realmId: PromiseOrValue<BigNumberish>,
      _startTime: PromiseOrValue<BigNumberish>,
      _durationInMinutes: PromiseOrValue<BigNumberish>,
      _alchemicaSpent: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      overrides?: CallOverrides
    ): Promise<void>;

    "recreateEvent(uint256,uint64,uint64,uint256[4])"(
      _realmId: PromiseOrValue<BigNumberish>,
      _startTime: PromiseOrValue<BigNumberish>,
      _durationInMinutes: PromiseOrValue<BigNumberish>,
      _alchemicaSpent: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      overrides?: CallOverrides
    ): Promise<void>;

    updateEvent(
      _realmId: PromiseOrValue<BigNumberish>,
      _alchemicaSpent: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      _durationExtensionInMinutes: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "updateEvent(uint256,uint256[4],uint40)"(
      _realmId: PromiseOrValue<BigNumberish>,
      _alchemicaSpent: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      _durationExtensionInMinutes: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    viewEvent(
      _realmId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BounceGateStructOutput>;

    "viewEvent(uint256)"(
      _realmId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BounceGateStructOutput>;
  };

  filters: {};

  estimateGas: {
    cancelEvent(
      _realmId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "cancelEvent(uint256)"(
      _realmId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    createEvent(
      _title: PromiseOrValue<string>,
      _startTime: PromiseOrValue<BigNumberish>,
      _durationInMinutes: PromiseOrValue<BigNumberish>,
      _alchemicaSpent: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      _realmId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "createEvent(string,uint64,uint64,uint256[4],uint256)"(
      _title: PromiseOrValue<string>,
      _startTime: PromiseOrValue<BigNumberish>,
      _durationInMinutes: PromiseOrValue<BigNumberish>,
      _alchemicaSpent: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      _realmId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    recreateEvent(
      _realmId: PromiseOrValue<BigNumberish>,
      _startTime: PromiseOrValue<BigNumberish>,
      _durationInMinutes: PromiseOrValue<BigNumberish>,
      _alchemicaSpent: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "recreateEvent(uint256,uint64,uint64,uint256[4])"(
      _realmId: PromiseOrValue<BigNumberish>,
      _startTime: PromiseOrValue<BigNumberish>,
      _durationInMinutes: PromiseOrValue<BigNumberish>,
      _alchemicaSpent: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    updateEvent(
      _realmId: PromiseOrValue<BigNumberish>,
      _alchemicaSpent: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      _durationExtensionInMinutes: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "updateEvent(uint256,uint256[4],uint40)"(
      _realmId: PromiseOrValue<BigNumberish>,
      _alchemicaSpent: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      _durationExtensionInMinutes: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    viewEvent(
      _realmId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "viewEvent(uint256)"(
      _realmId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    cancelEvent(
      _realmId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "cancelEvent(uint256)"(
      _realmId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    createEvent(
      _title: PromiseOrValue<string>,
      _startTime: PromiseOrValue<BigNumberish>,
      _durationInMinutes: PromiseOrValue<BigNumberish>,
      _alchemicaSpent: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      _realmId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "createEvent(string,uint64,uint64,uint256[4],uint256)"(
      _title: PromiseOrValue<string>,
      _startTime: PromiseOrValue<BigNumberish>,
      _durationInMinutes: PromiseOrValue<BigNumberish>,
      _alchemicaSpent: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      _realmId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    recreateEvent(
      _realmId: PromiseOrValue<BigNumberish>,
      _startTime: PromiseOrValue<BigNumberish>,
      _durationInMinutes: PromiseOrValue<BigNumberish>,
      _alchemicaSpent: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "recreateEvent(uint256,uint64,uint64,uint256[4])"(
      _realmId: PromiseOrValue<BigNumberish>,
      _startTime: PromiseOrValue<BigNumberish>,
      _durationInMinutes: PromiseOrValue<BigNumberish>,
      _alchemicaSpent: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    updateEvent(
      _realmId: PromiseOrValue<BigNumberish>,
      _alchemicaSpent: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      _durationExtensionInMinutes: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "updateEvent(uint256,uint256[4],uint40)"(
      _realmId: PromiseOrValue<BigNumberish>,
      _alchemicaSpent: [
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>,
        PromiseOrValue<BigNumberish>
      ],
      _durationExtensionInMinutes: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    viewEvent(
      _realmId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "viewEvent(uint256)"(
      _realmId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
