/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../../../../common";

export declare namespace RealmGettersAndSettersFacet {
  export type ParcelOutputStruct = {
    parcelId: PromiseOrValue<string>;
    parcelAddress: PromiseOrValue<string>;
    owner: PromiseOrValue<string>;
    coordinateX: PromiseOrValue<BigNumberish>;
    coordinateY: PromiseOrValue<BigNumberish>;
    size: PromiseOrValue<BigNumberish>;
    district: PromiseOrValue<BigNumberish>;
    boost: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ];
    timeRemainingToClaim: PromiseOrValue<BigNumberish>;
  };

  export type ParcelOutputStructOutput = [
    string,
    string,
    string,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    [BigNumber, BigNumber, BigNumber, BigNumber],
    BigNumber
  ] & {
    parcelId: string;
    parcelAddress: string;
    owner: string;
    coordinateX: BigNumber;
    coordinateY: BigNumber;
    size: BigNumber;
    district: BigNumber;
    boost: [BigNumber, BigNumber, BigNumber, BigNumber];
    timeRemainingToClaim: BigNumber;
  };
}

export interface RealmGettersAndSettersFacetInterface extends utils.Interface {
  functions: {
    "batchGetDistrictParcels(address,uint256)": FunctionFragment;
    "checkCoordinates(uint256,uint256,uint256,uint256)": FunctionFragment;
    "getAltarId(uint256)": FunctionFragment;
    "getParcelInfo(uint256)": FunctionFragment;
    "getParcelUpgradeQueueCapacity(uint256)": FunctionFragment;
    "getParcelUpgradeQueueLength(uint256)": FunctionFragment;
    "getParcelsAccessRights(uint256[],uint256[])": FunctionFragment;
    "getParcelsAccessRightsWhitelistIds(uint256[],uint256[])": FunctionFragment;
    "maxSupply()": FunctionFragment;
    "resyncParcel(uint256[])": FunctionFragment;
    "setAltarId(uint256,uint256)": FunctionFragment;
    "setGameActive(bool)": FunctionFragment;
    "setParcelsAccessRightWithWhitelists(uint256[],uint256[],uint256[],uint32[])": FunctionFragment;
    "setParcelsAccessRights(uint256[],uint256[],uint256[])": FunctionFragment;
    "verifyAccessRight(uint256,uint256,uint256,address)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "batchGetDistrictParcels"
      | "batchGetDistrictParcels(address,uint256)"
      | "checkCoordinates"
      | "checkCoordinates(uint256,uint256,uint256,uint256)"
      | "getAltarId"
      | "getAltarId(uint256)"
      | "getParcelInfo"
      | "getParcelInfo(uint256)"
      | "getParcelUpgradeQueueCapacity"
      | "getParcelUpgradeQueueCapacity(uint256)"
      | "getParcelUpgradeQueueLength"
      | "getParcelUpgradeQueueLength(uint256)"
      | "getParcelsAccessRights"
      | "getParcelsAccessRights(uint256[],uint256[])"
      | "getParcelsAccessRightsWhitelistIds"
      | "getParcelsAccessRightsWhitelistIds(uint256[],uint256[])"
      | "maxSupply"
      | "maxSupply()"
      | "resyncParcel"
      | "resyncParcel(uint256[])"
      | "setAltarId"
      | "setAltarId(uint256,uint256)"
      | "setGameActive"
      | "setGameActive(bool)"
      | "setParcelsAccessRightWithWhitelists"
      | "setParcelsAccessRightWithWhitelists(uint256[],uint256[],uint256[],uint32[])"
      | "setParcelsAccessRights"
      | "setParcelsAccessRights(uint256[],uint256[],uint256[])"
      | "verifyAccessRight"
      | "verifyAccessRight(uint256,uint256,uint256,address)"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "batchGetDistrictParcels",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "batchGetDistrictParcels(address,uint256)",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "checkCoordinates",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "checkCoordinates(uint256,uint256,uint256,uint256)",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getAltarId",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getAltarId(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getParcelInfo",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getParcelInfo(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getParcelUpgradeQueueCapacity",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getParcelUpgradeQueueCapacity(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getParcelUpgradeQueueLength",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getParcelUpgradeQueueLength(uint256)",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "getParcelsAccessRights",
    values: [PromiseOrValue<BigNumberish>[], PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getParcelsAccessRights(uint256[],uint256[])",
    values: [PromiseOrValue<BigNumberish>[], PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getParcelsAccessRightsWhitelistIds",
    values: [PromiseOrValue<BigNumberish>[], PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getParcelsAccessRightsWhitelistIds(uint256[],uint256[])",
    values: [PromiseOrValue<BigNumberish>[], PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(functionFragment: "maxSupply", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "maxSupply()",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "resyncParcel",
    values: [PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "resyncParcel(uint256[])",
    values: [PromiseOrValue<BigNumberish>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "setAltarId",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "setAltarId(uint256,uint256)",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "setGameActive",
    values: [PromiseOrValue<boolean>]
  ): string;
  encodeFunctionData(
    functionFragment: "setGameActive(bool)",
    values: [PromiseOrValue<boolean>]
  ): string;
  encodeFunctionData(
    functionFragment: "setParcelsAccessRightWithWhitelists",
    values: [
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<BigNumberish>[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "setParcelsAccessRightWithWhitelists(uint256[],uint256[],uint256[],uint32[])",
    values: [
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<BigNumberish>[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "setParcelsAccessRights",
    values: [
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<BigNumberish>[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "setParcelsAccessRights(uint256[],uint256[],uint256[])",
    values: [
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<BigNumberish>[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "verifyAccessRight",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "verifyAccessRight(uint256,uint256,uint256,address)",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "batchGetDistrictParcels",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "batchGetDistrictParcels(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "checkCoordinates",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "checkCoordinates(uint256,uint256,uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getAltarId", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getAltarId(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getParcelInfo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getParcelInfo(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getParcelUpgradeQueueCapacity",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getParcelUpgradeQueueCapacity(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getParcelUpgradeQueueLength",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getParcelUpgradeQueueLength(uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getParcelsAccessRights",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getParcelsAccessRights(uint256[],uint256[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getParcelsAccessRightsWhitelistIds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getParcelsAccessRightsWhitelistIds(uint256[],uint256[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "maxSupply", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "maxSupply()",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "resyncParcel",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "resyncParcel(uint256[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setAltarId", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setAltarId(uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setGameActive",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setGameActive(bool)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setParcelsAccessRightWithWhitelists",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setParcelsAccessRightWithWhitelists(uint256[],uint256[],uint256[],uint32[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setParcelsAccessRights",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setParcelsAccessRights(uint256[],uint256[],uint256[])",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "verifyAccessRight",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "verifyAccessRight(uint256,uint256,uint256,address)",
    data: BytesLike
  ): Result;

  events: {
    "ParcelAccessRightSet(uint256,uint256,uint256)": EventFragment;
    "ParcelWhitelistSet(uint256,uint256,uint256)": EventFragment;
    "ResyncParcel(uint256)": EventFragment;
    "SetAltarId(uint256,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "ParcelAccessRightSet"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ParcelAccessRightSet(uint256,uint256,uint256)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ParcelWhitelistSet"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "ParcelWhitelistSet(uint256,uint256,uint256)"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ResyncParcel"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ResyncParcel(uint256)"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SetAltarId"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "SetAltarId(uint256,uint256)"
  ): EventFragment;
}

export interface ParcelAccessRightSetEventObject {
  _realmId: BigNumber;
  _actionRight: BigNumber;
  _accessRight: BigNumber;
}
export type ParcelAccessRightSetEvent = TypedEvent<
  [BigNumber, BigNumber, BigNumber],
  ParcelAccessRightSetEventObject
>;

export type ParcelAccessRightSetEventFilter =
  TypedEventFilter<ParcelAccessRightSetEvent>;

export interface ParcelWhitelistSetEventObject {
  _realmId: BigNumber;
  _actionRight: BigNumber;
  _whitelistId: BigNumber;
}
export type ParcelWhitelistSetEvent = TypedEvent<
  [BigNumber, BigNumber, BigNumber],
  ParcelWhitelistSetEventObject
>;

export type ParcelWhitelistSetEventFilter =
  TypedEventFilter<ParcelWhitelistSetEvent>;

export interface ResyncParcelEventObject {
  _realmId: BigNumber;
}
export type ResyncParcelEvent = TypedEvent<
  [BigNumber],
  ResyncParcelEventObject
>;

export type ResyncParcelEventFilter = TypedEventFilter<ResyncParcelEvent>;

export interface SetAltarIdEventObject {
  _realmId: BigNumber;
  _altarId: BigNumber;
}
export type SetAltarIdEvent = TypedEvent<
  [BigNumber, BigNumber],
  SetAltarIdEventObject
>;

export type SetAltarIdEventFilter = TypedEventFilter<SetAltarIdEvent>;

export interface RealmGettersAndSettersFacet extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: RealmGettersAndSettersFacetInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    batchGetDistrictParcels(
      _owner: PromiseOrValue<string>,
      _district: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    "batchGetDistrictParcels(address,uint256)"(
      _owner: PromiseOrValue<string>,
      _district: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    checkCoordinates(
      _realmId: PromiseOrValue<BigNumberish>,
      _coordinateX: PromiseOrValue<BigNumberish>,
      _coordinateY: PromiseOrValue<BigNumberish>,
      _installationId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[void]>;

    "checkCoordinates(uint256,uint256,uint256,uint256)"(
      _realmId: PromiseOrValue<BigNumberish>,
      _coordinateX: PromiseOrValue<BigNumberish>,
      _coordinateY: PromiseOrValue<BigNumberish>,
      _installationId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[void]>;

    getAltarId(
      _parcelId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getAltarId(uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getParcelInfo(
      _realmId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [RealmGettersAndSettersFacet.ParcelOutputStructOutput] & {
        output_: RealmGettersAndSettersFacet.ParcelOutputStructOutput;
      }
    >;

    "getParcelInfo(uint256)"(
      _realmId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [RealmGettersAndSettersFacet.ParcelOutputStructOutput] & {
        output_: RealmGettersAndSettersFacet.ParcelOutputStructOutput;
      }
    >;

    getParcelUpgradeQueueCapacity(
      _parcelId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getParcelUpgradeQueueCapacity(uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getParcelUpgradeQueueLength(
      _parcelId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getParcelUpgradeQueueLength(uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getParcelsAccessRights(
      _parcelIds: PromiseOrValue<BigNumberish>[],
      _actionRights: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[]] & { output_: BigNumber[] }>;

    "getParcelsAccessRights(uint256[],uint256[])"(
      _parcelIds: PromiseOrValue<BigNumberish>[],
      _actionRights: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[]] & { output_: BigNumber[] }>;

    getParcelsAccessRightsWhitelistIds(
      _parcelIds: PromiseOrValue<BigNumberish>[],
      _actionRights: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[]] & { output_: BigNumber[] }>;

    "getParcelsAccessRightsWhitelistIds(uint256[],uint256[])"(
      _parcelIds: PromiseOrValue<BigNumberish>[],
      _actionRights: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[]] & { output_: BigNumber[] }>;

    maxSupply(overrides?: CallOverrides): Promise<[BigNumber]>;

    "maxSupply()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    resyncParcel(
      _tokenIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "resyncParcel(uint256[])"(
      _tokenIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setAltarId(
      _parcelId: PromiseOrValue<BigNumberish>,
      _altarId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "setAltarId(uint256,uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      _altarId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setGameActive(
      _gameActive: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "setGameActive(bool)"(
      _gameActive: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setParcelsAccessRightWithWhitelists(
      _realmIds: PromiseOrValue<BigNumberish>[],
      _actionRights: PromiseOrValue<BigNumberish>[],
      _accessRights: PromiseOrValue<BigNumberish>[],
      _whitelistIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "setParcelsAccessRightWithWhitelists(uint256[],uint256[],uint256[],uint32[])"(
      _realmIds: PromiseOrValue<BigNumberish>[],
      _actionRights: PromiseOrValue<BigNumberish>[],
      _accessRights: PromiseOrValue<BigNumberish>[],
      _whitelistIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setParcelsAccessRights(
      _realmIds: PromiseOrValue<BigNumberish>[],
      _actionRights: PromiseOrValue<BigNumberish>[],
      _accessRights: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "setParcelsAccessRights(uint256[],uint256[],uint256[])"(
      _realmIds: PromiseOrValue<BigNumberish>[],
      _actionRights: PromiseOrValue<BigNumberish>[],
      _accessRights: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    verifyAccessRight(
      _realmId: PromiseOrValue<BigNumberish>,
      _gotchiId: PromiseOrValue<BigNumberish>,
      _actionRight: PromiseOrValue<BigNumberish>,
      _sender: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[void]>;

    "verifyAccessRight(uint256,uint256,uint256,address)"(
      _realmId: PromiseOrValue<BigNumberish>,
      _gotchiId: PromiseOrValue<BigNumberish>,
      _actionRight: PromiseOrValue<BigNumberish>,
      _sender: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<[void]>;
  };

  batchGetDistrictParcels(
    _owner: PromiseOrValue<string>,
    _district: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  "batchGetDistrictParcels(address,uint256)"(
    _owner: PromiseOrValue<string>,
    _district: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  checkCoordinates(
    _realmId: PromiseOrValue<BigNumberish>,
    _coordinateX: PromiseOrValue<BigNumberish>,
    _coordinateY: PromiseOrValue<BigNumberish>,
    _installationId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<void>;

  "checkCoordinates(uint256,uint256,uint256,uint256)"(
    _realmId: PromiseOrValue<BigNumberish>,
    _coordinateX: PromiseOrValue<BigNumberish>,
    _coordinateY: PromiseOrValue<BigNumberish>,
    _installationId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<void>;

  getAltarId(
    _parcelId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getAltarId(uint256)"(
    _parcelId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getParcelInfo(
    _realmId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<RealmGettersAndSettersFacet.ParcelOutputStructOutput>;

  "getParcelInfo(uint256)"(
    _realmId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<RealmGettersAndSettersFacet.ParcelOutputStructOutput>;

  getParcelUpgradeQueueCapacity(
    _parcelId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getParcelUpgradeQueueCapacity(uint256)"(
    _parcelId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getParcelUpgradeQueueLength(
    _parcelId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getParcelUpgradeQueueLength(uint256)"(
    _parcelId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getParcelsAccessRights(
    _parcelIds: PromiseOrValue<BigNumberish>[],
    _actionRights: PromiseOrValue<BigNumberish>[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  "getParcelsAccessRights(uint256[],uint256[])"(
    _parcelIds: PromiseOrValue<BigNumberish>[],
    _actionRights: PromiseOrValue<BigNumberish>[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  getParcelsAccessRightsWhitelistIds(
    _parcelIds: PromiseOrValue<BigNumberish>[],
    _actionRights: PromiseOrValue<BigNumberish>[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  "getParcelsAccessRightsWhitelistIds(uint256[],uint256[])"(
    _parcelIds: PromiseOrValue<BigNumberish>[],
    _actionRights: PromiseOrValue<BigNumberish>[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  maxSupply(overrides?: CallOverrides): Promise<BigNumber>;

  "maxSupply()"(overrides?: CallOverrides): Promise<BigNumber>;

  resyncParcel(
    _tokenIds: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "resyncParcel(uint256[])"(
    _tokenIds: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setAltarId(
    _parcelId: PromiseOrValue<BigNumberish>,
    _altarId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "setAltarId(uint256,uint256)"(
    _parcelId: PromiseOrValue<BigNumberish>,
    _altarId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setGameActive(
    _gameActive: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "setGameActive(bool)"(
    _gameActive: PromiseOrValue<boolean>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setParcelsAccessRightWithWhitelists(
    _realmIds: PromiseOrValue<BigNumberish>[],
    _actionRights: PromiseOrValue<BigNumberish>[],
    _accessRights: PromiseOrValue<BigNumberish>[],
    _whitelistIds: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "setParcelsAccessRightWithWhitelists(uint256[],uint256[],uint256[],uint32[])"(
    _realmIds: PromiseOrValue<BigNumberish>[],
    _actionRights: PromiseOrValue<BigNumberish>[],
    _accessRights: PromiseOrValue<BigNumberish>[],
    _whitelistIds: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setParcelsAccessRights(
    _realmIds: PromiseOrValue<BigNumberish>[],
    _actionRights: PromiseOrValue<BigNumberish>[],
    _accessRights: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "setParcelsAccessRights(uint256[],uint256[],uint256[])"(
    _realmIds: PromiseOrValue<BigNumberish>[],
    _actionRights: PromiseOrValue<BigNumberish>[],
    _accessRights: PromiseOrValue<BigNumberish>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  verifyAccessRight(
    _realmId: PromiseOrValue<BigNumberish>,
    _gotchiId: PromiseOrValue<BigNumberish>,
    _actionRight: PromiseOrValue<BigNumberish>,
    _sender: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<void>;

  "verifyAccessRight(uint256,uint256,uint256,address)"(
    _realmId: PromiseOrValue<BigNumberish>,
    _gotchiId: PromiseOrValue<BigNumberish>,
    _actionRight: PromiseOrValue<BigNumberish>,
    _sender: PromiseOrValue<string>,
    overrides?: CallOverrides
  ): Promise<void>;

  callStatic: {
    batchGetDistrictParcels(
      _owner: PromiseOrValue<string>,
      _district: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    "batchGetDistrictParcels(address,uint256)"(
      _owner: PromiseOrValue<string>,
      _district: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    checkCoordinates(
      _realmId: PromiseOrValue<BigNumberish>,
      _coordinateX: PromiseOrValue<BigNumberish>,
      _coordinateY: PromiseOrValue<BigNumberish>,
      _installationId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "checkCoordinates(uint256,uint256,uint256,uint256)"(
      _realmId: PromiseOrValue<BigNumberish>,
      _coordinateX: PromiseOrValue<BigNumberish>,
      _coordinateY: PromiseOrValue<BigNumberish>,
      _installationId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    getAltarId(
      _parcelId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAltarId(uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getParcelInfo(
      _realmId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<RealmGettersAndSettersFacet.ParcelOutputStructOutput>;

    "getParcelInfo(uint256)"(
      _realmId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<RealmGettersAndSettersFacet.ParcelOutputStructOutput>;

    getParcelUpgradeQueueCapacity(
      _parcelId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getParcelUpgradeQueueCapacity(uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getParcelUpgradeQueueLength(
      _parcelId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getParcelUpgradeQueueLength(uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getParcelsAccessRights(
      _parcelIds: PromiseOrValue<BigNumberish>[],
      _actionRights: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    "getParcelsAccessRights(uint256[],uint256[])"(
      _parcelIds: PromiseOrValue<BigNumberish>[],
      _actionRights: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    getParcelsAccessRightsWhitelistIds(
      _parcelIds: PromiseOrValue<BigNumberish>[],
      _actionRights: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    "getParcelsAccessRightsWhitelistIds(uint256[],uint256[])"(
      _parcelIds: PromiseOrValue<BigNumberish>[],
      _actionRights: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    maxSupply(overrides?: CallOverrides): Promise<BigNumber>;

    "maxSupply()"(overrides?: CallOverrides): Promise<BigNumber>;

    resyncParcel(
      _tokenIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    "resyncParcel(uint256[])"(
      _tokenIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    setAltarId(
      _parcelId: PromiseOrValue<BigNumberish>,
      _altarId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    "setAltarId(uint256,uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      _altarId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    setGameActive(
      _gameActive: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<void>;

    "setGameActive(bool)"(
      _gameActive: PromiseOrValue<boolean>,
      overrides?: CallOverrides
    ): Promise<void>;

    setParcelsAccessRightWithWhitelists(
      _realmIds: PromiseOrValue<BigNumberish>[],
      _actionRights: PromiseOrValue<BigNumberish>[],
      _accessRights: PromiseOrValue<BigNumberish>[],
      _whitelistIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    "setParcelsAccessRightWithWhitelists(uint256[],uint256[],uint256[],uint32[])"(
      _realmIds: PromiseOrValue<BigNumberish>[],
      _actionRights: PromiseOrValue<BigNumberish>[],
      _accessRights: PromiseOrValue<BigNumberish>[],
      _whitelistIds: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    setParcelsAccessRights(
      _realmIds: PromiseOrValue<BigNumberish>[],
      _actionRights: PromiseOrValue<BigNumberish>[],
      _accessRights: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    "setParcelsAccessRights(uint256[],uint256[],uint256[])"(
      _realmIds: PromiseOrValue<BigNumberish>[],
      _actionRights: PromiseOrValue<BigNumberish>[],
      _accessRights: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<void>;

    verifyAccessRight(
      _realmId: PromiseOrValue<BigNumberish>,
      _gotchiId: PromiseOrValue<BigNumberish>,
      _actionRight: PromiseOrValue<BigNumberish>,
      _sender: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    "verifyAccessRight(uint256,uint256,uint256,address)"(
      _realmId: PromiseOrValue<BigNumberish>,
      _gotchiId: PromiseOrValue<BigNumberish>,
      _actionRight: PromiseOrValue<BigNumberish>,
      _sender: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "ParcelAccessRightSet(uint256,uint256,uint256)"(
      _realmId?: null,
      _actionRight?: null,
      _accessRight?: null
    ): ParcelAccessRightSetEventFilter;
    ParcelAccessRightSet(
      _realmId?: null,
      _actionRight?: null,
      _accessRight?: null
    ): ParcelAccessRightSetEventFilter;

    "ParcelWhitelistSet(uint256,uint256,uint256)"(
      _realmId?: null,
      _actionRight?: null,
      _whitelistId?: null
    ): ParcelWhitelistSetEventFilter;
    ParcelWhitelistSet(
      _realmId?: null,
      _actionRight?: null,
      _whitelistId?: null
    ): ParcelWhitelistSetEventFilter;

    "ResyncParcel(uint256)"(_realmId?: null): ResyncParcelEventFilter;
    ResyncParcel(_realmId?: null): ResyncParcelEventFilter;

    "SetAltarId(uint256,uint256)"(
      _realmId?: null,
      _altarId?: null
    ): SetAltarIdEventFilter;
    SetAltarId(_realmId?: null, _altarId?: null): SetAltarIdEventFilter;
  };

  estimateGas: {
    batchGetDistrictParcels(
      _owner: PromiseOrValue<string>,
      _district: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "batchGetDistrictParcels(address,uint256)"(
      _owner: PromiseOrValue<string>,
      _district: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    checkCoordinates(
      _realmId: PromiseOrValue<BigNumberish>,
      _coordinateX: PromiseOrValue<BigNumberish>,
      _coordinateY: PromiseOrValue<BigNumberish>,
      _installationId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "checkCoordinates(uint256,uint256,uint256,uint256)"(
      _realmId: PromiseOrValue<BigNumberish>,
      _coordinateX: PromiseOrValue<BigNumberish>,
      _coordinateY: PromiseOrValue<BigNumberish>,
      _installationId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAltarId(
      _parcelId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getAltarId(uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getParcelInfo(
      _realmId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getParcelInfo(uint256)"(
      _realmId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getParcelUpgradeQueueCapacity(
      _parcelId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getParcelUpgradeQueueCapacity(uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getParcelUpgradeQueueLength(
      _parcelId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getParcelUpgradeQueueLength(uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getParcelsAccessRights(
      _parcelIds: PromiseOrValue<BigNumberish>[],
      _actionRights: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getParcelsAccessRights(uint256[],uint256[])"(
      _parcelIds: PromiseOrValue<BigNumberish>[],
      _actionRights: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getParcelsAccessRightsWhitelistIds(
      _parcelIds: PromiseOrValue<BigNumberish>[],
      _actionRights: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getParcelsAccessRightsWhitelistIds(uint256[],uint256[])"(
      _parcelIds: PromiseOrValue<BigNumberish>[],
      _actionRights: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    maxSupply(overrides?: CallOverrides): Promise<BigNumber>;

    "maxSupply()"(overrides?: CallOverrides): Promise<BigNumber>;

    resyncParcel(
      _tokenIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "resyncParcel(uint256[])"(
      _tokenIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setAltarId(
      _parcelId: PromiseOrValue<BigNumberish>,
      _altarId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "setAltarId(uint256,uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      _altarId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setGameActive(
      _gameActive: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "setGameActive(bool)"(
      _gameActive: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setParcelsAccessRightWithWhitelists(
      _realmIds: PromiseOrValue<BigNumberish>[],
      _actionRights: PromiseOrValue<BigNumberish>[],
      _accessRights: PromiseOrValue<BigNumberish>[],
      _whitelistIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "setParcelsAccessRightWithWhitelists(uint256[],uint256[],uint256[],uint32[])"(
      _realmIds: PromiseOrValue<BigNumberish>[],
      _actionRights: PromiseOrValue<BigNumberish>[],
      _accessRights: PromiseOrValue<BigNumberish>[],
      _whitelistIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setParcelsAccessRights(
      _realmIds: PromiseOrValue<BigNumberish>[],
      _actionRights: PromiseOrValue<BigNumberish>[],
      _accessRights: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "setParcelsAccessRights(uint256[],uint256[],uint256[])"(
      _realmIds: PromiseOrValue<BigNumberish>[],
      _actionRights: PromiseOrValue<BigNumberish>[],
      _accessRights: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    verifyAccessRight(
      _realmId: PromiseOrValue<BigNumberish>,
      _gotchiId: PromiseOrValue<BigNumberish>,
      _actionRight: PromiseOrValue<BigNumberish>,
      _sender: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "verifyAccessRight(uint256,uint256,uint256,address)"(
      _realmId: PromiseOrValue<BigNumberish>,
      _gotchiId: PromiseOrValue<BigNumberish>,
      _actionRight: PromiseOrValue<BigNumberish>,
      _sender: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    batchGetDistrictParcels(
      _owner: PromiseOrValue<string>,
      _district: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "batchGetDistrictParcels(address,uint256)"(
      _owner: PromiseOrValue<string>,
      _district: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    checkCoordinates(
      _realmId: PromiseOrValue<BigNumberish>,
      _coordinateX: PromiseOrValue<BigNumberish>,
      _coordinateY: PromiseOrValue<BigNumberish>,
      _installationId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "checkCoordinates(uint256,uint256,uint256,uint256)"(
      _realmId: PromiseOrValue<BigNumberish>,
      _coordinateX: PromiseOrValue<BigNumberish>,
      _coordinateY: PromiseOrValue<BigNumberish>,
      _installationId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAltarId(
      _parcelId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getAltarId(uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getParcelInfo(
      _realmId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getParcelInfo(uint256)"(
      _realmId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getParcelUpgradeQueueCapacity(
      _parcelId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getParcelUpgradeQueueCapacity(uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getParcelUpgradeQueueLength(
      _parcelId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getParcelUpgradeQueueLength(uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getParcelsAccessRights(
      _parcelIds: PromiseOrValue<BigNumberish>[],
      _actionRights: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getParcelsAccessRights(uint256[],uint256[])"(
      _parcelIds: PromiseOrValue<BigNumberish>[],
      _actionRights: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getParcelsAccessRightsWhitelistIds(
      _parcelIds: PromiseOrValue<BigNumberish>[],
      _actionRights: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getParcelsAccessRightsWhitelistIds(uint256[],uint256[])"(
      _parcelIds: PromiseOrValue<BigNumberish>[],
      _actionRights: PromiseOrValue<BigNumberish>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    maxSupply(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "maxSupply()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    resyncParcel(
      _tokenIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "resyncParcel(uint256[])"(
      _tokenIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setAltarId(
      _parcelId: PromiseOrValue<BigNumberish>,
      _altarId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "setAltarId(uint256,uint256)"(
      _parcelId: PromiseOrValue<BigNumberish>,
      _altarId: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setGameActive(
      _gameActive: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "setGameActive(bool)"(
      _gameActive: PromiseOrValue<boolean>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setParcelsAccessRightWithWhitelists(
      _realmIds: PromiseOrValue<BigNumberish>[],
      _actionRights: PromiseOrValue<BigNumberish>[],
      _accessRights: PromiseOrValue<BigNumberish>[],
      _whitelistIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "setParcelsAccessRightWithWhitelists(uint256[],uint256[],uint256[],uint32[])"(
      _realmIds: PromiseOrValue<BigNumberish>[],
      _actionRights: PromiseOrValue<BigNumberish>[],
      _accessRights: PromiseOrValue<BigNumberish>[],
      _whitelistIds: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setParcelsAccessRights(
      _realmIds: PromiseOrValue<BigNumberish>[],
      _actionRights: PromiseOrValue<BigNumberish>[],
      _accessRights: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "setParcelsAccessRights(uint256[],uint256[],uint256[])"(
      _realmIds: PromiseOrValue<BigNumberish>[],
      _actionRights: PromiseOrValue<BigNumberish>[],
      _accessRights: PromiseOrValue<BigNumberish>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    verifyAccessRight(
      _realmId: PromiseOrValue<BigNumberish>,
      _gotchiId: PromiseOrValue<BigNumberish>,
      _actionRight: PromiseOrValue<BigNumberish>,
      _sender: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "verifyAccessRight(uint256,uint256,uint256,address)"(
      _realmId: PromiseOrValue<BigNumberish>,
      _gotchiId: PromiseOrValue<BigNumberish>,
      _actionRight: PromiseOrValue<BigNumberish>,
      _sender: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
