/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../../../../common";

export interface NFTDisplayFacetInterface extends utils.Interface {
  functions: {
    "nftDisplayAllowed(address,uint256)": FunctionFragment;
    "toggleNftDisplayAllowed(address[],uint256[],bool[])": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "nftDisplayAllowed"
      | "nftDisplayAllowed(address,uint256)"
      | "toggleNftDisplayAllowed"
      | "toggleNftDisplayAllowed(address[],uint256[],bool[])"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "nftDisplayAllowed",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "nftDisplayAllowed(address,uint256)",
    values: [PromiseOrValue<string>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "toggleNftDisplayAllowed",
    values: [
      PromiseOrValue<string>[],
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<boolean>[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "toggleNftDisplayAllowed(address[],uint256[],bool[])",
    values: [
      PromiseOrValue<string>[],
      PromiseOrValue<BigNumberish>[],
      PromiseOrValue<boolean>[]
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "nftDisplayAllowed",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "nftDisplayAllowed(address,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "toggleNftDisplayAllowed",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "toggleNftDisplayAllowed(address[],uint256[],bool[])",
    data: BytesLike
  ): Result;

  events: {
    "NFTDisplayStatusUpdated(address,uint256,bool)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "NFTDisplayStatusUpdated"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "NFTDisplayStatusUpdated(address,uint256,bool)"
  ): EventFragment;
}

export interface NFTDisplayStatusUpdatedEventObject {
  _token: string;
  _chainId: BigNumber;
  _allowed: boolean;
}
export type NFTDisplayStatusUpdatedEvent = TypedEvent<
  [string, BigNumber, boolean],
  NFTDisplayStatusUpdatedEventObject
>;

export type NFTDisplayStatusUpdatedEventFilter =
  TypedEventFilter<NFTDisplayStatusUpdatedEvent>;

export interface NFTDisplayFacet extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: NFTDisplayFacetInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    nftDisplayAllowed(
      _token: PromiseOrValue<string>,
      _chainId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "nftDisplayAllowed(address,uint256)"(
      _token: PromiseOrValue<string>,
      _chainId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    toggleNftDisplayAllowed(
      _tokens: PromiseOrValue<string>[],
      _chainIds: PromiseOrValue<BigNumberish>[],
      _allow: PromiseOrValue<boolean>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    "toggleNftDisplayAllowed(address[],uint256[],bool[])"(
      _tokens: PromiseOrValue<string>[],
      _chainIds: PromiseOrValue<BigNumberish>[],
      _allow: PromiseOrValue<boolean>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  nftDisplayAllowed(
    _token: PromiseOrValue<string>,
    _chainId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "nftDisplayAllowed(address,uint256)"(
    _token: PromiseOrValue<string>,
    _chainId: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<boolean>;

  toggleNftDisplayAllowed(
    _tokens: PromiseOrValue<string>[],
    _chainIds: PromiseOrValue<BigNumberish>[],
    _allow: PromiseOrValue<boolean>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  "toggleNftDisplayAllowed(address[],uint256[],bool[])"(
    _tokens: PromiseOrValue<string>[],
    _chainIds: PromiseOrValue<BigNumberish>[],
    _allow: PromiseOrValue<boolean>[],
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    nftDisplayAllowed(
      _token: PromiseOrValue<string>,
      _chainId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "nftDisplayAllowed(address,uint256)"(
      _token: PromiseOrValue<string>,
      _chainId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<boolean>;

    toggleNftDisplayAllowed(
      _tokens: PromiseOrValue<string>[],
      _chainIds: PromiseOrValue<BigNumberish>[],
      _allow: PromiseOrValue<boolean>[],
      overrides?: CallOverrides
    ): Promise<void>;

    "toggleNftDisplayAllowed(address[],uint256[],bool[])"(
      _tokens: PromiseOrValue<string>[],
      _chainIds: PromiseOrValue<BigNumberish>[],
      _allow: PromiseOrValue<boolean>[],
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "NFTDisplayStatusUpdated(address,uint256,bool)"(
      _token?: null,
      _chainId?: null,
      _allowed?: null
    ): NFTDisplayStatusUpdatedEventFilter;
    NFTDisplayStatusUpdated(
      _token?: null,
      _chainId?: null,
      _allowed?: null
    ): NFTDisplayStatusUpdatedEventFilter;
  };

  estimateGas: {
    nftDisplayAllowed(
      _token: PromiseOrValue<string>,
      _chainId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "nftDisplayAllowed(address,uint256)"(
      _token: PromiseOrValue<string>,
      _chainId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    toggleNftDisplayAllowed(
      _tokens: PromiseOrValue<string>[],
      _chainIds: PromiseOrValue<BigNumberish>[],
      _allow: PromiseOrValue<boolean>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    "toggleNftDisplayAllowed(address[],uint256[],bool[])"(
      _tokens: PromiseOrValue<string>[],
      _chainIds: PromiseOrValue<BigNumberish>[],
      _allow: PromiseOrValue<boolean>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    nftDisplayAllowed(
      _token: PromiseOrValue<string>,
      _chainId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "nftDisplayAllowed(address,uint256)"(
      _token: PromiseOrValue<string>,
      _chainId: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    toggleNftDisplayAllowed(
      _tokens: PromiseOrValue<string>[],
      _chainIds: PromiseOrValue<BigNumberish>[],
      _allow: PromiseOrValue<boolean>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    "toggleNftDisplayAllowed(address[],uint256[],bool[])"(
      _tokens: PromiseOrValue<string>[],
      _chainIds: PromiseOrValue<BigNumberish>[],
      _allow: PromiseOrValue<boolean>[],
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
