/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  AlchemicaToken,
  AlchemicaTokenInterface,
} from "../../../../../../src/contracts/aavegotchi-realm/contracts/Alchemica/AlchemicaToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_realmDiamond",
        type: "address",
      },
      {
        internalType: "address",
        name: "_gameplayVestingContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "_ecosystemVestingContract",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "realmDiamond",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "recoverERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newRealmDiamond",
        type: "address",
      },
    ],
    name: "updateRealmDiamond",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611888806100206000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806370a08231116100c3578063a457c2d71161007c578063a457c2d7146102ae578063a9059cbb146102c1578063d139e180146102d4578063d505accf146102e7578063dd62ed3e146102fa578063f2fde38b1461030d57600080fd5b806370a082311461023e578063715018a6146102675780637ecebe001461026f5780638980f11f146102825780638da5cb5b1461029557806395d89b41146102a657600080fd5b8063313ce56711610115578063313ce567146101e4578063355274ea146101f35780633644e515146101fb578063395093511461020357806340c10f19146102165780636ef7626c1461022b57600080fd5b806306fdde0314610152578063095ea7b31461017057806318160ddd1461019357806323b872dd146101a55780632cdf5685146101b8575b600080fd5b61015a610320565b60405161016791906114c1565b60405180910390f35b61018361017e366004611532565b6103b2565b6040519015158152602001610167565b6067545b604051908152602001610167565b6101836101b336600461155c565b6103ca565b610131546101cc906001600160a01b031681565b6040516001600160a01b039091168152602001610167565b60405160128152602001610167565b609754610197565b6101976103ee565b610183610211366004611532565b6103fd565b610229610224366004611532565b61041f565b005b6102296102393660046115e1565b610481565b61019761024c36600461168b565b6001600160a01b031660009081526065602052604090205490565b6102296106a5565b61019761027d36600461168b565b6106b9565b610229610290366004611532565b6106d9565b6033546001600160a01b03166101cc565b61015a610763565b6101836102bc366004611532565b610772565b6101836102cf366004611532565b6107ed565b6102296102e236600461168b565b6107fb565b6102296102f53660046116ad565b610826565b610197610308366004611720565b61098a565b61022961031b36600461168b565b6109b5565b60606068805461032f90611753565b80601f016020809104026020016040519081016040528092919081815260200182805461035b90611753565b80156103a85780601f1061037d576101008083540402835291602001916103a8565b820191906000526020600020905b81548152906001019060200180831161038b57829003601f168201915b5050505050905090565b6000336103c0818585610a2e565b5060019392505050565b6000336103d8858285610b52565b6103e3858585610bcc565b506001949350505050565b60006103f8610d77565b905090565b6000336103c0818585610410838361098a565b61041a9190611787565b610a2e565b610131546001600160a01b031633146104735760405162461bcd60e51b815260206004820152601160248201527013db9b1e481499585b1b511a585b5bdb99607a1b60448201526064015b60405180910390fd5b61047d8282610df2565b5050565b600054610100900460ff16158080156104a15750600054600160ff909116105b806104bb5750303b1580156104bb575060005460ff166001145b61051e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161046a565b6000805460ff191660011790558015610541576000805461ff0019166101001790555b610549610dfc565b610551610e23565b6105c489898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080516020601f8d018190048102820181019092528b815292508b91508a9081908401838280828437600092019190915250610e5392505050565b6105cd85610ea1565b61060c89898080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610f1592505050565b610615846109b5565b61013180546001600160a01b0319166001600160a01b03861617905561064583610640600a886117ad565b610df2565b61065482610640600a886117ad565b801561069a576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050505050565b6106ad610f5f565b6106b76000610fb9565b565b6001600160a01b038116600090815260fe60205260408120545b92915050565b60405163a9059cbb60e01b8152736fb7e0aafba16396ad6c1046027717bca25f821f6004820152602481018290526001600160a01b0383169063a9059cbb906044016020604051808303816000875af115801561073a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075e91906117cf565b505050565b60606069805461032f90611753565b60003381610780828661098a565b9050838110156107e05760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161046a565b6103e38286868403610a2e565b6000336103c0818585610bcc565b610803610f5f565b61013180546001600160a01b0319166001600160a01b0392909216919091179055565b834211156108765760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015260640161046a565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886108a58c61100b565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061090082611033565b9050600061091082878787611081565b9050896001600160a01b0316816001600160a01b0316146109735760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015260640161046a565b61097e8a8a8a610a2e565b50505050505050505050565b6001600160a01b03918216600090815260666020908152604080832093909416825291909152205490565b6109bd610f5f565b6001600160a01b038116610a225760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161046a565b610a2b81610fb9565b50565b6001600160a01b038316610a905760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161046a565b6001600160a01b038216610af15760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161046a565b6001600160a01b0383811660008181526066602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610b5e848461098a565b90506000198114610bc65781811015610bb95760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161046a565b610bc68484848403610a2e565b50505050565b6001600160a01b038316610c305760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161046a565b6001600160a01b038216610c925760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161046a565b6001600160a01b03831660009081526065602052604090205481811015610d0a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161046a565b6001600160a01b0380851660008181526065602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610d6a9086815260200190565b60405180910390a3610bc6565b60006103f87f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f610da660ca5490565b60cb546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b61047d82826110a9565b600054610100900460ff166106b75760405162461bcd60e51b815260040161046a906117f1565b600054610100900460ff16610e4a5760405162461bcd60e51b815260040161046a906117f1565b6106b733610fb9565b600054610100900460ff16610e7a5760405162461bcd60e51b815260040161046a906117f1565b8151610e8d906068906020850190611428565b50805161075e906069906020840190611428565b600054610100900460ff16610ec85760405162461bcd60e51b815260040161046a906117f1565b60008111610f105760405162461bcd60e51b8152602060048201526015602482015274045524332304361707065643a20636170206973203605c1b604482015260640161046a565b609755565b600054610100900460ff16610f3c5760405162461bcd60e51b815260040161046a906117f1565b610a2b81604051806040016040528060018152602001603160f81b815250611118565b6033546001600160a01b031633146106b75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161046a565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038116600090815260fe602052604090208054600181018255905b50919050565b60006106d3611040610d77565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b600080600061109287878787611159565b9150915061109f8161121d565b5095945050505050565b609754816110b660675490565b6110c09190611787565b111561110e5760405162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a2063617020657863656564656400000000000000604482015260640161046a565b61047d8282611367565b600054610100900460ff1661113f5760405162461bcd60e51b815260040161046a906117f1565b81516020928301208151919092012060ca9190915560cb55565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156111905750600090506003611214565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156111e4573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661120d57600060019250925050611214565b9150600090505b94509492505050565b60008160048111156112315761123161183c565b036112395750565b600181600481111561124d5761124d61183c565b0361129a5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161046a565b60028160048111156112ae576112ae61183c565b036112fb5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161046a565b600381600481111561130f5761130f61183c565b03610a2b5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161046a565b6001600160a01b0382166113bd5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161046a565b80606760008282546113cf9190611787565b90915550506001600160a01b0382166000818152606560209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b82805461143490611753565b90600052602060002090601f016020900481019282611456576000855561149c565b82601f1061146f57805160ff191683800117855561149c565b8280016001018555821561149c579182015b8281111561149c578251825591602001919060010190611481565b506114a89291506114ac565b5090565b5b808211156114a857600081556001016114ad565b600060208083528351808285015260005b818110156114ee578581018301518582016040015282016114d2565b81811115611500576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461152d57600080fd5b919050565b6000806040838503121561154557600080fd5b61154e83611516565b946020939093013593505050565b60008060006060848603121561157157600080fd5b61157a84611516565b925061158860208501611516565b9150604084013590509250925092565b60008083601f8401126115aa57600080fd5b50813567ffffffffffffffff8111156115c257600080fd5b6020830191508360208285010111156115da57600080fd5b9250929050565b60008060008060008060008060c0898b0312156115fd57600080fd5b883567ffffffffffffffff8082111561161557600080fd5b6116218c838d01611598565b909a50985060208b013591508082111561163a57600080fd5b506116478b828c01611598565b9097509550506040890135935061166060608a01611516565b925061166e60808a01611516565b915061167c60a08a01611516565b90509295985092959890939650565b60006020828403121561169d57600080fd5b6116a682611516565b9392505050565b600080600080600080600060e0888a0312156116c857600080fd5b6116d188611516565b96506116df60208901611516565b95506040880135945060608801359350608088013560ff8116811461170357600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561173357600080fd5b61173c83611516565b915061174a60208401611516565b90509250929050565b600181811c9082168061176757607f821691505b60208210810361102d57634e487b7160e01b600052602260045260246000fd5b600082198211156117a857634e487b7160e01b600052601160045260246000fd5b500190565b6000826117ca57634e487b7160e01b600052601260045260246000fd5b500490565b6000602082840312156117e157600080fd5b815180151581146116a657600080fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220a53cff9cf7883856cbab18894b6b7ec030b3c0c6917102611961851c277bef2464736f6c634300080d0033";

type AlchemicaTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AlchemicaTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AlchemicaToken__factory extends ContractFactory {
  constructor(...args: AlchemicaTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AlchemicaToken> {
    return super.deploy(overrides || {}) as Promise<AlchemicaToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AlchemicaToken {
    return super.attach(address) as AlchemicaToken;
  }
  override connect(signer: Signer): AlchemicaToken__factory {
    return super.connect(signer) as AlchemicaToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AlchemicaTokenInterface {
    return new utils.Interface(_abi) as AlchemicaTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AlchemicaToken {
    return new Contract(address, _abi, signerOrProvider) as AlchemicaToken;
  }
}
