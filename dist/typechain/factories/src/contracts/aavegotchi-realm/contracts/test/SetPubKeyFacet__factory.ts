/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  SetPubKeyFacet,
  SetPubKeyFacetInterface,
} from "../../../../../../src/contracts/aavegotchi-realm/contracts/test/SetPubKeyFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_newPubKey",
        type: "bytes",
      },
    ],
    name: "setPubKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061022d806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e32d291314610030575b600080fd5b61004361003e36600461010b565b610045565b005b805161005890602f90602084019061005c565b5050565b828054610068906101bc565b90600052602060002090601f01602090048101928261008a57600085556100d0565b82601f106100a357805160ff19168380011785556100d0565b828001600101855582156100d0579182015b828111156100d05782518255916020019190600101906100b5565b506100dc9291506100e0565b5090565b5b808211156100dc57600081556001016100e1565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561011d57600080fd5b813567ffffffffffffffff8082111561013557600080fd5b818401915084601f83011261014957600080fd5b81358181111561015b5761015b6100f5565b604051601f8201601f19908116603f01168101908382118183101715610183576101836100f5565b8160405282815287602084870101111561019c57600080fd5b826020860160208301376000928101602001929092525095945050505050565b600181811c908216806101d057607f821691505b602082108114156101f157634e487b7160e01b600052602260045260246000fd5b5091905056fea264697066735822122035579c795dda0173262338120dd05eca2b60c19b7f450f940eba4f37c4a1058764736f6c63430008090033";

type SetPubKeyFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SetPubKeyFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SetPubKeyFacet__factory extends ContractFactory {
  constructor(...args: SetPubKeyFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SetPubKeyFacet> {
    return super.deploy(overrides || {}) as Promise<SetPubKeyFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SetPubKeyFacet {
    return super.attach(address) as SetPubKeyFacet;
  }
  override connect(signer: Signer): SetPubKeyFacet__factory {
    return super.connect(signer) as SetPubKeyFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SetPubKeyFacetInterface {
    return new utils.Interface(_abi) as SetPubKeyFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SetPubKeyFacet {
    return new Contract(address, _abi, signerOrProvider) as SetPubKeyFacet;
  }
}
