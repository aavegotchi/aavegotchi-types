/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ReceiptToken,
  ReceiptTokenInterface,
} from "../../../../../src/contracts/ghst-staking/contracts/ReceiptToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_minter",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "remaining_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success_",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newMinter",
        type: "address",
      },
    ],
    name: "setMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000e7638038062000e768339810160408190526200003491620001cb565b600380546001600160a01b0319166001600160a01b03851617905581516200006490600490602085019062000084565b5080516200007a90600590602084019062000084565b5050505062000251565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620000bc576000855562000107565b82601f10620000d757805160ff191683800117855562000107565b8280016001018555821562000107579182015b8281111562000107578251825591602001919060010190620000ea565b506200011592915062000119565b5090565b5b808211156200011557600081556001016200011a565b600082601f83011262000141578081fd5b81516001600160401b03808211156200015657fe5b6040516020601f8401601f19168201810183811183821017156200017657fe5b60405283825285840181018710156200018d578485fd5b8492505b83831015620001b0578583018101518284018201529182019162000191565b83831115620001c157848185840101525b5095945050505050565b600080600060608486031215620001e0578283fd5b83516001600160a01b0381168114620001f7578384fd5b60208501519093506001600160401b038082111562000214578384fd5b620002228783880162000130565b9350604086015191508082111562000238578283fd5b50620002478682870162000130565b9150509250925092565b610c1580620002616000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806340c10f1911610097578063a457c2d711610066578063a457c2d7146101e0578063a9059cbb146101f3578063dd62ed3e14610206578063fca3b5aa14610219576100f5565b806340c10f191461019d57806370a08231146101b257806395d89b41146101c55780639dc29fac146101cd576100f5565b806318160ddd116100d357806318160ddd1461014d57806323b872dd14610162578063313ce56714610175578063395093511461018a576100f5565b806306fdde03146100fa5780630754617214610118578063095ea7b31461012d575b600080fd5b61010261022c565b60405161010f919061093f565b60405180910390f35b6101206102c2565b60405161010f9190610920565b61014061013b3660046108f7565b6102d1565b60405161010f9190610934565b610155610329565b60405161010f9190610b88565b6101406101703660046108bc565b61032f565b61017d61047b565b60405161010f9190610b91565b6101406101983660046108f7565b610480565b6101b06101ab3660046108f7565b61050f565b005b6101556101c0366004610869565b610589565b6101026105a4565b6101b06101db3660046108f7565b610605565b6101406101ee3660046108f7565b6106b8565b6101406102013660046108f7565b61075b565b61015561021436600461088a565b6107d6565b6101b0610227366004610869565b610801565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156102b85780601f1061028d576101008083540402835291602001916102b8565b820191906000526020600020905b81548152906001019060200180831161029b57829003601f168201915b5050505050905090565b6003546001600160a01b031690565b3360008181526002602090815260408083206001600160a01b03871680855292528083208590555191929091600080516020610bc083398151915290610318908690610b88565b60405180910390a350600192915050565b60005490565b6001600160a01b038316600081815260016020526040812054909133146103fc576001600160a01b03851660009081526002602090815260408083203384529091529020548381101561039d5760405162461bcd60e51b815260040161039490610b05565b60405180910390fd5b60001981146103fa576001600160a01b038616600081815260026020908152604080832033808552925291829020878503908190559151909291600080516020610bc0833981519152916103f19190610b88565b60405180910390a35b505b8281101561041c5760405162461bcd60e51b8152600401610394906109c9565b6001600160a01b038086166000818152600160205260408082208786039055928716808252908390208054870190559151600080516020610ba083398151915290610468908790610b88565b60405180910390a3506001949350505050565b601290565b3360009081526002602090815260408083206001600160a01b0386168452909152812054828101818110156104c75760405162461bcd60e51b815260040161039490610a0c565b3360008181526002602090815260408083206001600160a01b038a168085529252918290208490559051909190600080516020610bc083398151915290610468908590610b88565b6003546001600160a01b031633146105395760405162461bcd60e51b815260040161039490610a8d565b6001600160a01b03821660009081526001602052604080822080548401905581548301825551339190600080516020610ba08339815191529061057d908590610b88565b60405180910390a35050565b6001600160a01b031660009081526001602052604090205490565b60058054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156102b85780601f1061028d576101008083540402835291602001916102b8565b6003546001600160a01b0316331461062f5760405162461bcd60e51b815260040161039490610b58565b6001600160a01b038216600090815260016020526040902054818110156106685760405162461bcd60e51b815260040161039490610a56565b6001600160a01b038316600090815260016020526040808220848403905581548490038255513390600080516020610ba0833981519152906106ab908690610b88565b60405180910390a3505050565b3360009081526002602090815260408083206001600160a01b0386168452909152812054828110156106fc5760405162461bcd60e51b815260040161039490610abd565b3360008181526002602090815260408083206001600160a01b03891680855292529182902093869003938490559051909190600080516020610bc083398151915290610749908590610b88565b60405180910390a35060019392505050565b336000908152600160205260408120548281101561078b5760405162461bcd60e51b8152600401610394906109c9565b3360008181526001602052604080822086850390556001600160a01b0387168083529181902080548701905551909190600080516020610ba083398151915290610749908790610b88565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6003546001600160a01b0316331461082b5760405162461bcd60e51b815260040161039490610992565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b80356001600160a01b038116811461086457600080fd5b919050565b60006020828403121561087a578081fd5b6108838261084d565b9392505050565b6000806040838503121561089c578081fd5b6108a58361084d565b91506108b36020840161084d565b90509250929050565b6000806000606084860312156108d0578081fd5b6108d98461084d565b92506108e76020850161084d565b9150604084013590509250925092565b60008060408385031215610909578182fd5b6109128361084d565b946020939093013593505050565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602080835283518082850152825b8181101561096b5785810183015185820160400152820161094f565b8181111561097c5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252601f908201527f4d757374206265206d696e74657220746f206368616e6765206d696e74657200604082015260600190565b60208082526023908201527f4e6f7420656e6f7567682052656365697074546f6b656e20746f207472616e736040820152623332b960e91b606082015260800190565b6020808252602a908201527f52656365697074546f6b656e20616c6c6f77616e636520696e637265617365206040820152691bdd995c999b1bddd95960b21b606082015260800190565b6020808252601f908201527f43616e2774206275726e206d6f7265207468616e20706572736f6e2068617300604082015260600190565b602080825260169082015275135d5cdd081899481b5a5b9d195c881d1bc81b5a5b9d60521b604082015260600190565b60208082526028908201527f52656365697074546f6b656e20616c6c6f77616e63652064656372656173656460408201526702062656c6f7720360c41b606082015260800190565b60208082526033908201527f416c6c6f77616e6365206e6f7420677265617420656e6f75676820746f20747260408201527230b739b332b9102932b1b2b4b83a2a37b5b2b760691b606082015260800190565b60208082526016908201527526bab9ba1031329036b4b73a32b9103a3790313ab93760511b604082015260600190565b90815260200190565b60ff9190911681526020019056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a26469706673582212203878a460220c3e630d43062a3d980b101776c3c8622e631dff6e96e562b7f7dc64736f6c63430007060033";

type ReceiptTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReceiptTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReceiptToken__factory extends ContractFactory {
  constructor(...args: ReceiptTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _minter: PromiseOrValue<string>,
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ReceiptToken> {
    return super.deploy(
      _minter,
      _name,
      _symbol,
      overrides || {}
    ) as Promise<ReceiptToken>;
  }
  override getDeployTransaction(
    _minter: PromiseOrValue<string>,
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_minter, _name, _symbol, overrides || {});
  }
  override attach(address: string): ReceiptToken {
    return super.attach(address) as ReceiptToken;
  }
  override connect(signer: Signer): ReceiptToken__factory {
    return super.connect(signer) as ReceiptToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReceiptTokenInterface {
    return new utils.Interface(_abi) as ReceiptTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReceiptToken {
    return new Contract(address, _abi, signerOrProvider) as ReceiptToken;
  }
}
