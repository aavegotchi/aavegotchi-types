/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  Airdrop,
  AirdropInterface,
} from "../../../../../src/contracts/ghst-staking/contracts/Airdrop";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable[]",
        name: "_receivers",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "airdropMatic",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_receivers",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "airdropToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610795806100206000396000f3fe6080604052600436106100295760003560e01c8063312cdafb1461002e57806363aedb3814610043575b600080fd5b61004161003c3660046105b7565b610063565b005b34801561004f57600080fd5b5061004161005e366004610537565b61019a565b82811461008b5760405162461bcd60e51b8152600401610082906106a4565b60405180910390fd5b60c88311156100ac5760405162461bcd60e51b8152600401610082906106f5565b60005b83811015610193576000808686848181106100c657fe5b90506020020160208101906100db9190610514565b6001600160a01b03168585858181106100f057fe5b9050602002013560405161010390610620565b60006040518083038185875af1925050503d8060008114610140576040519150601f19603f3d011682016040523d82523d6000602084013e610145565b606091505b5090925090508161018957805115610171578060405162461bcd60e51b81526004016100829190610623565b60405162461bcd60e51b815260040161008290610676565b50506001016100af565b5050505050565b8281146101b95760405162461bcd60e51b8152600401610082906106a4565b60c88311156101da5760405162461bcd60e51b8152600401610082906106f5565b60005b8381101561022b5761022386338787858181106101f657fe5b905060200201602081019061020b9190610514565b86868681811061021757fe5b90506020020135610233565b6001016101dd565b505050505050565b833b80610287576040805162461bcd60e51b815260206004820152601d60248201527f4c696245524332303a204164647265737320686173206e6f20636f6465000000604482015290519081900360640190fd5b604080516001600160a01b0386811660248301528581166044830152606480830186905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b178152925182516000948594938b169392918291908083835b6020831061030b5780518252601f1990920191602091820191016102ec565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461036d576040519150601f19603f3d011682016040523d82523d6000602084013e610372565b606091505b5091509150610381828261038a565b50505050505050565b81156103ee578051156103e9578080602001905160208110156103ac57600080fd5b50516103e95760405162461bcd60e51b815260040180806020018281038252602681526020018061073a6026913960400191505060405180910390fd5b6104c7565b80511561047a578060405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561043f578181015183820152602001610427565b50505050905090810190601f16801561046c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b6040805162461bcd60e51b815260206004820181905260248201527f4c696245524332303a20636f6e74726163742063616c6c207265766572746564604482015290519081900360640190fd5b5050565b60008083601f8401126104dc578182fd5b50813567ffffffffffffffff8111156104f3578182fd5b602083019150836020808302850101111561050d57600080fd5b9250929050565b600060208284031215610525578081fd5b813561053081610721565b9392505050565b60008060008060006060868803121561054e578081fd5b853561055981610721565b9450602086013567ffffffffffffffff80821115610575578283fd5b61058189838a016104cb565b90965094506040880135915080821115610599578283fd5b506105a6888289016104cb565b969995985093965092949392505050565b600080600080604085870312156105cc578384fd5b843567ffffffffffffffff808211156105e3578586fd5b6105ef888389016104cb565b90965094506020870135915080821115610607578384fd5b50610614878288016104cb565b95989497509550505050565b90565b6000602080835283518082850152825b8181101561064f57858101830151858201604001528201610633565b818111156106605783604083870101525b50601f01601f1916929092016040019392505050565b6020808252601490820152731cd95b991a5b99c813585d1a58c819985a5b195960621b604082015260600190565b60208082526031908201527f5f7265636569766572732e6c656e677468206e6f74207468652073616d6520616040820152700e640bec2dadeeadce8e65cd8cadccee8d607b1b606082015260800190565b602080825260129082015271546f6f206d616e79207472616e736665727360701b604082015260600190565b6001600160a01b038116811461073657600080fd5b5056fe4c696245524332303a20636f6e74726163742063616c6c2072657475726e65642066616c7365a2646970667358221220fb1c51fe53e4ce40bd9e2bb6a1437ef65b4776d706788bf3ed17c75df01f80b264736f6c63430007060033";

type AirdropConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AirdropConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Airdrop__factory extends ContractFactory {
  constructor(...args: AirdropConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Airdrop> {
    return super.deploy(overrides || {}) as Promise<Airdrop>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Airdrop {
    return super.attach(address) as Airdrop;
  }
  override connect(signer: Signer): Airdrop__factory {
    return super.connect(signer) as Airdrop__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AirdropInterface {
    return new utils.Interface(_abi) as AirdropInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Airdrop {
    return new Contract(address, _abi, signerOrProvider) as Airdrop;
  }
}
