/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../../common";
import type {
  ERC20,
  ERC20Interface,
} from "../../../../../../../src/contracts/ghst-staking/contracts/test/GHST/ERC20";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "approvedContracts",
    outputs: [
      {
        internalType: "address[]",
        name: "contracts_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506109c1806100206000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063395093511161008c578063a457c2d711610066578063a457c2d71461017f578063a9059cbb14610192578063dce86003146101a5578063dd62ed3e146101ba576100cf565b8063395093511461015957806370a082311461016c57806395d89b41146100d4576100cf565b806306fdde03146100d4578063095ea7b3146100f25780631249c58b1461011257806318160ddd1461011c57806323b872dd14610131578063313ce56714610144575b600080fd5b6100dc6101cd565b6040516100e991906107fb565b60405180910390f35b61010561010036600461077a565b6101ec565b6040516100e991906107f0565b61011a610242565b005b6101246102d6565b6040516100e99190610954565b61010561013f36600461073f565b6102f2565b61014c61046b565b6040516100e9919061095d565b61010561016736600461077a565b610470565b61012461017a3660046106ec565b6104fb565b61010561018d36600461077a565b610516565b6101056101a036600461077a565b6105b5565b6101ad610642565b6040516100e991906107a3565b6101246101c836600461070d565b6106a7565b604080518082019091526005815264045524332360dc1b602082015290565b336000818152602081815260408083206001600160a01b0387168085529252808320859055519192909160008051602061096c83398151915290610231908690610954565b60405180910390a350600192915050565b3360008181526001602052604080822080546b0cecb8f27f4200f3a00000009081019091556103ec80546bffffffffffffffffffffffff600160a01b80830482168501909116026001600160a01b03919091161790559051909291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906102cb908590610954565b60405180910390a350565b6103ec54600160a01b90046bffffffffffffffffffffffff1690565b6001600160a01b038316600081815260016020526040812054909133148061032857503360009081526003602052604090205415155b15610332576103da565b6001600160a01b0385166000908152602081815260408083203384529091529020548381101561037d5760405162461bcd60e51b8152600401610374906108d5565b60405180910390fd5b60001981146103d8576001600160a01b0386166000818152602081815260408083203380855292529182902087850390819055915190929160008051602061096c833981519152916103cf9190610954565b60405180910390a35b505b828110156103fa5760405162461bcd60e51b815260040161037490610894565b6001600160a01b0380861660008181526001602052604080822087860390559287168082529083902080548701905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610458908790610954565b60405180910390a3506001949350505050565b601290565b336000908152602081815260408083206001600160a01b0386168452909152812054828101818110156104b55760405162461bcd60e51b81526004016103749061090c565b336000818152602081815260408083206001600160a01b038a16808552925291829020849055905190919060008051602061096c83398151915290610458908590610954565b6001600160a01b031660009081526001602052604090205490565b336000908152602081815260408083206001600160a01b0386168452909152812054828110156105585760405162461bcd60e51b81526004016103749061084e565b336000818152602081815260408083206001600160a01b0389168085529252918290209386900393849055905190919060008051602061096c833981519152906105a3908590610954565b60405180910390a35060019392505050565b33600090815260016020526040812054828110156105e55760405162461bcd60e51b815260040161037490610894565b3360008181526001602052604080822086850390556001600160a01b03871680835291819020805487019055519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906105a3908790610954565b6060600060020180548060200260200160405190810160405280929190818152602001828054801561069d57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161067f575b5050505050905090565b6001600160a01b0391821660009081526020818152604080832093909416825291909152205490565b80356001600160a01b03811681146106e757600080fd5b919050565b6000602082840312156106fd578081fd5b610706826106d0565b9392505050565b6000806040838503121561071f578081fd5b610728836106d0565b9150610736602084016106d0565b90509250929050565b600080600060608486031215610753578081fd5b61075c846106d0565b925061076a602085016106d0565b9150604084013590509250925092565b6000806040838503121561078c578182fd5b610795836106d0565b946020939093013593505050565b6020808252825182820181905260009190848201906040850190845b818110156107e45783516001600160a01b0316835292840192918401916001016107bf565b50909695505050505050565b901515815260200190565b6000602080835283518082850152825b818110156108275785810183015185820160400152820161080b565b818111156108385783604083870101525b50601f01601f1916929092016040019392505050565b60208082526026908201527f4748535446616365743a20416c6c6f77616e63652064656372656173656420626040820152650656c6f7720360d41b606082015260800190565b60208082526021908201527f474853543a204e6f7420656e6f756768204748535420746f207472616e7366656040820152603960f91b606082015260800190565b6020808252601d908201527f474853543a204e6f7420616c6c6f77656420746f207472616e73666572000000604082015260600190565b60208082526028908201527f4748535446616365743a20416c6c6f77616e636520696e637265617365206f76604082015267195c999b1bddd95960c21b606082015260800190565b90815260200190565b60ff9190911681526020019056fe8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a2646970667358221220c981cca8a7d60580f13680afbb54b9e2a3287b4e5b2a1f0211d563a8c364bc6a64736f6c63430007060033";

type ERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20__factory extends ContractFactory {
  constructor(...args: ERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20> {
    return super.deploy(overrides || {}) as Promise<ERC20>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC20 {
    return super.attach(address) as ERC20;
  }
  override connect(signer: Signer): ERC20__factory {
    return super.connect(signer) as ERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20Interface {
    return new utils.Interface(_abi) as ERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC20 {
    return new Contract(address, _abi, signerOrProvider) as ERC20;
  }
}
