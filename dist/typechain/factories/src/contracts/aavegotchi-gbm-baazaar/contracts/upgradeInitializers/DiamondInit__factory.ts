/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  DiamondInit,
  DiamondInitInterface,
} from "../../../../../../src/contracts/aavegotchi-gbm-baazaar/contracts/upgradeInitializers/DiamondInit";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "backendPubKey",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "pixelcraft",
        type: "address",
      },
      {
        internalType: "address",
        name: "GHST",
        type: "address",
      },
      {
        internalType: "address",
        name: "GBM",
        type: "address",
      },
      {
        internalType: "address",
        name: "rarityFarming",
        type: "address",
      },
      {
        internalType: "address",
        name: "DAO",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506103d1806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633564d08114610030575b600080fd5b61004361003e36600461025e565b610045565b005b600080546001600160a01b03199081166001600160a01b03888116919091179092556004805482168784161790556002805482168684161790556003805482168584161790556001805490911691831691909117905585516100ae906009906020890190610193565b50507fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131f60205250507f699d9daa71b280d05a152715774afa0a81a312594b2d731d6b0b2552b7d6f69f8054600160ff1991821681179092557ff97e938d8af42f52387bb74b8b526fda8f184cc2aa534340a8d75a88fbecc77580548216831790557f65d510a5d8f7ef134ec444f7f34ee808c8eeb5177cdfd16be0c40fe1ab43369580548216831790556307f5828d60e41b6000527f5622121b47b8cd0120c4efe45dd5483242f54a3d49bd7679be565d47694918c380549091169091179055505050565b82805461019f90610361565b90600052602060002090601f0160209004810192826101c15760008555610207565b82601f106101da57805160ff1916838001178555610207565b82800160010185558215610207579182015b828111156102075782518255916020019190600101906101ec565b50610213929150610217565b5090565b5b808211156102135760008155600101610218565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b038116811461025957600080fd5b919050565b60008060008060008060c0878903121561027757600080fd5b863567ffffffffffffffff8082111561028f57600080fd5b818901915089601f8301126102a357600080fd5b8135818111156102b5576102b561022c565b604051601f8201601f19908116603f011681019083821181831017156102dd576102dd61022c565b816040528281528c60208487010111156102f657600080fd5b82602086016020830137600060208483010152809a50505050505061031d60208801610242565b945061032b60408801610242565b935061033960608801610242565b925061034760808801610242565b915061035560a08801610242565b90509295509295509295565b600181811c9082168061037557607f821691505b60208210810361039557634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212201c1487e71c9ba843d7b0a9eea4dca4ab1be74a2e31d2fa309faaf44ce76e52f664736f6c634300080d0033";

type DiamondInitConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiamondInitConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DiamondInit__factory extends ContractFactory {
  constructor(...args: DiamondInitConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DiamondInit> {
    return super.deploy(overrides || {}) as Promise<DiamondInit>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DiamondInit {
    return super.attach(address) as DiamondInit;
  }
  override connect(signer: Signer): DiamondInit__factory {
    return super.connect(signer) as DiamondInit__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondInitInterface {
    return new utils.Interface(_abi) as DiamondInitInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiamondInit {
    return new Contract(address, _abi, signerOrProvider) as DiamondInit;
  }
}
