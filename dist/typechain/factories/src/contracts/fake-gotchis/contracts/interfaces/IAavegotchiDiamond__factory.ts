/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IAavegotchiDiamond,
  IAavegotchiDiamondInterface,
} from "../../../../../../src/contracts/fake-gotchis/contracts/interfaces/IAavegotchiDiamond";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_tokenId",
        type: "uint32",
      },
    ],
    name: "isAavegotchiLent",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "tokenIdsOfOwner",
    outputs: [
      {
        internalType: "uint32[]",
        name: "tokenIds_",
        type: "uint32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IAavegotchiDiamond__factory {
  static readonly abi = _abi;
  static createInterface(): IAavegotchiDiamondInterface {
    return new utils.Interface(_abi) as IAavegotchiDiamondInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IAavegotchiDiamond {
    return new Contract(address, _abi, signerOrProvider) as IAavegotchiDiamond;
  }
}
