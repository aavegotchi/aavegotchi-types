/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../../common";
import type {
  FakeGotchisCardFacet,
  FakeGotchisCardFacetInterface,
} from "../../../../../../../src/contracts/fake-gotchis/contracts/FakeGotchisCardDiamond/facets/FakeGotchisCardFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_aavegotchiDiamond",
        type: "address",
      },
    ],
    name: "AavegotchiAddressUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_fakeGotchisNftDiamond",
        type: "address",
      },
    ],
    name: "FakeGotchisNftAddressUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "NewSeriesStarted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "bal_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "bals",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_cardOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_cardSeriesId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "approved_",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_to",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_aavegotchiDiamond",
        type: "address",
      },
    ],
    name: "setAavegotchiAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fakeGotchisNftDiamond",
        type: "address",
      },
    ],
    name: "setFakeGotchisNftAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "startNewSeries",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611f24806100206000396000f3fe608060405234801561001057600080fd5b50600436106100e95760003560e01c80637ab8678c1161008c578063e985e9c511610066578063e985e9c5146101fd578063f23a6e6114610249578063f242432a14610282578063f5298aca1461029557600080fd5b80637ab8678c146101c4578063a22cb465146101d7578063b5f0b7a0146101ea57600080fd5b80632eb2c2d6116100c85780632eb2c2d61461016b5780634e1273f41461017e57806351b4b0c31461019e57806355f804b3146101b157600080fd5b8062fdd58e146100ee5780630e89341c146101365780632c11295214610156575b600080fd5b6101236100fc366004611682565b6001600160a01b039091166000908152600660209081526040808320938352929052205490565b6040519081526020015b60405180910390f35b6101496101443660046116ac565b6102a8565b60405161012d9190611721565b61016961016436600461173b565b61039e565b005b6101696101793660046117e4565b6103fb565b61019161018c36600461189f565b610483565b60405161012d919061190b565b6101696101ac3660046116ac565b6105e7565b6101696101bf36600461194f565b6106c7565b6101696101d236600461173b565b610778565b6101696101e5366004611991565b6107ce565b6101696101f83660046119cd565b6108b9565b61023961020b366004611aa4565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b604051901515815260200161012d565b610269610257366004611ad7565b63f23a6e6160e01b9695505050505050565b6040516001600160e01b0319909116815260200161012d565b610169610290366004611ad7565b610a0e565b6101696102a3366004611b4f565b610aa5565b60025460609082106103015760405162461bcd60e51b815260206004820152601a60248201527f4647436172643a2043617264205f6964206e6f7420666f756e6400000000000060448201526064015b60405180910390fd5b6103986000600301805461031490611b82565b80601f016020809104026020016040519081016040528092919081815260200182805461034090611b82565b801561038d5780601f106103625761010080835404028352916020019161038d565b820191906000526020600020905b81548152906001019060200180831161037057829003601f168201915b505050505083610b0a565b92915050565b6103a6610c1d565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f5b4821055653d587d58dec5cef658666d351b8ef7ca63c44b3944bda30e5eb45906020015b60405180910390a150565b6000610405610ca6565b9050886001600160a01b0316816001600160a01b0316148061044c57506001600160a01b03808a1660009081526005602090815260408083209385168352929052205460ff165b6104685760405162461bcd60e51b81526004016102f890611bbc565b6104788989898989898989610d02565b505050505050505050565b60608382146104eb5760405162461bcd60e51b815260206004820152602e60248201527f4647436172643a205f6f776e657273206c656e677468206e6f742073616d652060448201526d0c2e640bed2c8e640d8cadccee8d60931b60648201526084016102f8565b8367ffffffffffffffff81111561050457610504611c0a565b60405190808252806020026020018201604052801561052d578160200160208202803683370190505b50905060005b848110156105de57600084848381811061054f5761054f611c20565b905060200201359050600087878481811061056c5761056c611c20565b9050602002016020810190610581919061173b565b6001600160a01b03811660009081526006602090815260408083208684529091529020548551919250908590859081106105bd576105bd611c20565b602002602001018181525050505080806105d690611c4c565b915050610533565b50949350505050565b6105ef610c1d565b600081116106515760405162461bcd60e51b815260206004820152602960248201527f4647436172643a204d617820616d6f756e74206d75737420626520677265617460448201526806572207468616e20360bc1b60648201526084016102f8565b6002546000818152600460205260409020829055610688610670610ca6565b60408051600081526020810190915283908590610fec565b610693816001611c65565b600255604051829082907fa70c4aa52a8cbdecd2cbd5771dafdfed45603b79beabb69f88fd9c294eb7bdde90600090a35050565b6106cf610c1d565b6106db600383836115cd565b5060005b60025481101561077357807f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b61074c85858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250879250610b0a915050565b6040516107599190611721565b60405180910390a28061076b81611c4c565b9150506106df565b505050565b610780610c1d565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f85ccc603dd847f57dfe0cb1f8e4db5dba4a1ee0b35de9ca03f1603d5b3841d82906020016103f0565b60006107d8610ca6565b9050826001600160a01b0316816001600160a01b03160361084c5760405162461bcd60e51b815260206004820152602860248201527f4647436172643a2073657474696e6720617070726f76616c20737461747573206044820152673337b91039b2b63360c11b60648201526084016102f8565b6001600160a01b03818116600081815260056020908152604080832094881680845294825291829020805460ff191687151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b60006108c3610ca6565b9050896001600160a01b0316816001600160a01b0316148061090a57506001600160a01b03808b1660009081526005602090815260408083209385168352929052205460ff165b6109265760405162461bcd60e51b81526004016102f890611bbc565b878414801561093457508584145b6109805760405162461bcd60e51b815260206004820152601d60248201527f4647436172643a204172726179206c656e677468206d69736d6174636800000060448201526064016102f8565b60005b88811015610a01576109ef8b8b8b848181106109a1576109a1611c20565b90506020020160208101906109b6919061173b565b8a8a858181106109c8576109c8611c20565b905060200201358989868181106109e1576109e1611c20565b9050602002013588886110ff565b806109f981611c4c565b915050610983565b5050505050505050505050565b6000610a18610ca6565b9050866001600160a01b0316816001600160a01b03161480610a5f57506001600160a01b0380881660009081526005602090815260408083209385168352929052205460ff165b80610a7257506001600160a01b03811630145b610a8e5760405162461bcd60e51b81526004016102f890611bbc565b610a9c8787878787876110ff565b50505050505050565b6001546001600160a01b03163314610aff5760405162461bcd60e51b815260206004820152601f60248201527f4c69624469616d6f6e643a204d757374206265204e4654206469616d6f6e640060448201526064016102f8565b6107738383836112fc565b60608082600003610b3d5783604051602001610b269190611c7d565b604051602081830303815290604052915050610398565b8260005b8115610b5557600101600a82049150610b41565b8067ffffffffffffffff811115610b6e57610b6e611c0a565b6040519080825280601f01601f191660200182016040528015610b98576020820181803683370190505b50925084915060001981015b8215610bef57600a830660300160f81b84828060019003935081518110610bcd57610bcd611c20565b60200101906001600160f81b031916908160001a905350600a83049250610ba4565b5050508381604051602001610c05929190611ca2565b60405160208183030381529060405291505092915050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c600401546001600160a01b03163314610ca45760405162461bcd60e51b815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201526132b960f11b60648201526084016102f8565b565b6000303303610cfc57600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b03169150610cff9050565b50335b90565b848314610d605760405162461bcd60e51b815260206004820152602660248201527f4647436172643a20696473206e6f742073616d65206c656e67746820617320616044820152656d6f756e747360d01b60648201526084016102f8565b6001600160a01b038716610d865760405162461bcd60e51b81526004016102f890611cd1565b6000610d90610ca6565b905060005b86811015610f4a576000888883818110610db157610db1611c20565b6001600160a01b038e16600090815260066020908152604080832093820295909501358083529290529290922054919250819050888885818110610df757610df7611c20565b905060200201351115610e1c5760405162461bcd60e51b81526004016102f890611d14565b878784818110610e2e57610e2e611c20565b9050602002013581610e409190611d5e565b6001600160a01b038d166000908152600660209081526040808320868452909152902055878784818110610e7657610e76611c20565b6001600160a01b038e16600090815260066020908152604080832088845282528220805493909102949094013593925090610eb2908490611c65565b90915550506000546001600160a01b031615610f355760005460405163e9a8887f60e01b8152306004820152602481018490526001600160a01b038e811660448301529091169063e9a8887f90606401600060405180830381600087803b158015610f1c57600080fd5b505af1158015610f30573d6000803e3d6000fd5b505050505b50508080610f4290611c4c565b915050610d95565b50876001600160a01b0316896001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8a8a8a8a604051610f9e9493929190611dab565b60405180910390a4610478818a8a8a8a8a8a8a8a8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061146d92505050565b60006001600160a01b0385166110535760405162461bcd60e51b815260206004820152602660248201527f4647436172643a2043616e2774206d696e7420746f20746865207a65726f206160448201526564647265737360d01b60648201526084016102f8565b600061105d610ca6565b6001600160a01b03871660009081526006840160209081526040808320898452909152812080549293508692909190611097908490611c65565b909155505060408051868152602081018690526001600160a01b0380891692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46110f78160008888888861151f565b505050505050565b6001600160a01b0385166111255760405162461bcd60e51b81526004016102f890611cd1565b600061112f610ca6565b6001600160a01b0388166000908152600660209081526040808320898452909152902054909150808511156111765760405162461bcd60e51b81526004016102f890611d14565b6111808582611d5e565b6001600160a01b03808a1660009081526006602081815260408084208c8552825280842095909555928b168252825282812089825290915290812080548792906111cb908490611c65565b90915550506000546001600160a01b03161561124e5760005460405163e9a8887f60e01b8152306004820152602481018890526001600160a01b038a811660448301529091169063e9a8887f90606401600060405180830381600087803b15801561123557600080fd5b505af1158015611249573d6000803e3d6000fd5b505050505b866001600160a01b0316886001600160a01b0316836001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6289896040516112a6929190918252602082015260400190565b60405180910390a46112f2828989898989898080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061151f92505050565b5050505050505050565b60006001600160a01b0384166113655760405162461bcd60e51b815260206004820152602860248201527f4647436172643a2043616e2774206275726e2066726f6d20746865207a65726f604482015267206164647265737360c01b60648201526084016102f8565b600061136f610ca6565b6001600160a01b03861660009081526006840160209081526040808320888452909152902054909150808411156113f45760405162461bcd60e51b815260206004820152602360248201527f4647436172643a204275726e20616d6f756e7420657863656564732062616c616044820152626e636560e81b60648201526084016102f8565b6113fe8482611d5e565b6001600160a01b03878116600081815260068701602090815260408083208b845282528083209590955584518a8152908101899052909391928616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4505050505050565b853b80156104785760405163bc197c8160e01b81526001600160a01b0388169063bc197c81906114ad908c908c908b908b908b908b908b90600401611ddd565b6020604051808303816000875af11580156114cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114f09190611e3f565b6001600160e01b03191663bc197c8160e01b146104785760405162461bcd60e51b81526004016102f890611e69565b833b8015610a9c5760405163f23a6e6160e01b81526001600160a01b0386169063f23a6e619061155b908a908a90899089908990600401611eb4565b6020604051808303816000875af115801561157a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061159e9190611e3f565b6001600160e01b03191663f23a6e6160e01b14610a9c5760405162461bcd60e51b81526004016102f890611e69565b8280546115d990611b82565b90600052602060002090601f0160209004810192826115fb5760008555611641565b82601f106116145782800160ff19823516178555611641565b82800160010185558215611641579182015b82811115611641578235825591602001919060010190611626565b5061164d929150611651565b5090565b5b8082111561164d5760008155600101611652565b80356001600160a01b038116811461167d57600080fd5b919050565b6000806040838503121561169557600080fd5b61169e83611666565b946020939093013593505050565b6000602082840312156116be57600080fd5b5035919050565b60005b838110156116e05781810151838201526020016116c8565b838111156116ef576000848401525b50505050565b6000815180845261170d8160208601602086016116c5565b601f01601f19169290920160200192915050565b60208152600061173460208301846116f5565b9392505050565b60006020828403121561174d57600080fd5b61173482611666565b60008083601f84011261176857600080fd5b50813567ffffffffffffffff81111561178057600080fd5b6020830191508360208260051b850101111561179b57600080fd5b9250929050565b60008083601f8401126117b457600080fd5b50813567ffffffffffffffff8111156117cc57600080fd5b60208301915083602082850101111561179b57600080fd5b60008060008060008060008060a0898b03121561180057600080fd5b61180989611666565b975061181760208a01611666565b9650604089013567ffffffffffffffff8082111561183457600080fd5b6118408c838d01611756565b909850965060608b013591508082111561185957600080fd5b6118658c838d01611756565b909650945060808b013591508082111561187e57600080fd5b5061188b8b828c016117a2565b999c989b5096995094979396929594505050565b600080600080604085870312156118b557600080fd5b843567ffffffffffffffff808211156118cd57600080fd5b6118d988838901611756565b909650945060208701359150808211156118f257600080fd5b506118ff87828801611756565b95989497509550505050565b6020808252825182820181905260009190848201906040850190845b8181101561194357835183529284019291840191600101611927565b50909695505050505050565b6000806020838503121561196257600080fd5b823567ffffffffffffffff81111561197957600080fd5b611985858286016117a2565b90969095509350505050565b600080604083850312156119a457600080fd5b6119ad83611666565b9150602083013580151581146119c257600080fd5b809150509250929050565b600080600080600080600080600060a08a8c0312156119eb57600080fd5b6119f48a611666565b985060208a013567ffffffffffffffff80821115611a1157600080fd5b611a1d8d838e01611756565b909a50985060408c0135915080821115611a3657600080fd5b611a428d838e01611756565b909850965060608c0135915080821115611a5b57600080fd5b611a678d838e01611756565b909650945060808c0135915080821115611a8057600080fd5b50611a8d8c828d016117a2565b915080935050809150509295985092959850929598565b60008060408385031215611ab757600080fd5b611ac083611666565b9150611ace60208401611666565b90509250929050565b60008060008060008060a08789031215611af057600080fd5b611af987611666565b9550611b0760208801611666565b94506040870135935060608701359250608087013567ffffffffffffffff811115611b3157600080fd5b611b3d89828a016117a2565b979a9699509497509295939492505050565b600080600060608486031215611b6457600080fd5b611b6d84611666565b95602085013595506040909401359392505050565b600181811c90821680611b9657607f821691505b602082108103611bb657634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f4647436172643a204e6f74206f776e657220616e64206e6f7420617070726f7660408201526d32b2103a37903a3930b739b332b960911b606082015260800190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611c5e57611c5e611c36565b5060010190565b60008219821115611c7857611c78611c36565b500190565b60008251611c8f8184602087016116c5565b600360fc1b920191825250600101919050565b60008351611cb48184602088016116c5565b835190830190611cc88183602088016116c5565b01949350505050565b60208082526023908201527f4647436172643a2043616e2774207472616e7366657220746f2030206164647260408201526265737360e81b606082015260800190565b6020808252602a908201527f4647436172643a20446f65736e277420686176652074686174206d616e79207460408201526937903a3930b739b332b960b11b606082015260800190565b600082821015611d7057611d70611c36565b500390565b81835260006001600160fb1b03831115611d8e57600080fd5b8260051b8083602087013760009401602001938452509192915050565b604081526000611dbf604083018688611d75565b8281036020840152611dd2818587611d75565b979650505050505050565b6001600160a01b0388811682528716602082015260a060408201819052600090611e0a9083018789611d75565b8281036060840152611e1d818688611d75565b90508281036080840152611e3181856116f5565b9a9950505050505050505050565b600060208284031215611e5157600080fd5b81516001600160e01b03198116811461173457600080fd5b6020808252602b908201527f4c6962455243313135353a205472616e736665722072656a65637465642f666160408201526a696c6564206279205f746f60a81b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611dd2908301846116f556fea2646970667358221220ce403f75963a8060618f5f81b6a8e6840aeea6cce2fc35effbd2b6378000a31964736f6c634300080d0033";

type FakeGotchisCardFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FakeGotchisCardFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FakeGotchisCardFacet__factory extends ContractFactory {
  constructor(...args: FakeGotchisCardFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FakeGotchisCardFacet> {
    return super.deploy(overrides || {}) as Promise<FakeGotchisCardFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FakeGotchisCardFacet {
    return super.attach(address) as FakeGotchisCardFacet;
  }
  override connect(signer: Signer): FakeGotchisCardFacet__factory {
    return super.connect(signer) as FakeGotchisCardFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FakeGotchisCardFacetInterface {
    return new utils.Interface(_abi) as FakeGotchisCardFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FakeGotchisCardFacet {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as FakeGotchisCardFacet;
  }
}
