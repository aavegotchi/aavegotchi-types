/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../../common";
import type {
  RafflesContract,
  RafflesContractInterface,
} from "../../../../../../../src/contracts/aavegotchi-contracts/contracts/raffle/RafflesContract.sol/RafflesContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_vrfCoordinator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_link",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_keyHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "raffleId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "entrant",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "prizeAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "prizeId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "prizeQuantity",
        type: "uint256",
      },
    ],
    name: "RaffleClaimPrize",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "raffleId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "randomNumber",
        type: "uint256",
      },
    ],
    name: "RaffleRandomNumber",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "raffleId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "raffleEnd",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "ticketAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "ticketId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "prizeAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "prizeId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "prizeQuantity",
                type: "uint256",
              },
            ],
            internalType: "struct RafflesContract.RaffleItemPrizeIO[]",
            name: "raffleItemPrizes",
            type: "tuple[]",
          },
        ],
        indexed: false,
        internalType: "struct RafflesContract.RaffleItemInput[]",
        name: "raffleItems",
        type: "tuple[]",
      },
    ],
    name: "RaffleStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "raffleId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "entrant",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "ticketAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "ticketId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ticketQuantity",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct RafflesContract.TicketItemIO[]",
        name: "ticketItems",
        type: "tuple[]",
      },
    ],
    name: "RaffleTicketsEntered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_keyHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_vrfCoordinator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_link",
        type: "address",
      },
    ],
    name: "changeVRF",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_keyHash",
        type: "bytes32",
      },
    ],
    name: "changeVRFFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_raffleId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_entrant",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "entryIndex",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "raffleItemPrizeIndex",
                type: "uint256",
              },
              {
                internalType: "uint256[]",
                name: "winningPrizeNumbers",
                type: "uint256[]",
              },
            ],
            internalType: "struct RafflesContract.PrizesWinIO[]",
            name: "prizes",
            type: "tuple[]",
          },
        ],
        internalType: "struct RafflesContract.ticketWinIO[]",
        name: "_wins",
        type: "tuple[]",
      },
    ],
    name: "claimPrize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_raffleId",
        type: "uint256",
      },
    ],
    name: "drawRandomNumber",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_raffleId",
        type: "uint256",
      },
    ],
    name: "drawRandomNumberTest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_raffleId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "ticketAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "ticketId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ticketQuantity",
            type: "uint256",
          },
        ],
        internalType: "struct RafflesContract.TicketItemIO[]",
        name: "_ticketItems",
        type: "tuple[]",
      },
    ],
    name: "enterTickets",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_raffleId",
        type: "uint256",
      },
    ],
    name: "getEntrants",
    outputs: [
      {
        internalType: "address[]",
        name: "entrants_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_raffleId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_entrant",
        type: "address",
      },
    ],
    name: "getEntries",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "ticketAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "ticketId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ticketQuantity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rangeStart",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rangeEnd",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "raffleItemIndex",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "prizesClaimed",
            type: "bool",
          },
        ],
        internalType: "struct RafflesContract.EntryIO[]",
        name: "entries_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRaffles",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "raffleId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "raffleEnd",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isOpen",
            type: "bool",
          },
        ],
        internalType: "struct RafflesContract.RaffleIO[]",
        name: "raffles_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "linkBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "linkBalance_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_keyHash",
        type: "bytes32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_raffleId",
        type: "uint256",
      },
    ],
    name: "raffleInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "raffleEnd_",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "ticketAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "ticketId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalEntered",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "prizeAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "prizeId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "prizeQuantity",
                type: "uint256",
              },
            ],
            internalType: "struct RafflesContract.RaffleItemPrizeIO[]",
            name: "raffleItemPrizes",
            type: "tuple[]",
          },
        ],
        internalType: "struct RafflesContract.RaffleItemOutput[]",
        name: "raffleItems_",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "randomNumber_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "raffleSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "raffleSupply_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_randomness",
        type: "uint256",
      },
    ],
    name: "rawFulfillRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "removeLinkTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_raffleDuration",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "ticketAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "ticketId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "address",
                name: "prizeAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "prizeId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "prizeQuantity",
                type: "uint256",
              },
            ],
            internalType: "struct RafflesContract.RaffleItemPrizeIO[]",
            name: "raffleItemPrizes",
            type: "tuple[]",
          },
        ],
        internalType: "struct RafflesContract.RaffleItemInput[]",
        name: "_raffleItems",
        type: "tuple[]",
      },
    ],
    name: "startRaffle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_raffleId",
        type: "uint256",
      },
    ],
    name: "ticketStats",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "ticketAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "ticketId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "numberOfEntrants",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalEntered",
            type: "uint256",
          },
        ],
        internalType: "struct RafflesContract.TicketStatsIO[]",
        name: "ticketStats_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newContractOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620036ca380380620036ca833981016040819052620000349162000135565b60058054600680546001600160a01b039788166001600160a01b0319918216179091556007805496881696909116959095179094556004929092556001600160601b03908116939094166c010000000000000000000000000293909116929092176001600160601b031916179055600060208190527f67be87c3ff9960ca1e9cfac5cab2ff4747269cf9ed20c9b7306235ac35a491c5805460ff1990811660019081179092557feddca8dd33b41bff4f2689af38c5006161c5d608c330f99c8fe70d8b11b59a40805490911682179055805491819052600391909101905562000191565b80516001600160a01b03811681146200013057600080fd5b919050565b600080600080600060a086880312156200014d578081fd5b620001588662000118565b9450620001686020870162000118565b9350620001786040870162000118565b6060870151608090970151959894975095949392505050565b61352980620001a16000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806396b566c4116100b8578063bf30d7901161007c578063bf30d79014610291578063c26ecefa146102b3578063ec9fabb7146102bb578063f23a6e61146102ce578063f2fde38b146102ee578063fbea56e01461030157610137565b806396b566c4146102165780639e317f1214610236578063a18723c514610249578063a9a9031c1461025e578063abc00bb41461027157610137565b8063761e99f0116100ff578063761e99f0146101b5578063781f653e146101c85780638da5cb5b146101db578063936e9067146101f057806394985ddd1461020357610137565b806301ffc9a71461013c578063339a6403146101655780634e3347c71461017a57806357b0ef441461018d578063599d127a146101a0575b600080fd5b61014f61014a366004612661565b610321565b60405161015c9190612bef565b60405180910390f35b610178610173366004612628565b610344565b005b610178610188366004612723565b610502565b61017861019b3660046126cc565b6108b9565b6101a8610df8565b60405161015c91906128e9565b6101786101c33660046125df565b610dfe565b6101786101d6366004612640565b610eb8565b6101e3610f14565b60405161015c919061291a565b6101786101fe366004612628565b610f2a565b610178610211366004612640565b6111ac565b6102296102243660046126a1565b6112cf565b60405161015c9190612ab4565b6101a8610244366004612628565b61158b565b61025161159d565b60405161015c9190612b41565b61017861026c3660046127e5565b611691565b61028461027f366004612628565b61171d565b60405161015c9190612a67565b6102a461029f366004612628565b6117c7565b60405161015c93929190613351565b6101a8611ac7565b6101786102c936600461276c565b611b4d565b6102e16102dc36600461253f565b611eb4565b60405161015c9190612c1e565b6101786102fc36600461251e565b611f67565b61031461030f366004612628565b611ff1565b60405161015c9190612b8f565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b600154811061036e5760405162461bcd60e51b815260040161036590612cba565b60405180910390fd5b600080600101828154811061037f57fe5b90600052602060002090600702019050428160060154106103b25760405162461bcd60e51b815260040161036590612e75565b6004810154156103d45760405162461bcd60e51b81526004016103659061318c565b600581015460ff1615806103f95750600554600160601b90046001600160a01b031633145b6104155760405162461bcd60e51b815260040161036590612e40565b6005808201805460ff19166001179055546007546040516370a0823160e01b81526001600160601b03909216916001600160a01b03909116906370a082319061046290309060040161291a565b60206040518083038186803b15801561047a57600080fd5b505afa15801561048e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b29190612689565b10156104d05760405162461bcd60e51b815260040161036590612d54565b6004546005546000916104ec916001600160601b031683612219565b6000908152600360205260409020929092555050565b600554600160601b90046001600160a01b031633146105335760405162461bcd60e51b8152600401610365906131d3565b428301816105535760405162461bcd60e51b815260040161036590612c33565b60015460405181907fb44ac0470da898b318be8ceeafb224dd8540bb2200607aa1b4def46f9dd9de889061058c90859088908890613272565b60405180910390a260018054808201825560009182526007027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfc81018490557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf601905b848110156108b0573686868381811061060457fe5b905060200281019061061691906134de565b905060006106276040830183613479565b9050116106465760405162461bcd60e51b815260040161036590612e15565b826000610656602084018461251e565b6001600160a01b03168152602080820192909252604090810160009081208484013582529092529020541561069d5760405162461bcd60e51b815260040161036590612f35565b6001808401805491820180825560009182526020808320600490940290930192909186916106cd9086018661251e565b6001600160a01b03168152602080820192909252604090810160009081208684018035835293522091909155610703908361251e565b81546001600160a01b0319166001600160a01b03919091161781556020820135600182015560005b6107386040840184613479565b90508110156108a5573661074f6040850185613479565b8381811061075957fe5b9050606002019050826003016040518060600160405280836000016020810190610783919061251e565b6001600160a01b0390811682526001600160601b0360408087013582166020808601919091528781018035958301959095528654600181810189556000988952978290208751600290920201805492880151909416600160a01b029085166001600160a01b031990921691909117909316929092178155920151919092015561080c908261251e565b6001600160a01b031663f242432a3330846020013585604001358c60405160200161083791906128e9565b6040516020818303038152906040526040518663ffffffff1660e01b815260040161086695949392919061292e565b600060405180830381600087803b15801561088057600080fd5b505af1158015610894573d6000803e3d6000fd5b50506001909301925061072b915050565b5050506001016105ef565b50505050505050565b60015484106108da5760405162461bcd60e51b815260040161036590612cba565b60008060010185815481106108eb57fe5b90600052602060002090600702019050600081600401549050600081116109245760405162461bcd60e51b815260040161036590612d7d565b336001600160a01b038616148061094c5750600554600160601b90046001600160a01b031633145b6109685760405162461bcd60e51b815260040161036590612f92565b6001600160a01b0385166000908152600283016020526040812054905b84811015610dee573686868381811061099a57fe5b90506020028101906109ac91906134bf565b9050803583116109ce5760405162461bcd60e51b81526004016103659061320a565b6109d6612381565b6001600160a01b03891660009081526002870160205260409020805483359081106109fd57fe5b600091825260209182902060408051608081018252929091015462ffffff8116835260ff6301000000820416158015948401949094526001600160701b036401000000008204811692840192909252600160901b90041660608201529150610a775760405162461bcd60e51b815260040161036590613085565b6001600160a01b038916600090815260028701602052604090208054600191908435908110610aa257fe5b60009182526020822001805492151563010000000263ff00000019909316929092179091558151600188018054909162ffffff16908110610adf57fe5b906000526020600020906004020160020154905086600101826000015162ffffff1681548110610b0b57fe5b6000918252602082206003600490920201015495505b610b2e6020850185613433565b9050811015610ddf5736610b456020860186613433565b83818110610b4f57fe5b9050602002810190610b6191906134bf565b905080358711610b835760405162461bcd60e51b815260040161036590612fdf565b610b8b6123a8565b89600101856000015162ffffff1681548110610ba357fe5b9060005260206000209060040201600301826000013581548110610bc357fe5b6000918252602080832060408051606081018252600290940290910180546001600160a01b03811685526001600160601b03600160a01b909104169284018390526001015490830152995091505b610c1e6020840184613433565b9050811015610cf8576000610c366020850185613433565b83818110610c4057fe5b905060200201359050898110610c685760405162461bcd60e51b815260040161036590613123565b86516040516000918891610c85918f9189359087906020016128f2565b6040516020818303038152906040528051906020012060001c81610ca557fe5b06905087604001516001600160701b03168110158015610cd1575087606001516001600160701b031681105b610ced5760405162461bcd60e51b815260040161036590612d1d565b509850600101610c11565b508d7f61dd2cf3e9f248b4453e8abb61b6ad73c53cf482d1c506f868a3885f533233cf8e83600001518460400151868060200190610d369190613433565b604051610d4695949392506129c6565b60405180910390a280600001516001600160a01b031663f242432a308f8460400151868060200190610d789190613433565b6040516001600160e01b031960e088901b168152610d9c95949392506004016129ef565b600060405180830381600087803b158015610db657600080fd5b505af1158015610dca573d6000803e3d6000fd5b5050923598505060019092019150610b219050565b50509035925050600101610985565b5050505050505050565b60015490565b600554600160601b90046001600160a01b03163314610e2f5760405162461bcd60e51b8152600401610365906131d3565b60075460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90610e619085908590600401612a27565b602060405180830381600087803b158015610e7b57600080fd5b505af1158015610e8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eb39190612608565b505050565b600554600160601b90046001600160a01b03163314610ee95760405162461bcd60e51b8152600401610365906131d3565b600580546bffffffffffffffffffffffff19166001600160601b039390931692909217909155600455565b600554600160601b90046001600160a01b031690565b600554600160601b90046001600160a01b03163314610f5b5760405162461bcd60e51b8152600401610365906131d3565b6001548110610f7c5760405162461bcd60e51b815260040161036590612cba565b6000806001018281548110610f8d57fe5b9060005260206000209060070201905042816006015410610fc05760405162461bcd60e51b815260040161036590612e75565b600481015415610fe25760405162461bcd60e51b81526004016103659061318c565b600581015460ff1615806110075750600554600160601b90046001600160a01b031633145b6110235760405162461bcd60e51b815260040161036590612e40565b6005808201805460ff19166001179055546007546040516370a0823160e01b81526001600160601b03909216916001600160a01b03909116906370a082319061107090309060040161291a565b60206040518083038186803b15801561108857600080fd5b505afa15801561109c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110c09190612689565b10156110de5760405162461bcd60e51b815260040161036590612d54565b6004546005546000916110fa916001600160601b031683612219565b6000818152600360209081526040808320879055519293509091611120914291016128e9565b6040516020818303038152906040528051906020012060001c9050806000600101858154811061114c57fe5b600091825260209091206004600790920201015560058301805460ff1916905560405184907f37e68548bed90aa11745696116f838a60b0bba40fc3f77a139aee9e3b828a08e9061119e9084906128e9565b60405180910390a250505050565b6006546001600160a01b031633146111d65760405162461bcd60e51b815260040161036590612efe565b60008281526003602052604090205460015481106112065760405162461bcd60e51b815260040161036590612cba565b600080600101828154811061121757fe5b906000526020600020906007020190504281600601541061124a5760405162461bcd60e51b815260040161036590612e75565b60048101541561126c5760405162461bcd60e51b81526004016103659061318c565b826000600101838154811061127d57fe5b600091825260209091206004600790920201015560058101805460ff1916905560405182907f37e68548bed90aa11745696116f838a60b0bba40fc3f77a139aee9e3b828a08e9061119e9086906128e9565b60015460609083106112f35760405162461bcd60e51b815260040161036590612cba565b600080600101848154811061130457fe5b600091825260208083206001600160a01b0387168452600260079093020191820190526040909120549091506001600160401b038111801561134557600080fd5b5060405190808252806020026020018201604052801561137f57816020015b61136c6123c8565b8152602001906001900390816113645790505b50915060005b6001600160a01b0384166000908152600283016020526040902054811015611583576113af612381565b6001600160a01b038516600090815260028401602052604090208054839081106113d557fe5b6000918252602080832060408051608081018252939091015462ffffff811680855260ff63010000008304161515938501939093526001600160701b036401000000008204811692850192909252600160901b900416606083015260018601805492945091811061144257fe5b60009182526020909120600490910201805486519192506001600160a01b03169086908590811061146f57fe5b60209081029190910101516001600160a01b0390911690526001810154855186908590811061149a57fe5b6020026020010151602001818152505081604001518260600151036001600160701b03168584815181106114ca57fe5b6020026020010151604001818152505081604001516001600160701b03168584815181106114f457fe5b6020026020010151606001818152505081606001516001600160701b031685848151811061151e57fe5b60200260200101516080018181525050816000015162ffffff1685848151811061154457fe5b602002602001015160a0018181525050816020015185848151811061156557fe5b602090810291909101015190151560c0909101525050600101611385565b505092915050565b60009081526002602052604090205490565b6001546060906001600160401b03811180156115b857600080fd5b506040519080825280602002602001820160405280156115f257816020015b6115df612410565b8152602001906001900390816115d75790505b50905060005b60015481101561168d57600080600101828154811061161357fe5b90600052602060002090600702016006015490508183838151811061163457fe5b602002602001015160000181815250508083838151811061165157fe5b6020026020010151602001818152505042811183838151811061167057fe5b6020908102919091010151901515604090910152506001016115f8565b5090565b600554600160601b90046001600160a01b031633146116c25760405162461bcd60e51b8152600401610365906131d3565b600580546bffffffffffffffffffffffff19166001600160601b039590951694909417909355600491909155600680546001600160a01b03199081166001600160a01b03938416179091556007805490911691909216179055565b60015460609082106117415760405162461bcd60e51b815260040161036590612cba565b600080600101838154811061175257fe5b90600052602060002090600702019050806003018054806020026020016040519081016040528092919081815260200182805480156117ba57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161179c575b5050505050915050919050565b600154600090606090829084106117f05760405162461bcd60e51b815260040161036590612cba565b600080600101858154811061180157fe5b60009182526020909120600660079092020190810154600582015490955090915060ff161515600114156118385760019150611840565b806004015491505b60018101546001600160401b038111801561185a57600080fd5b5060405190808252806020026020018201604052801561189457816020015b611881612433565b8152602001906001900390816118795790505b50925060005b6001820154811015611abe5760008260010182815481106118b757fe5b60009182526020909120600490910201805486519192506001600160a01b0316908690849081106118e457fe5b60209081029190910101516001600160a01b0390911690526001810154855186908490811061190f57fe5b60200260200101516020018181525050806002015485838151811061193057fe5b60209081029190910101516040015260038101546001600160401b038111801561195957600080fd5b5060405190808252806020026020018201604052801561199357816020015b611980612464565b8152602001906001900390816119785790505b508583815181106119a057fe5b60200260200101516060018190525060005b6003820154811015611ab45760008260030182815481106119cf57fe5b60009182526020909120600290910201805488519192506001600160a01b0316908890869081106119fc57fe5b6020026020010151606001518381518110611a1357fe5b60209081029190910101516001600160a01b03909116905260018101548751889086908110611a3e57fe5b6020026020010151606001518381518110611a5557fe5b602090810291909101810151015280548751600160a01b9091046001600160601b031690889086908110611a8557fe5b6020026020010151606001518381518110611a9c57fe5b602090810291909101015160400152506001016119b2565b505060010161189a565b50509193909250565b6007546040516370a0823160e01b81526000916001600160a01b0316906370a0823190611af890309060040161291a565b60206040518083038186803b158015611b1057600080fd5b505afa158015611b24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b489190612689565b905090565b6001548310611b6e5760405162461bcd60e51b815260040161036590612cba565b80611b8b5760405162461bcd60e51b815260040161036590612cf1565b6000806001018481548110611b9c57fe5b9060005260206000209060070201905042816006015411611bcf5760405162461bcd60e51b81526004016103659061304e565b837f11bafd320b20b453e37e76ddd7d80347a86411bafe26e90624da8a8dcdcdd429338585604051611c0393929190612973565b60405180910390a2336000908152600282016020526040902054611c4957600381018054600181018255600091825260209091200180546001600160a01b031916331790555b60005b82811015611ead5736848483818110611c6157fe5b90506060020190506000816040013511611c8d5760405162461bcd60e51b815260040161036590612eb8565b60008381611c9e602085018561251e565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008360200135815260200190815260200160002054905060008111611cf65760405162461bcd60e51b815260040161036590612dc4565b8080600190039150506000846001018281548110611d1057fe5b6000918252602080832060026004909302018281018054338652938a0183526040808620815160808101835262ffffff808b1682528187018981526001600160701b03808a16848701908152958e01358a01808216606086019081528654600181018855968d529b8a90209451949095018054925196519b518216600160901b0271ffffffffffffffffffffffffffffffffffff9c9092166401000000000271ffffffffffffffffffffffffffff000000001997151563010000000263ff000000199690951662ffffff19909416939093179490941692909217949094169390931797909716919091179095559390935591925090611e119085018561251e565b6001600160a01b031663f242432a3330876020013588604001358e604051602001611e3c91906128e9565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401611e6b95949392919061292e565b600060405180830381600087803b158015611e8557600080fd5b505af1158015611e99573d6000803e3d6000fd5b505060019096019550611c4c945050505050565b5050505050565b600060208214611ed65760405162461bcd60e51b8152600401610365906130d4565b6000611ee483850185612628565b6001549091508110611f085760405162461bcd60e51b815260040161036590612cba565b6000806001018281548110611f1957fe5b90600052602060002090600702019050600081600601549050428111611f515760405162461bcd60e51b815260040161036590612c6a565b5063f23a6e6160e01b9998505050505050505050565b600554600160601b90046001600160a01b0316338114611f995760405162461bcd60e51b8152600401610365906131d3565b600580546001600160601b0316600160601b6001600160a01b0385811691820292909217909255604051908316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60015460609082106120155760405162461bcd60e51b815260040161036590612cba565b600080600101838154811061202657fe5b9060005260206000209060070201905080600101805490506001600160401b038111801561205357600080fd5b5060405190808252806020026020018201604052801561208d57816020015b61207a61248e565b8152602001906001900390816120725790505b50915060005b60018201548110156122125760008260010182815481106120b057fe5b60009182526020909120600490910201805485519192506001600160a01b0316908590849081106120dd57fe5b60209081029190910101516001600160a01b0390911690526001810154845185908490811061210857fe5b60200260200101516020018181525050806002015484838151811061212957fe5b6020026020010151606001818152505060005b600384015481101561220857600084600301828154811061215957fe5b60009182526020822001546001600160a01b031691505b6001600160a01b03821660009081526002870160205260409020548110156121fe576001600160a01b038216600090815260028701602052604090208054829081106121b857fe5b60009182526020909120015462ffffff168514156121f6578685815181106121dc57fe5b6020908102919091010151604001805160010190526121fe565b600101612170565b505060010161213c565b5050600101612093565b5050919050565b6007546006546040516000926001600160a01b0390811692634000aea092911690869061224c90899088906020016128db565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161227993929190612a40565b602060405180830381600087803b15801561229357600080fd5b505af11580156122a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122cb9190612608565b506000848152600260205260408120546122ea90869085903090612314565b600086815260026020526040902080546001019055905061230b858261234e565b95945050505050565b60008484848460405160200161232d9493929190612bfa565b60408051601f19818403018152919052805160209091012095945050505050565b600082826040516020016123639291906128db565b60405160208183030381529060405280519060200120905092915050565b60408051608081018252600080825260208201819052918101829052606081019190915290565b604080516060810182526000808252602082018190529181019190915290565b6040518060e0016040528060006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b604051806060016040528060008152602001600081526020016000151581525090565b604051806080016040528060006001600160a01b031681526020016000815260200160008152602001606081525090565b604051806060016040528060006001600160a01b0316815260200160008152602001600081525090565b604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b80356001600160a01b038116811461033f57600080fd5b60008083601f8401126124e7578182fd5b5081356001600160401b038111156124fd578182fd5b602083019150836020808302850101111561251757600080fd5b9250929050565b60006020828403121561252f578081fd5b612538826124bf565b9392505050565b60008060008060008060a08789031215612557578182fd5b612560876124bf565b955061256e602088016124bf565b9450604087013593506060870135925060808701356001600160401b0380821115612597578384fd5b818901915089601f8301126125aa578384fd5b8135818111156125b8578485fd5b8a60208285010111156125c9578485fd5b6020830194508093505050509295509295509295565b600080604083850312156125f1578182fd5b6125fa836124bf565b946020939093013593505050565b600060208284031215612619578081fd5b81518015158114612538578182fd5b600060208284031215612639578081fd5b5035919050565b60008060408385031215612652578182fd5b50508035926020909101359150565b600060208284031215612672578081fd5b81356001600160e01b031981168114612538578182fd5b60006020828403121561269a578081fd5b5051919050565b600080604083850312156126b3578182fd5b823591506126c3602084016124bf565b90509250929050565b600080600080606085870312156126e1578384fd5b843593506126f1602086016124bf565b925060408501356001600160401b0381111561270b578283fd5b612717878288016124d6565b95989497509550505050565b600080600060408486031215612737578283fd5b8335925060208401356001600160401b03811115612753578283fd5b61275f868287016124d6565b9497909650939450505050565b600080600060408486031215612780578283fd5b8335925060208401356001600160401b038082111561279d578384fd5b818601915086601f8301126127b0578384fd5b8135818111156127be578485fd5b8760206060830285010111156127d2578485fd5b6020830194508093505050509250925092565b600080600080608085870312156127fa578182fd5b8435935060208501359250612811604086016124bf565b915061281f606086016124bf565b905092959194509250565b600082845260208401935081815b8481101561285d5761284a86836128b2565b6060958601959190910190600101612838565b5093949350505050565b60008151808452815b8181101561288c57602081850181015186830182015201612870565b8181111561289d5782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b036128c3826124bf565b16825260208181013590830152604090810135910152565b918252602082015260400190565b90815260200190565b93845260e89290921b6001600160e81b03191660208401526023830152604382015260630190565b6001600160a01b0391909116815260200190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061296890830184612867565b979650505050505050565b6001600160a01b038416815260406020820181905281018290526000606080830185835b868110156129b9576129a983836128b2565b9183019190830190600101612997565b5090979650505050505050565b6001600160a01b0394851681529290931660208301526040820152606081019190915260800190565b6001600160a01b0394851681529290931660208301526040820152606081019190915260a06080820181905260009082015260c00190565b6001600160a01b03929092168252602082015260400190565b600060018060a01b03851682528360208301526060604083015261230b6060830184612867565b6020808252825182820181905260009190848201906040850190845b81811015612aa85783516001600160a01b031683529284019291840191600101612a83565b50909695505050505050565b602080825282518282018190526000919060409081850190868401855b82811015612b3457815180516001600160a01b0316855286810151878601528581015186860152606080820151908601526080808201519086015260a0808201519086015260c09081015115159085015260e09093019290850190600101612ad1565b5091979650505050505050565b602080825282518282018190526000919060409081850190868401855b82811015612b3457815180518552868101518786015285015115158585015260609093019290850190600101612b5e565b602080825282518282018190526000919060409081850190868401855b82811015612b3457815180516001600160a01b03168552868101518786015285810151868601526060908101519085015260809093019290850190600101612bac565b901515815260200190565b93845260208401929092526001600160a01b03166040830152606082015260800190565b6001600160e01b031991909116815260200190565b60208082526017908201527f526166666c653a204e6f20726166666c65206974656d73000000000000000000604082015260600190565b60208082526030908201527f526166666c653a2043616e277420616363657074207472616e7366657220666f60408201526f72206578706972656420726166666c6560801b606082015260800190565b6020808252601d908201527f526166666c653a20526166666c6520646f6573206e6f74206578697374000000604082015260600190565b602080825260129082015271526166666c653a204e6f207469636b65747360701b604082015260600190565b60208082526019908201527f526166666c653a20446964206e6f742077696e207072697a6500000000000000604082015260600190565b6020808252600f908201526e4e6f7420656e6f756768204c494e4b60881b604082015260600190565b60208082526027908201527f526166666c653a2052616e646f6d206e756d626572206e6f742067656e6572616040820152661d1959081e595d60ca1b606082015260800190565b60208082526031908201527f526166666c653a20526166666c65206974656d20646f65736e277420657869736040820152707420666f72207468697320726166666c6560781b606082015260800190565b602080825260119082015270526166666c653a204e6f207072697a657360781b604082015260600190565b6020808252818101527f526166666c653a2052616e646f6d206e756d6265722069732070656e64696e67604082015260600190565b60208082526023908201527f526166666c653a20526166666c652074696d6520686173206e6f7420657870696040820152621c995960ea1b606082015260800190565b60208082526026908201527f526166666c653a205469636b6574207175616e746974792063616e6e6f74206260408201526565207a65726f60d01b606082015260800190565b6020808252601f908201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00604082015260600190565b6020808252603c908201527f526166666c653a20526166666c65206974656d20616c7265616479207573696e60408201527f67207469636b65744164647265737320616e64207469636b6574496400000000606082015260800190565b6020808252602d908201527f526166666c653a204e6f7420636c61696d6564206279206f776e6572206f722060408201526c31b7b73a3930b1ba27bbb732b960991b606082015260800190565b60208082526049908201527f526166666c653a20526166666c65207072697a65207479706520646f6573206e60408201527f6f74206578697374206f72206973206e6f74206c6573736572207468616e206c6060820152686173742076616c756560b81b608082015260a00190565b6020808252601f908201527f526166666c653a20526166666c652074696d6520686173206578706972656400604082015260600190565b6020808252602f908201527f526166666c65733a20456e747279207072697a6573206861766520616c72656160408201526e191e481899595b8818db185a5b5959608a1b606082015260800190565b6020808252602f908201527f526166666c653a2044617461206f66207468652077726f6e672073697a65207360408201526e32b73a1037b7103a3930b739b332b960891b606082015260800190565b60208082526043908201527f526166666c653a207072697a654e756d62657220646f6573206e6f742065786960408201527f7374206f72206973206e6f74206c6573736572207468616e206c6173742076616060820152626c756560e81b608082015260a00190565b60208082526027908201527f526166666c653a2052616e646f6d206e756d62657220616c72656164792067656040820152661b995c985d195960ca1b606082015260800190565b6020808252601e908201527f526166666c653a204d75737420626520636f6e7472616374206f776e65720000604082015260600190565b60208082526042908201527f526166666c653a205573657220656e74727920646f6573206e6f74206578697360408201527f74206f72206973206e6f74206c6573736572207468616e206c6173742076616c606082015261756560f01b608082015260a00190565b83815260406020808301829052828201849052600091906060908185018682028601830188865b8981101561334157888303605f190184528135368c9003605e190181126132be578889fd5b8b016001600160a01b036132d1826124bf565b168452858101358685015287810135601e198236030181126132f157898afd5b810180356001600160401b03811115613308578a8bfd5b8881023603831315613318578a8bfd5b888a87015261332c898701828a850161282a565b96880196955050509185019150600101613299565b50909a9950505050505050505050565b600060608083018684526020828186015281875180845260809350838701915083838202880101838a01875b8381101561341a57898303607f19018552815180516001600160a01b039081168552878201518886015260408083015181870152918a01518a86018a905280518a8701819052908901928c929160a08801905b808510156134035785518051851683528c8101518d84015283015183830152948b019460019490940193908d01906133d0565b50988a01989650505092870192505060010161337d565b5050809650505050505050826040830152949350505050565b6000808335601e19843603018112613449578283fd5b8301803591506001600160401b03821115613462578283fd5b602090810192508102360382131561251757600080fd5b6000808335601e1984360301811261348f578283fd5b8301803591506001600160401b038211156134a8578283fd5b602001915060608102360382131561251757600080fd5b60008235603e198336030181126134d4578182fd5b9190910192915050565b60008235605e198336030181126134d4578182fdfea2646970667358221220b6e403c7a4eb0879b92b6f2a3ebcfb74e9d50df5122899ad09caf49f5266f58564736f6c63430007040033";

type RafflesContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RafflesContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RafflesContract__factory extends ContractFactory {
  constructor(...args: RafflesContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _contractOwner: PromiseOrValue<string>,
    _vrfCoordinator: PromiseOrValue<string>,
    _link: PromiseOrValue<string>,
    _keyHash: PromiseOrValue<BytesLike>,
    _fee: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RafflesContract> {
    return super.deploy(
      _contractOwner,
      _vrfCoordinator,
      _link,
      _keyHash,
      _fee,
      overrides || {}
    ) as Promise<RafflesContract>;
  }
  override getDeployTransaction(
    _contractOwner: PromiseOrValue<string>,
    _vrfCoordinator: PromiseOrValue<string>,
    _link: PromiseOrValue<string>,
    _keyHash: PromiseOrValue<BytesLike>,
    _fee: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _contractOwner,
      _vrfCoordinator,
      _link,
      _keyHash,
      _fee,
      overrides || {}
    );
  }
  override attach(address: string): RafflesContract {
    return super.attach(address) as RafflesContract;
  }
  override connect(signer: Signer): RafflesContract__factory {
    return super.connect(signer) as RafflesContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RafflesContractInterface {
    return new utils.Interface(_abi) as RafflesContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RafflesContract {
    return new Contract(address, _abi, signerOrProvider) as RafflesContract;
  }
}
