/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  ERC721WithMultiRoyalties,
  ERC721WithMultiRoyaltiesInterface,
} from "../../../../../../src/contracts/aavegotchi-contracts/contracts/test/ERC721WithMultiRoyalties";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "royaltyRecipients",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "royaltyValues",
        type: "uint256[]",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "multiRoyaltyInfo",
    outputs: [
      {
        internalType: "address[]",
        name: "receivers",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "royaltyAmounts",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001c6638038062001c668339810160408190526200003491620001e1565b8151829082906200004d9060009060208501906200006e565b508051620000639060019060208401906200006e565b505050505062000287565b8280546200007c906200024b565b90600052602060002090601f016020900481019282620000a05760008555620000eb565b82601f10620000bb57805160ff1916838001178555620000eb565b82800160010185558215620000eb579182015b82811115620000eb578251825591602001919060010190620000ce565b50620000f9929150620000fd565b5090565b5b80821115620000f95760008155600101620000fe565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013c57600080fd5b81516001600160401b038082111562000159576200015962000114565b604051601f8301601f19908116603f0116810190828211818310171562000184576200018462000114565b81604052838152602092508683858801011115620001a157600080fd5b600091505b83821015620001c55785820183015181830184015290820190620001a6565b83821115620001d75760008385830101525b9695505050505050565b60008060408385031215620001f557600080fd5b82516001600160401b03808211156200020d57600080fd5b6200021b868387016200012a565b935060208501519150808211156200023257600080fd5b5062000241858286016200012a565b9150509250929050565b600181811c908216806200026057607f821691505b6020821081036200028157634e487b7160e01b600052602260045260246000fd5b50919050565b6119cf80620002976000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063acbd62bc11610066578063acbd62bc146101ff578063b88d4fde14610220578063c87b56dd14610233578063e985e9c51461024657600080fd5b806370a08231146101b057806395d89b41146101d1578063a22cb465146101d9578063a3bf277e146101ec57600080fd5b8063095ea7b3116100d3578063095ea7b31461016257806323b872dd1461017757806342842e0e1461018a5780636352211e1461019d57600080fd5b806301ffc9a7146100fa57806306fdde0314610122578063081812fc14610137575b600080fd5b61010d6101083660046112a7565b610282565b60405190151581526020015b60405180910390f35b61012a6102ad565b604051610119919061131c565b61014a61014536600461132f565b61033f565b6040516001600160a01b039091168152602001610119565b610175610170366004611364565b6103d9565b005b61017561018536600461138e565b6104ee565b61017561019836600461138e565b61051f565b61014a6101ab36600461132f565b61053a565b6101c36101be3660046113ca565b6105b1565b604051908152602001610119565b61012a610638565b6101756101e73660046113e5565b610647565b6101756101fa3660046114f7565b610656565b61021261020d3660046115c9565b6106f9565b6040516101199291906115eb565b61017561022e36600461166f565b610899565b61012a61024136600461132f565b6108d1565b61010d61025436600461172f565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006324d3493360e01b6001600160e01b0319831614806102a757506102a7826109b9565b92915050565b6060600080546102bc90611762565b80601f01602080910402602001604051908101604052809291908181526020018280546102e890611762565b80156103355780601f1061030a57610100808354040283529160200191610335565b820191906000526020600020905b81548152906001019060200180831161031857829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b03166103bd5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103e48261053a565b9050806001600160a01b0316836001600160a01b0316036104515760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084016103b4565b336001600160a01b038216148061046d575061046d8133610254565b6104df5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c000000000000000060648201526084016103b4565b6104e98383610a09565b505050565b6104f83382610a77565b6105145760405162461bcd60e51b81526004016103b49061179c565b6104e9838383610b6e565b6104e983838360405180602001604052806000815250610899565b6000818152600260205260408120546001600160a01b0316806102a75760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b60648201526084016103b4565b60006001600160a01b03821661061c5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b60648201526084016103b4565b506001600160a01b031660009081526003602052604090205490565b6060600180546102bc90611762565b610652338383610d0a565b5050565b80518251146106b25760405162461bcd60e51b815260206004820152602260248201527f4d756c7469526f79616c746965733a206c656e677468206e6f74206d61746368604482015261195960f21b60648201526084016103b4565b600060065490506106d3848260405180602001604052806000815250610dd8565b8151156106e5576106e5818484610e0b565b6106f0816001611803565b60065550505050565b600082815260076020908152604080832081518154938402810160609081018452928101848152929485949093919291839183908388018282801561076757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610749575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156107bf57602002820191906000526020600020905b8154815260200190600101908083116107ab575b50505050508152505090508060000151925080602001515167ffffffffffffffff8111156107ef576107ef611421565b604051908082528060200260200182016040528015610818578160200160208202803683370190505b50915060005b81602001515181101561089057612710826020015182815181106108445761084461181b565b6020026020010151866108579190611831565b6108619190611866565b8382815181106108735761087361181b565b6020908102919091010152806108888161187a565b91505061081e565b50509250929050565b6108a33383610a77565b6108bf5760405162461bcd60e51b81526004016103b49061179c565b6108cb84848484610e62565b50505050565b6000818152600260205260409020546060906001600160a01b03166109505760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016103b4565b600061096760408051602081019091526000815290565b9050600081511161098757604051806020016040528060008152506109b2565b8061099184610e95565b6040516020016109a2929190611893565b6040516020818303038152906040525b9392505050565b60006001600160e01b031982166380ac58cd60e01b14806109ea57506001600160e01b03198216635b5e139f60e01b145b806102a757506301ffc9a760e01b6001600160e01b03198316146102a7565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610a3e8261053a565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b0316610af05760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103b4565b6000610afb8361053a565b9050806001600160a01b0316846001600160a01b03161480610b4257506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610b665750836001600160a01b0316610b5b8461033f565b6001600160a01b0316145b949350505050565b826001600160a01b0316610b818261053a565b6001600160a01b031614610be55760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b60648201526084016103b4565b6001600160a01b038216610c475760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103b4565b610c52600082610a09565b6001600160a01b0383166000908152600360205260408120805460019290610c7b9084906118c2565b90915550506001600160a01b0382166000908152600360205260408120805460019290610ca9908490611803565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b031603610d6b5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103b4565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610de28383610f96565b610def60008484846110d8565b6104e95760405162461bcd60e51b81526004016103b4906118d9565b6040805180820182528381526020808201849052600086815260078252929092208151805192939192610e4192849201906111d9565b506020828101518051610e5a926001850192019061123e565b505050505050565b610e6d848484610b6e565b610e79848484846110d8565b6108cb5760405162461bcd60e51b81526004016103b4906118d9565b606081600003610ebc5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610ee65780610ed08161187a565b9150610edf9050600a83611866565b9150610ec0565b60008167ffffffffffffffff811115610f0157610f01611421565b6040519080825280601f01601f191660200182016040528015610f2b576020820181803683370190505b5090505b8415610b6657610f406001836118c2565b9150610f4d600a8661192b565b610f58906030611803565b60f81b818381518110610f6d57610f6d61181b565b60200101906001600160f81b031916908160001a905350610f8f600a86611866565b9450610f2f565b6001600160a01b038216610fec5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103b4565b6000818152600260205260409020546001600160a01b0316156110515760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103b4565b6001600160a01b038216600090815260036020526040812080546001929061107a908490611803565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160a01b0384163b156111ce57604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061111c90339089908890889060040161193f565b6020604051808303816000875af1925050508015611157575060408051601f3d908101601f191682019092526111549181019061197c565b60015b6111b4573d808015611185576040519150601f19603f3d011682016040523d82523d6000602084013e61118a565b606091505b5080516000036111ac5760405162461bcd60e51b81526004016103b4906118d9565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610b66565b506001949350505050565b82805482825590600052602060002090810192821561122e579160200282015b8281111561122e57825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906111f9565b5061123a929150611279565b5090565b82805482825590600052602060002090810192821561122e579160200282015b8281111561122e57825182559160200191906001019061125e565b5b8082111561123a576000815560010161127a565b6001600160e01b0319811681146112a457600080fd5b50565b6000602082840312156112b957600080fd5b81356109b28161128e565b60005b838110156112df5781810151838201526020016112c7565b838111156108cb5750506000910152565b600081518084526113088160208601602086016112c4565b601f01601f19169290920160200192915050565b6020815260006109b260208301846112f0565b60006020828403121561134157600080fd5b5035919050565b80356001600160a01b038116811461135f57600080fd5b919050565b6000806040838503121561137757600080fd5b61138083611348565b946020939093013593505050565b6000806000606084860312156113a357600080fd5b6113ac84611348565b92506113ba60208501611348565b9150604084013590509250925092565b6000602082840312156113dc57600080fd5b6109b282611348565b600080604083850312156113f857600080fd5b61140183611348565b91506020830135801515811461141657600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561146057611460611421565b604052919050565b600067ffffffffffffffff82111561148257611482611421565b5060051b60200190565b600082601f83011261149d57600080fd5b813560206114b26114ad83611468565b611437565b82815260059290921b840181019181810190868411156114d157600080fd5b8286015b848110156114ec57803583529183019183016114d5565b509695505050505050565b60008060006060848603121561150c57600080fd5b61151584611348565b925060208085013567ffffffffffffffff8082111561153357600080fd5b818701915087601f83011261154757600080fd5b81356115556114ad82611468565b81815260059190911b8301840190848101908a83111561157457600080fd5b938501935b828510156115995761158a85611348565b82529385019390850190611579565b9650505060408701359250808311156115b157600080fd5b50506115bf8682870161148c565b9150509250925092565b600080604083850312156115dc57600080fd5b50508035926020909101359150565b604080825283519082018190526000906020906060840190828701845b8281101561162d5781516001600160a01b031684529284019290840190600101611608565b5050508381038285015284518082528583019183019060005b8181101561166257835183529284019291840191600101611646565b5090979650505050505050565b6000806000806080858703121561168557600080fd5b61168e85611348565b9350602061169d818701611348565b935060408601359250606086013567ffffffffffffffff808211156116c157600080fd5b818801915088601f8301126116d557600080fd5b8135818111156116e7576116e7611421565b6116f9601f8201601f19168501611437565b9150808252898482850101111561170f57600080fd5b808484018584013760008482840101525080935050505092959194509250565b6000806040838503121561174257600080fd5b61174b83611348565b915061175960208401611348565b90509250929050565b600181811c9082168061177657607f821691505b60208210810361179657634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60008219821115611816576118166117ed565b500190565b634e487b7160e01b600052603260045260246000fd5b600081600019048311821515161561184b5761184b6117ed565b500290565b634e487b7160e01b600052601260045260246000fd5b60008261187557611875611850565b500490565b60006001820161188c5761188c6117ed565b5060010190565b600083516118a58184602088016112c4565b8351908301906118b98183602088016112c4565b01949350505050565b6000828210156118d4576118d46117ed565b500390565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60008261193a5761193a611850565b500690565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611972908301846112f0565b9695505050505050565b60006020828403121561198e57600080fd5b81516109b28161128e56fea2646970667358221220edccfe52ff2790384592f1187f8b36cc7a804944614a8894ddc4c668b0b739f864736f6c634300080d0033";

type ERC721WithMultiRoyaltiesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721WithMultiRoyaltiesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721WithMultiRoyalties__factory extends ContractFactory {
  constructor(...args: ERC721WithMultiRoyaltiesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721WithMultiRoyalties> {
    return super.deploy(
      name_,
      symbol_,
      overrides || {}
    ) as Promise<ERC721WithMultiRoyalties>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): ERC721WithMultiRoyalties {
    return super.attach(address) as ERC721WithMultiRoyalties;
  }
  override connect(signer: Signer): ERC721WithMultiRoyalties__factory {
    return super.connect(signer) as ERC721WithMultiRoyalties__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721WithMultiRoyaltiesInterface {
    return new utils.Interface(_abi) as ERC721WithMultiRoyaltiesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721WithMultiRoyalties {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721WithMultiRoyalties;
  }
}
