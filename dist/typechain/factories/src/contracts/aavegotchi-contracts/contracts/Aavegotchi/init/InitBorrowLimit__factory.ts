/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../../common";
import type {
  InitBorrowLimit,
  InitBorrowLimitInterface,
} from "../../../../../../../src/contracts/aavegotchi-contracts/contracts/Aavegotchi/init/InitBorrowLimit";

const _abi = [
  {
    inputs: [],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610165806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e1c7392a14610030575b600080fd5b61003861003a565b005b6100476000806000610049565b565b61005382826100da565b6100785760405162461bcd60e51b815260040161006f906100f8565b60405180910390fd5b60006100826100f3565b63ffffffff8516600081815260508301602090815260408083208884529091528082208690555192935084928692917fc3b4b5fafa8b36849d27cff5f377ec8290610027b9f765143d9b324462a32f5791a450505050565b6000826100e9575060016100ed565b5060005b92915050565b600090565b6020808252601c908201527f4c696257686974656c6973743a20496e76616c6964205269676874730000000060408201526060019056fea2646970667358221220e446080ec70f79c911a1a980a7ce82c25fd990682e4ffa59c3d6054af1168dd564736f6c63430008010033";

type InitBorrowLimitConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InitBorrowLimitConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InitBorrowLimit__factory extends ContractFactory {
  constructor(...args: InitBorrowLimitConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<InitBorrowLimit> {
    return super.deploy(overrides || {}) as Promise<InitBorrowLimit>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): InitBorrowLimit {
    return super.attach(address) as InitBorrowLimit;
  }
  override connect(signer: Signer): InitBorrowLimit__factory {
    return super.connect(signer) as InitBorrowLimit__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InitBorrowLimitInterface {
    return new utils.Interface(_abi) as InitBorrowLimitInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InitBorrowLimit {
    return new Contract(address, _abi, signerOrProvider) as InitBorrowLimit;
  }
}
