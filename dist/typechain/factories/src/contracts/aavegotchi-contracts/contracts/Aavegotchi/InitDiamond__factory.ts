/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  InitDiamond,
  InitDiamondInterface,
} from "../../../../../../src/contracts/aavegotchi-contracts/contracts/Aavegotchi/InitDiamond";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "dao",
            type: "address",
          },
          {
            internalType: "address",
            name: "daoTreasury",
            type: "address",
          },
          {
            internalType: "address",
            name: "pixelCraft",
            type: "address",
          },
          {
            internalType: "address",
            name: "rarityFarming",
            type: "address",
          },
          {
            internalType: "address",
            name: "ghstContract",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "chainlinkKeyHash",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "chainlinkFee",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "vrfCoordinator",
            type: "address",
          },
          {
            internalType: "address",
            name: "linkAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "childChainManager",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
        ],
        internalType: "struct InitDiamond.Args",
        name: "_args",
        type: "tuple",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506106d0806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063d66736fe14610030575b600080fd5b61004361003e366004610441565b610045565b005b8051601d80546001600160a01b03199081166001600160a01b0393841617909155602080840151601e8054841691851691909117905560608085015182548416908516178255604080860151601f80549095169516949094179092558251918201909252602680825290916106269083013980516100cb91602191602090910190610321565b50610120810151601b80546001600160a01b0319166001600160a01b03909216919091179055604080518082018252601181527010585d9959dbdd18da1a511a585b5bdb99607a1b60208083019190915282518084019093526002835261563160f01b9083015261013b9161028c565b60225560006101486102f9565b6301ffc9a760e01b600090815260038201602090815260408083208054600160ff1991821681179092556307e4c70760e21b855282852080548216831790556348e2b09360e01b855282852080548216831790556307f5828d60e41b85529190932080549091169092179091556080840151601a80546001600160a01b03199081166001600160a01b039384161790915560a086015160255560c08601516026805471ffffffffffffffffffffffffffffffffffff191671ffffffffffffffffffffffffffffffffffff90921691909117905560e086015160278054831691841691909117905561010086015160288054909216921691909117905567016345785d8a0000603055610140840151805192935061026c926017929190910190610321565b50610160820151805161028791601891602090910190610321565b505050565b60006040518060800160405280604f815260200161064c604f913980519060200120838051906020012083805190602001206102c661031d565b306040516020016102db959493929190610577565b60405160208183030381529060405280519060200120905092915050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90565b4690565b82805461032d906105d4565b90600052602060002090601f01602090048101928261034f5760008555610395565b82601f1061036857805160ff1916838001178555610395565b82800160010185558215610395579182015b8281111561039557825182559160200191906001019061037a565b506103a19291506103a5565b5090565b5b808211156103a157600081556001016103a6565b80356001600160a01b03811681146103d157600080fd5b919050565b600082601f8301126103e6578081fd5b813567ffffffffffffffff8111156104005761040061060f565b610413601f8201601f19166020016105a3565b818152846020838601011115610427578283fd5b816020850160208301379081016020019190915292915050565b600060208284031215610452578081fd5b813567ffffffffffffffff80821115610469578283fd5b818401915061018080838703121561047f578384fd5b610488816105a3565b9050610493836103ba565b81526104a1602084016103ba565b60208201526104b2604084016103ba565b60408201526104c3606084016103ba565b60608201526104d4608084016103ba565b608082015260a083013560a082015260c083013560c08201526104f960e084016103ba565b60e082015261010061050c8185016103ba565b9082015261012061051e8482016103ba565b908201526101408381013583811115610535578586fd5b610541888287016103d6565b828401525050610160808401358381111561055a578586fd5b610566888287016103d6565b918301919091525095945050505050565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b604051601f8201601f1916810167ffffffffffffffff811182821017156105cc576105cc61060f565b604052919050565b6002810460018216806105e857607f821691505b6020821081141561060957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fdfe68747470733a2f2f61617665676f746368692e636f6d2f6d657461646174612f6974656d732f454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e743235362073616c742c6164647265737320766572696679696e67436f6e747261637429a264697066735822122063129e7b6c4edb41f5497116f9a9ae25a12ff0571c1715806445f5966e8a7a0864736f6c63430008010033";

type InitDiamondConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InitDiamondConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InitDiamond__factory extends ContractFactory {
  constructor(...args: InitDiamondConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<InitDiamond> {
    return super.deploy(overrides || {}) as Promise<InitDiamond>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): InitDiamond {
    return super.attach(address) as InitDiamond;
  }
  override connect(signer: Signer): InitDiamond__factory {
    return super.connect(signer) as InitDiamond__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InitDiamondInterface {
    return new utils.Interface(_abi) as InitDiamondInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InitDiamond {
    return new Contract(address, _abi, signerOrProvider) as InitDiamond;
  }
}
